/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 22:50:16 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import org.cs362.dominion.ActionCard;
import org.cs362.dominion.DominionBoard;
import org.cs362.dominion.GameState;
import org.cs362.dominion.TreasureCard;
import org.cs362.dominion.VictoryCard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 6);
      TreasureCard treasureCard0 = (TreasureCard)gameState0.currentPlayer.TrashFromHand();
      TreasureCard treasureCard1 = (TreasureCard)treasureCard0.clone();
      assertTrue(treasureCard1.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.GOLD;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      TreasureCard treasureCard1 = (TreasureCard)treasureCard0.clone();
      assertFalse(treasureCard1.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.GOLD;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      treasureCard0.GetValue();
      assertFalse(treasureCard0.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.DUCHY;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      victoryCard0.cost = (-452);
      int int0 = victoryCard0.GetValue();
      assertFalse(victoryCard0.GetTrashed());
      assertEquals((-452), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.VILLAGE;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      assertFalse(actionCard0.GetTrashed());
      
      actionCard0.SetTrashed(true);
      boolean boolean0 = actionCard0.GetTrashed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.GOLD;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      treasureCard0.name = null;
      treasureCard0.GetName();
      assertFalse(treasureCard0.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.COPPER;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      treasureCard0.name = "";
      treasureCard0.GetName();
      assertFalse(treasureCard0.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      VictoryCard victoryCard0 = (VictoryCard)dominionBoard0.BuyCurse();
      int int0 = victoryCard0.GetValue();
      assertFalse(victoryCard0.GetTrashed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      VictoryCard victoryCard0 = (VictoryCard)dominionBoard0.BuyCurse();
      boolean boolean0 = victoryCard0.GetTrashed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.GOLD;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      treasureCard0.GetName();
      assertFalse(treasureCard0.GetTrashed());
  }
}
