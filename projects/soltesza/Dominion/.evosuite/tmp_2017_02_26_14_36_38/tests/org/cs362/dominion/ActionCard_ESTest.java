/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 22:39:16 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.cs362.dominion.ActionCard;
import org.cs362.dominion.DominionBoard;
import org.cs362.dominion.GameState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActionCard_ESTest extends ActionCard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.GREAT_HALL;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      actionCard0.SetTrashed(true);
      ActionCard actionCard1 = actionCard0.clone();
      assertEquals("Great Hall", actionCard1.GetName());
      assertNotSame(actionCard1, actionCard0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.ADVENTURER;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 40);
      gameState0.DrawCards(gameState0.currentPlayer, 40);
      // Undeclared exception!
      try { 
        actionCard0.PlayAction(gameState0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.REMODEL;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      GameState gameState0 = new GameState((DominionBoard) null, 7);
      // Undeclared exception!
      try { 
        actionCard0.PlayAction(gameState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ActionCard actionCard0 = null;
      try {
        actionCard0 = new ActionCard((ActionCard.ActionType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.valueOf("ADVENTURER");
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 132);
      actionCard0.PlayAction(gameState0);
      actionCard0.PlayAction(gameState0);
      assertEquals("Adventurer", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.VILLAGE;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 4);
      actionCard0.PlayAction(gameState0);
      assertFalse(actionCard0.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.SMITHY;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 574);
      actionCard0.PlayAction(gameState0);
      assertFalse(actionCard0.GetTrashed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.REMODEL;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 206);
      actionCard0.PlayAction(gameState0);
      assertEquals("Remodel", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.MINE;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 12);
      actionCard0.PlayAction(gameState0);
      assertEquals("Mine", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.FEAST;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 544);
      actionCard0.PlayAction(gameState0);
      assertEquals("Feast", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.EMBARGO;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 366);
      actionCard0.PlayAction(gameState0);
      assertEquals("Embargo", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.CUTPURSE;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      GameState gameState0 = new GameState((DominionBoard) null, 285);
      actionCard0.PlayAction(gameState0);
      actionCard0.PlayAction(gameState0);
      actionCard0.PlayAction(gameState0);
      assertEquals("Cutpurse", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.COUNCIL_ROOM;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 588);
      actionCard0.PlayAction(gameState0);
      assertEquals("Council Room", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.BARON;
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 588);
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      actionCard0.PlayAction(gameState0);
      assertEquals("Baron", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.AMBASSADOR;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      DominionBoard dominionBoard0 = new DominionBoard();
      GameState gameState0 = new GameState(dominionBoard0, 10);
      actionCard0.PlayAction(gameState0);
      assertEquals("Ambassador", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.GREAT_HALL;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      GameState gameState0 = new GameState(dominionBoard0, 662);
      actionCard0.PlayAction(gameState0);
      assertEquals("Great Hall", actionCard0.GetName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.GREAT_HALL;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      ActionCard actionCard1 = actionCard0.clone();
      assertNotSame(actionCard1, actionCard0);
      assertEquals("Great Hall", actionCard1.GetName());
  }
}
