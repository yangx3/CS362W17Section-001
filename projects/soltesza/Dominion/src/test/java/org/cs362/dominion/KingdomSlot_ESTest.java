/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 22:48:47 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.ActionCard;
import org.cs362.dominion.Card;
import org.cs362.dominion.DominionBoard;
import org.cs362.dominion.KingdomSlot;
import org.cs362.dominion.Player;
import org.cs362.dominion.TreasureCard;
import org.cs362.dominion.VictoryCard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KingdomSlot_ESTest extends KingdomSlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.GOLD;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) treasureCard0, (-29));
      TreasureCard treasureCard1 = (TreasureCard)kingdomSlot0.DrawCard();
      assertNull(treasureCard1);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ActionCard.ActionType actionCard_ActionType0 = ActionCard.ActionType.EMBARGO;
      ActionCard actionCard0 = new ActionCard(actionCard_ActionType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) actionCard0, 0);
      boolean boolean0 = kingdomSlot0.IsEmpty();
      assertTrue(boolean0);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.ESTATE;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      VictoryCard victoryCard1 = victoryCard0.clone();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard1, 481);
      KingdomSlot kingdomSlot1 = new KingdomSlot((Card) victoryCard0, 481);
      victoryCard1.cost = 481;
      int int0 = kingdomSlot0.compareTo(kingdomSlot1);
      assertEquals(480, int0);
      assertEquals(0, kingdomSlot1.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.SILVER;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) treasureCard0, 0);
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.DUCHY;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot1 = new KingdomSlot((Card) victoryCard0, 0);
      int int0 = kingdomSlot0.compareTo(kingdomSlot1);
      assertEquals(0, kingdomSlot1.GetEmbargoes());
      assertEquals((-3), int0);
      assertTrue(kingdomSlot1.IsEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      VictoryCard victoryCard0 = (VictoryCard)dominionBoard0.BuyCurse();
      assertNotNull(victoryCard0);
      
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, (-1142));
      kingdomSlot0.GetValue();
      assertTrue(kingdomSlot0.IsEmpty());
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.GARDENS;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      VictoryCard victoryCard1 = victoryCard0.clone();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard1, (-407));
      victoryCard1.cost = (-407);
      kingdomSlot0.GetValue();
      assertEquals(0, kingdomSlot0.GetEmbargoes());
      assertTrue(kingdomSlot0.IsEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      VictoryCard victoryCard0 = (VictoryCard)dominionBoard0.BuyCurse();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, 0);
      kingdomSlot0.AddEmbargo();
      int int0 = kingdomSlot0.GetEmbargoes();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) null, 4);
      kingdomSlot0.GetCard();
      assertFalse(kingdomSlot0.IsEmpty());
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      Player player0 = new Player("(-Ozb^u{K]&0_2TX", dominionBoard0);
      TreasureCard treasureCard0 = (TreasureCard)player0.TrashFromHand();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) treasureCard0, 864);
      kingdomSlot0.GetCard();
      assertFalse(kingdomSlot0.IsEmpty());
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      Player player0 = new Player("org.cs362.dominion.TreasureCard", dominionBoard0);
      TreasureCard treasureCard0 = (TreasureCard)player0.TrashFromHand();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) treasureCard0, 1941);
      TreasureCard treasureCard1 = (TreasureCard)kingdomSlot0.DrawCard();
      assertFalse(kingdomSlot0.IsEmpty());
      assertNotNull(treasureCard1);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.DUCHY;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, 1282);
      // Undeclared exception!
      try { 
        kingdomSlot0.compareTo((KingdomSlot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.KingdomSlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) null, (-926));
      // Undeclared exception!
      try { 
        kingdomSlot0.GetValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.KingdomSlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.DUCHY;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, 1282);
      VictoryCard victoryCard1 = (VictoryCard)kingdomSlot0.DrawCard();
      assertEquals(0, kingdomSlot0.GetEmbargoes());
      assertNotNull(victoryCard1);
      assertFalse(kingdomSlot0.IsEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) null, 714);
      boolean boolean0 = kingdomSlot0.IsEmpty();
      assertFalse(boolean0);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.CURSE;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, 0);
      VictoryCard victoryCard1 = (VictoryCard)kingdomSlot0.DrawCard();
      assertEquals(0, kingdomSlot0.GetEmbargoes());
      assertNull(victoryCard1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DominionBoard dominionBoard0 = new DominionBoard();
      VictoryCard victoryCard0 = (VictoryCard)dominionBoard0.BuyCurse();
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, (-1142));
      VictoryCard victoryCard1 = (VictoryCard)kingdomSlot0.GetCard();
      assertTrue(kingdomSlot0.IsEmpty());
      assertNotNull(victoryCard1);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.GARDENS;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, (-407));
      boolean boolean0 = kingdomSlot0.IsEmpty();
      assertEquals(0, kingdomSlot0.GetEmbargoes());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.GARDENS;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, (-407));
      int int0 = kingdomSlot0.GetEmbargoes();
      assertEquals(0, int0);
      assertTrue(kingdomSlot0.IsEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VictoryCard.VictoryType victoryCard_VictoryType0 = VictoryCard.VictoryType.GARDENS;
      VictoryCard victoryCard0 = new VictoryCard(victoryCard_VictoryType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) victoryCard0, (-407));
      int int0 = kingdomSlot0.compareTo(kingdomSlot0);
      assertTrue(kingdomSlot0.IsEmpty());
      assertEquals(0, int0);
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TreasureCard.TreasureType treasureCard_TreasureType0 = TreasureCard.TreasureType.SILVER;
      TreasureCard treasureCard0 = new TreasureCard(treasureCard_TreasureType0);
      KingdomSlot kingdomSlot0 = new KingdomSlot((Card) treasureCard0, 9);
      kingdomSlot0.GetValue();
      assertFalse(kingdomSlot0.IsEmpty());
      assertEquals(0, kingdomSlot0.GetEmbargoes());
  }
}
