/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 01:22:41 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.cs362.dominion.board;
import org.cs362.dominion.card;
import org.cs362.dominion.game;
import org.cs362.dominion.player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class game_ESTest extends game_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      player player0 = new player(";e,MM9BIGx/!8c5_PL");
      // Undeclared exception!
      try { 
        game.takeTurn(player0, (board) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.game", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      player player0 = new player("qx>C0**dcP7^?lR.~a");
      game.cleanUpPhase(player0);
      board board0 = new board();
      // Undeclared exception!
      try { 
        game.takeTurn(player0, board0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        game.printDeck((List<card>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.game", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        game.cleanUpPhase((player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.game", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        game.checkVictoryConditions((board) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.game", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      player player0 = new player("");
      board board0 = new board();
      game.buyPhase(player0, board0);
      //  // Unstable assertion: assertEquals(5, player0.getGold());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      game.actionPhase();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      game.phasePrint("\n----------");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      game.printline("John");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        game.main((String[]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      board board0 = new board();
      boolean boolean0 = game.checkVictoryConditions(board0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random.setNextRandom((-1342));
      player player0 = new player("");
      // Undeclared exception!
      try { 
        game.buyPhase(player0, (board) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.game", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      List<card> list0 = card.initGoldStock();
      game.printDeck(list0);
      assertEquals(10, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      player player0 = new player("(k");
      board board0 = new board();
      game.takeTurn(player0, board0);
      //  // Unstable assertion: assertEquals(4, player0.getGold());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      game game0 = new game();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      player player0 = new player("");
      game.cleanUpPhase(player0);
      // Undeclared exception!
      try { 
        game.cleanUpPhase(player0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }
}
