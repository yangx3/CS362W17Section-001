/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 05:42:35 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.cs362.dominion.Builder;
import org.cs362.dominion.Card;
import org.cs362.dominion.Deck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Builder_ESTest extends Builder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Deck deck0 = Builder.buildPlayerStartDeck();
      assertEquals(10, deck0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Gold;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, 3738, 3738, 3738, 3738, 3738, 3738);
      Deck deck0 = Builder.buildBoard(card0);
      assertEquals(10, deck0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Silver;
      Card.Type card_Type0 = Card.Type.Victory;
      Card card0 = new Card(card_Name0, card_Type0, 1250, 1250, 1250, 1250, 1250, 1250);
      Deck deck0 = Builder.buildBoard(card0);
      assertEquals(10, deck0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Copper;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, 1250, 1250, 1250, 1250, 1250, 1250);
      Deck deck0 = Builder.buildBoard(card0);
      assertEquals(10, deck0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Card card0 = new Card();
      // Undeclared exception!
      try { 
        Builder.buildBoard(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<Card> arrayList0 = Builder.buildGeneralDecks();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Builder builder0 = new Builder();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayList<Card> arrayList0 = Builder.buildNonKingdomCardDecks();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayList<Card> arrayList0 = Builder.buildKindomDecks();
      assertFalse(arrayList0.isEmpty());
  }
}
