/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 05:43:20 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.Card;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Province;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, (-4009), (-4009), (-4009), (-4009), (-4009), (-4009));
      Card.Type card_Type1 = card0.getType();
      assertEquals("Action", card_Type1.name());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Council_Room;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, 24, 24, (-1248), (-1248), (-1248), 24);
      Integer integer0 = card0.getPoints();
      assertEquals((-1248), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getPoints();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Adventurer;
      Card.Type card_Type0 = Card.Type.Curse;
      Card card0 = new Card(card_Name0, card_Type0, 717, 717, 717, 717, 717, 717);
      Integer integer0 = card0.getPoints();
      assertEquals(717, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card card0 = new Card();
      card0.getName();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Duchy;
      Card.Type card_Type0 = Card.Type.ActionAttack;
      Card card0 = new Card(card_Name0, card_Type0, 31, 31, 31, 31, 2787, 2787);
      Card.Name card_Name1 = card0.getName();
      assertEquals(Card.Name.Duchy, card_Name1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card card0 = new Card();
      String string0 = card0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getCost();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Estate;
      Card.Type card_Type0 = Card.Type.Curse;
      Card card0 = new Card(card_Name0, card_Type0, 24, 3087, 1, (-1127), 959, 658);
      Integer integer0 = card0.getCost();
      assertEquals(24, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getCoinsWorth();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Baron;
      Card.Type card_Type0 = Card.Type.ActionVictory;
      Card card0 = new Card(card_Name0, card_Type0, (-2120), (-2120), (-2120), 0, (-468), 999);
      Integer integer0 = card0.getCoinsWorth();
      assertEquals((-2120), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getCards();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Province;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, (-4009), (-4009), (-4009), (-4009), (-4009), (-4009));
      Integer integer0 = card0.getCards();
      assertEquals((-4009), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Province;
      Card.Type card_Type0 = Card.Type.Action;
      Card card0 = new Card(card_Name0, card_Type0, (-4009), (-4009), (-4009), (-4009), (-4009), (-4009));
      Integer integer0 = card0.getBuys();
      assertEquals((-4009), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Estate;
      Card.Type card_Type0 = Card.Type.Curse;
      Card card0 = new Card(card_Name0, card_Type0, 24, 3087, 1, (-1127), 959, 658);
      Integer integer0 = card0.getBuys();
      assertEquals(959, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getActions();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Estate;
      Card.Type card_Type0 = Card.Type.Curse;
      Card card0 = new Card(card_Name0, card_Type0, 24, 3087, 1, (-1127), 959, 658);
      Integer integer0 = card0.getActions();
      assertEquals((-1127), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card.Type card_Type0 = Card.Type.ActionVictory;
      Card card0 = null;
      try {
        card0 = new Card((Card.Name) null, card_Type0, 2286, 2286, 276, 2286, 2147, 276);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Gold;
      String string0 = card_Name0.getDesription();
      assertEquals("+3 Coins", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Adventurer;
      Card.Type card_Type0 = Card.Type.Curse;
      Card card0 = new Card(card_Name0, card_Type0, 717, 717, 717, 717, 717, 717);
      Card.Type card_Type1 = card0.getType();
      assertEquals("Curse", card_Type1.name());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Card card0 = new Card();
      card0.getType();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Curse;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 24, 24, 67, 24, 67, (-2100));
      Integer integer0 = card0.getActions();
      assertEquals(24, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Curse;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 24, 24, 67, 24, 67, (-2100));
      String string0 = card0.toString();
      assertEquals("Curse", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Card card0 = new Card();
      Integer integer0 = card0.getBuys();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Gold;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 104, 104, 104, 104, 37, 2555);
      Integer integer0 = card0.getCards();
      assertEquals(2555, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Village;
      Card.Type card_Type0 = Card.Type.ActionVictory;
      Card card0 = new Card(card_Name0, card_Type0, (-3601), (-3601), 3206, (-3601), 3206, (-142));
      Integer integer0 = card0.getCost();
      assertEquals((-3601), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Village;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 16, 0, 0, 19, 16, 19);
      Card.Name card_Name1 = card0.getName();
      assertEquals("Village", card_Name1.name());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Curse;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 24, 24, 67, 24, 67, (-2100));
      String string0 = card0.getDescription();
      assertEquals("-1 Victory point", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Curse;
      Card.Type card_Type0 = Card.Type.Treasure;
      Card card0 = new Card(card_Name0, card_Type0, 24, 24, 67, 24, 67, (-2100));
      Integer integer0 = card0.getCoinsWorth();
      assertEquals(24, (int)integer0);
  }
}
