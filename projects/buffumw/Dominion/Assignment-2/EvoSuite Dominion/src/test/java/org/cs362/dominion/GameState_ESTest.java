/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 05:38:41 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.cs362.dominion.Card;
import org.cs362.dominion.Deck;
import org.cs362.dominion.GameState;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class GameState_ESTest extends GameState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      gameState0.aWinner();
      gameState0.attackPlayers(arrayList1, (Player) null);
      ArrayList<Deck> arrayList2 = gameState0.game;
      arrayList2.add(gameState0.trash);
      gameState0.printBoard();
      gameState0.countEmpties();
      Card.Name card_Name0 = Card.Name.Adventurer;
      card_Name0.getDesription();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      arrayList0.listIterator();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.adventurer((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Deck deck0 = new Deck(arrayList0);
      ArrayList<Card> arrayList1 = deck0.getDeck();
      GameState gameState0 = new GameState(arrayList1);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.salvager((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.ambassador((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.countEmpties();
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.feast((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Deck deck0 = new Deck(arrayList0);
      ArrayList<Card> arrayList1 = deck0.getDeck();
      GameState gameState0 = new GameState(arrayList1);
      ArrayList<Deck> arrayList2 = gameState0.game;
      arrayList2.add(gameState0.trash);
      arrayList2.add(gameState0.trash);
      gameState0.game = arrayList2;
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.gardens((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Deck deck0 = new Deck(arrayList0);
      ArrayList<Card> arrayList1 = deck0.getDeck();
      GameState gameState0 = new GameState(arrayList1);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.baron((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      Player player0 = new Player();
      ArrayList<String> arrayList1 = player0.playActions();
      gameState0.attackPlayers(arrayList1, player0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        gameState0.adventurer(player0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Error: index out of bounds
         //
         assertThrownBy("org.cs362.dominion.Deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      // Undeclared exception!
      try { 
        gameState0.embargo((Player) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card.Name.values();
      Card.Type.values();
      GameState gameState0 = null;
      try {
        gameState0 = new GameState((ArrayList<Card>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Deck deck0 = new Deck();
      ArrayList<Card> arrayList0 = deck0.getDeck();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.addPlayer((Player) null);
      // Undeclared exception!
      try { 
        gameState0.aWinner();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      Player player0 = null;
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Error: This game must be played by 2 - 4 players, please restart
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.printBoard();
      gameState0.printBoard();
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.aWinner();
      // Undeclared exception!
      try { 
        gameState0.feast((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      ArrayList<Card> arrayList1 = new ArrayList<Card>();
      GameState gameState1 = new GameState(arrayList1);
      Card card0 = null;
      arrayList0.add((Card) null);
      // Undeclared exception!
      try { 
        gameState1.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      Player player0 = new Player();
      gameState0.cutpurse(player0);
      gameState0.ambassador(player0);
      player0.addCoins(0);
      player0.setDeck(gameState0.trash);
      gameState0.ambassador(player0);
      // Undeclared exception!
      try { 
        player0.draw();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Error: index out of bounds
         //
         assertThrownBy("org.cs362.dominion.Deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Deck deck0 = new Deck();
      ArrayList<Card> arrayList0 = deck0.getDeck();
      GameState gameState0 = new GameState(arrayList0);
      Player player0 = new Player();
      player0.playActions();
      gameState0.councilRoom(player0);
      gameState0.baron(player0);
      gameState0.feast(player0);
      player0.addCoins((-4251));
      gameState0.removeEmptyDecks();
      gameState0.gardens(player0);
      Card.Name card_Name0 = Card.Name.Embargo;
      gameState0.gardens(player0);
      // Undeclared exception!
      try { 
        Card.Name.valueOf("Second");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.cs362.dominion.Card.Name.Second
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Card.Type.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.cs362.dominion.Card.Type.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState(arrayList0);
      gameState0.aWinner();
      gameState0.councilRoom((Player) null);
      gameState0.removeEmptyDecks();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Card.Name card_Name0 = Card.Name.Mine;
      String string0 = "I@>";
      // Undeclared exception!
      try { 
        Card.Name.valueOf("/5||hf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.cs362.dominion.Card.Name./5||hf
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }
}
