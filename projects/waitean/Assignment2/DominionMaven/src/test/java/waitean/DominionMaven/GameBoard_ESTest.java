/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 01 21:12:50 GMT 2017
 */

package waitean.DominionMaven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import waitean.DominionMaven.Card;
import waitean.DominionMaven.GameBoard;
import waitean.DominionMaven.Pile;
import waitean.DominionMaven.Player;
import waitean.DominionMaven.Randomness;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GameBoard_ESTest extends GameBoard_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 27 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 2. waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;: root-Branch
   * Goal 3. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 4. waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: I15 Branch 9 IFEQ L68 - true
   * Goal 5. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 6. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 7. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 8. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 9. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 10. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 11. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 12. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 13. Weak Mutation 9: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> -2
   * Goal 14. Weak Mutation 64: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:68 - ReplaceComparisonOperator == -> !=
   * Goal 15. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 16. [METHOD] waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   * Goal 17. [METHOD] waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;
   * Goal 18. [METHODNOEX] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 19. [METHODNOEX] waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   * Goal 20. [METHODNOEX] waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;
   * Goal 21. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 22. Branch waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: I15 Branch 9 IFEQ L68 - true in context: waitean.DominionMaven.GameBoard:filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   * Goal 23. Branch waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;: root-Branch in context: waitean.DominionMaven.GameBoard:getPlayers()Ljava/util/ArrayList;
   * Goal 24. [Output]: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 25. [Output]: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 26. [Output]: waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 27. [Output]: waitean.DominionMaven.GameBoard.getPlayers()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      Card.CardType card_CardType0 = Card.CardType.TREASURE;
      gameBoard0.filterPiles(card_CardType0);
      ArrayList<Player> arrayList1 = gameBoard0.getPlayers();
      assertNotSame(arrayList1, arrayList0);
  }

  //Test case number: 1
  /*
   * 28 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 32
   * Goal 2. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 3. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 4. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 5. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 6. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 7. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 8. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 9. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 10. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 11. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 12. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 13. <init>(Ljava/util/ArrayList;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 14. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - false
   * Goal 15. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I22 Branch 2 IF_ICMPLE L27 - true
   * Goal 16. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I53 Branch 3 IFEQ L32 - false
   * Goal 17. Weak Mutation 8: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 11: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 19. Weak Mutation 12: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 20. Weak Mutation 13: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 21. Weak Mutation 14: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 0
   * Goal 22. Weak Mutation 15: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 1
   * Goal 23. Weak Mutation 16: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> -1
   * Goal 24. Weak Mutation 17: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 5
   * Goal 25. Weak Mutation 18: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 7
   * Goal 26. Weak Mutation 21: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator <= -> ==
   * Goal 27. Weak Mutation 22: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:30 - ReplaceConstant - newPLayers.size =  -> 
   * Goal 28. Weak Mutation 23: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:32 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      arrayList0.add((Player) null);
      Player player0 = new Player("");
      arrayList0.add(player0);
      player0.actions = 6;
      player0.buyCards();
      arrayList0.add(player0);
      arrayList0.add(player0);
      GameBoard gameBoard0 = null;
      try {
        gameBoard0 = new GameBoard(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("waitean.DominionMaven.GameBoard", e);
      }
  }

  //Test case number: 2
  /*
   * 47 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 2. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 3. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 5. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 140
   * Goal 6. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 13
   * Goal 7. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 141
   * Goal 8. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 142
   * Goal 9. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 145
   * Goal 10. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 146
   * Goal 11. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 24
   * Goal 12. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 25
   * Goal 13. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 26
   * Goal 14. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 27
   * Goal 15. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 59
   * Goal 16. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 28
   * Goal 17. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 63
   * Goal 18. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 19. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 20. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true
   * Goal 21. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: I21 Branch 25 IFEQ L142 - true
   * Goal 22. initializeGame(Ljava/util/ArrayList;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 23. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 24. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 25. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 26. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 27. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 9: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 62: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:59 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 123: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:141 - ReplaceConstant - ----Game Board----
 -> 
   * Goal 34. Weak Mutation 124: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:142 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 126: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:145 - ReplaceConstant - ----Game Board---- -> 
   * Goal 36. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 37. [METHOD] waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 38. [METHOD] waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V
   * Goal 39. [METHOD] waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;
   * Goal 40. [METHODNOEX] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 41. [METHODNOEX] waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 42. [METHODNOEX] waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;
   * Goal 43. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 44. Branch waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true in context: waitean.DominionMaven.GameBoard:getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 45. Branch waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: I21 Branch 25 IFEQ L142 - true in context: waitean.DominionMaven.GameBoard:toString()Ljava/lang/String;
   * Goal 46. [Output]: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:Null
   * Goal 47. [Output]: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:NonEmptyString
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      gameBoard0.toString();
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      gameBoard0.getCardFromPiles(card_CardName0);
      // Undeclared exception!
      try { 
        gameBoard0.initializeGame((ArrayList<Player>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("waitean.DominionMaven.GameBoard", e);
      }
  }

  //Test case number: 3
  /*
   * 67 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 96
   * Goal 2. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 100
   * Goal 3. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 101
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 5. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 6. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 7. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 8. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 140
   * Goal 9. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 10. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 11. waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true
   * Goal 12. waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true
   * Goal 13. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: I21 Branch 25 IFEQ L142 - true
   * Goal 14. waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: root-Branch
   * Goal 15. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true
   * Goal 16. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 17. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 18. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 19. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 20. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 9: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> -2
   * Goal 25. Weak Mutation 87: waitean.DominionMaven.GameBoard.isGameOver()Z:100 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 88: waitean.DominionMaven.GameBoard.isGameOver()Z:101 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 97: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp Negation of numEmptyPiles
   * Goal 28. Weak Mutation 98: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC 1 numEmptyPiles
   * Goal 29. Weak Mutation 99: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC -1 numEmptyPiles
   * Goal 30. Weak Mutation 100: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 0
   * Goal 31. Weak Mutation 101: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 1
   * Goal 32. Weak Mutation 102: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> -1
   * Goal 33. Weak Mutation 103: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 2
   * Goal 34. Weak Mutation 104: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 4
   * Goal 35. Weak Mutation 106: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 109: waitean.DominionMaven.GameBoard.isGameOver()Z:110 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 123: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:141 - ReplaceConstant - ----Game Board----
 -> 
   * Goal 38. Weak Mutation 124: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:142 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 126: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:145 - ReplaceConstant - ----Game Board---- -> 
   * Goal 40. Weak Mutation 73: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:85 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 74: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:87 - ReplaceComparisonOperator == -> !=
   * Goal 42. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 43. [METHOD] waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;
   * Goal 44. [METHOD] waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;
   * Goal 45. [METHOD] waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;
   * Goal 46. [METHOD] waitean.DominionMaven.GameBoard.isGameOver()Z
   * Goal 47. [METHODNOEX] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 48. [METHODNOEX] waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;
   * Goal 49. [METHODNOEX] waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;
   * Goal 50. [METHODNOEX] waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;
   * Goal 51. [METHODNOEX] waitean.DominionMaven.GameBoard.isGameOver()Z
   * Goal 52. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 53. Branch waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: I21 Branch 25 IFEQ L142 - true in context: waitean.DominionMaven.GameBoard:toString()Ljava/lang/String;
   * Goal 54. Branch waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: root-Branch in context: waitean.DominionMaven.GameBoard:getPiles()Ljava/util/ArrayList;
   * Goal 55. Branch waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true in context: waitean.DominionMaven.GameBoard:getWinners()Ljava/util/ArrayList;
   * Goal 56. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 57. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 58. [Output]: waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;:NonEmptyString
   * Goal 59. [Output]: waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 60. [Output]: waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 61. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 62. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 63. [Output]: waitean.DominionMaven.GameBoard.isGameOver()Z:False
   * Goal 64. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 141
   * Goal 65. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 142
   * Goal 66. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 145
   * Goal 67. waitean.DominionMaven.GameBoard.toString()Ljava/lang/String;: Line 146
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      boolean boolean0 = gameBoard0.isGameOver();
      assertFalse(boolean0);
      
      String string0 = gameBoard0.toString();
      assertEquals("----Game Board----\n----Game Board----", string0);
      
      gameBoard0.getWinners();
      ArrayList<Pile> arrayList1 = gameBoard0.getPiles();
      assertTrue(arrayList1.isEmpty());
  }

  //Test case number: 4
  /*
   * 12 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 24
   * Goal 2. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 3. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 25
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 5. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 26
   * Goal 6. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 7. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 8. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 9. <init>(Ljava/util/ArrayList;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 10. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 11. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 12. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GameBoard gameBoard0 = null;
      try {
        gameBoard0 = new GameBoard((ArrayList<Player>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("waitean.DominionMaven.GameBoard", e);
      }
  }

  //Test case number: 5
  /*
   * 48 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.printWinner()V: Line 129
   * Goal 2. waitean.DominionMaven.GameBoard.printWinner()V: Line 130
   * Goal 3. waitean.DominionMaven.GameBoard.printWinner()V: Line 131
   * Goal 4. waitean.DominionMaven.GameBoard.printWinner()V: Line 132
   * Goal 5. waitean.DominionMaven.GameBoard.printWinner()V: Line 137
   * Goal 6. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 88
   * Goal 7. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 89
   * Goal 8. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 90
   * Goal 9. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 91
   * Goal 10. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 92
   * Goal 11. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 93
   * Goal 12. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 95
   * Goal 13. waitean.DominionMaven.GameBoard.printWinner()V: I24 Branch 24 IFEQ L130 - true
   * Goal 14. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I29 Branch 14 IF_ICMPLE L88 - true
   * Goal 15. waitean.DominionMaven.GameBoard.printWinner()V: I10 Branch 23 IF_ICMPLE L128 - false
   * Goal 16. waitean.DominionMaven.GameBoard.printWinner()V: I24 Branch 24 IFEQ L130 - false
   * Goal 17. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - false
   * Goal 18. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I29 Branch 14 IF_ICMPLE L88 - false
   * Goal 19. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I51 Branch 15 IF_ICMPNE L92 - false
   * Goal 20. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 21. waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: root-Branch
   * Goal 22. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I22 Branch 2 IF_ICMPLE L27 - true
   * Goal 23. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I53 Branch 3 IFEQ L32 - true
   * Goal 24. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I215 Branch 5 IFEQ L50 - true
   * Goal 25. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I225 Branch 6 IF_ACMPNE L51 - true
   * Goal 26. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true
   * Goal 27. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - false
   * Goal 28. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I53 Branch 3 IFEQ L32 - false
   * Goal 29. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I76 Branch 4 IF_ICMPNE L37 - false
   * Goal 30. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I215 Branch 5 IFEQ L50 - false
   * Goal 31. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I225 Branch 6 IF_ACMPNE L51 - false
   * Goal 32. Weak Mutation 75: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:88 - InsertUnaryOp Negation of winningScore
   * Goal 33. Weak Mutation 76: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:88 - InsertUnaryOp IINC 1 winningScore
   * Goal 34. Weak Mutation 77: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:88 - InsertUnaryOp IINC -1 winningScore
   * Goal 35. Weak Mutation 78: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:88 - ReplaceComparisonOperator <= -> -1
   * Goal 36. Weak Mutation 79: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:88 - ReplaceComparisonOperator <= -> <
   * Goal 37. Weak Mutation 81: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:92 - InsertUnaryOp Negation of winningScore
   * Goal 38. Weak Mutation 82: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:92 - InsertUnaryOp IINC 1 winningScore
   * Goal 39. Weak Mutation 83: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:92 - InsertUnaryOp IINC -1 winningScore
   * Goal 40. Weak Mutation 84: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:92 - ReplaceComparisonOperator != -> -1
   * Goal 41. Weak Mutation 116: waitean.DominionMaven.GameBoard.printWinner()V:129 - ReplaceConstant - There was a tie! -> 
   * Goal 42. Weak Mutation 117: waitean.DominionMaven.GameBoard.printWinner()V:130 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 118: waitean.DominionMaven.GameBoard.printWinner()V:131 - ReplaceConstant -  with a score of  -> 
   * Goal 44. [METHOD] waitean.DominionMaven.GameBoard.printWinner()V
   * Goal 45. [METHODNOEX] waitean.DominionMaven.GameBoard.printWinner()V
   * Goal 46. Branch waitean.DominionMaven.GameBoard.printWinner()V: I10 Branch 23 IF_ICMPLE L128 - false in context: waitean.DominionMaven.GameBoard:printWinner()V
   * Goal 47. Branch waitean.DominionMaven.GameBoard.printWinner()V: I24 Branch 24 IFEQ L130 - true in context: waitean.DominionMaven.GameBoard:printWinner()V
   * Goal 48. Branch waitean.DominionMaven.GameBoard.printWinner()V: I24 Branch 24 IFEQ L130 - false in context: waitean.DominionMaven.GameBoard:printWinner()V
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      Player player0 = new Player("<\"y+Q'<O");
      player0.draw();
      player0.playKingdomCards();
      arrayList0.add(player0);
      arrayList0.add(player0);
      arrayList0.clone();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      gameBoard0.printWinner();
      ArrayList<Pile> arrayList1 = gameBoard0.getPiles();
      assertFalse(arrayList1.isEmpty());
  }

  //Test case number: 6
  /*
   * 90 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: Line 67
   * Goal 2. waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: Line 68
   * Goal 3. waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: Line 72
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 5. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 6. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 7. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 76
   * Goal 8. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 9. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 77
   * Goal 10. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 13
   * Goal 11. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 81
   * Goal 12. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 85
   * Goal 13. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 86
   * Goal 14. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 87
   * Goal 15. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 24
   * Goal 16. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 25
   * Goal 17. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 26
   * Goal 18. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 27
   * Goal 19. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 28
   * Goal 20. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 96
   * Goal 21. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 100
   * Goal 22. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 101
   * Goal 23. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 108
   * Goal 24. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 110
   * Goal 25. waitean.DominionMaven.GameBoard.play()V: Line 114
   * Goal 26. waitean.DominionMaven.GameBoard.play()V: Line 115
   * Goal 27. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 59
   * Goal 28. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 63
   * Goal 29. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 30. waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true
   * Goal 31. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 32. waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true
   * Goal 33. waitean.DominionMaven.GameBoard.play()V: I14 Branch 22 IFEQ L115 - true
   * Goal 34. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true
   * Goal 35. waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: I15 Branch 9 IFEQ L68 - true
   * Goal 36. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: I15 Branch 11 IFEQ L77 - true
   * Goal 37. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true
   * Goal 38. waitean.DominionMaven.GameBoard.play()V: I4 Branch 21 IFNE L114 - false
   * Goal 39. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 40. Weak Mutation 64: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:68 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 42. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 43. Weak Mutation 66: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:77 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 45. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 46. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 47. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 48. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 49. Weak Mutation 9: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> -2
   * Goal 50. Weak Mutation 73: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:85 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 74: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:87 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 87: waitean.DominionMaven.GameBoard.isGameOver()Z:100 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 88: waitean.DominionMaven.GameBoard.isGameOver()Z:101 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 97: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp Negation of numEmptyPiles
   * Goal 55. Weak Mutation 98: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC 1 numEmptyPiles
   * Goal 56. Weak Mutation 99: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC -1 numEmptyPiles
   * Goal 57. Weak Mutation 100: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 0
   * Goal 58. Weak Mutation 101: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 1
   * Goal 59. Weak Mutation 102: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> -1
   * Goal 60. Weak Mutation 103: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 2
   * Goal 61. Weak Mutation 104: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 4
   * Goal 62. Weak Mutation 106: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceComparisonOperator < -> -2
   * Goal 63. Weak Mutation 109: waitean.DominionMaven.GameBoard.isGameOver()Z:110 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 110: waitean.DominionMaven.GameBoard.play()V:114 - ReplaceComparisonOperator != -> ==
   * Goal 65. Weak Mutation 111: waitean.DominionMaven.GameBoard.play()V:115 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 62: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:59 - ReplaceComparisonOperator == -> !=
   * Goal 67. [Output]: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 68. [Output]: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 69. [Output]: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:Null
   * Goal 70. [Output]: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 71. [Output]: waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 72. [Output]: waitean.DominionMaven.GameBoard.isGameOver()Z:False
   * Goal 73. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 74. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 75. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 76. Branch waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true in context: waitean.DominionMaven.GameBoard:initializeGame(Ljava/util/ArrayList;)V
   * Goal 77. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 78. Branch waitean.DominionMaven.GameBoard.play()V: I4 Branch 21 IFNE L114 - false in context: waitean.DominionMaven.GameBoard:play()V
   * Goal 79. Branch waitean.DominionMaven.GameBoard.play()V: I14 Branch 22 IFEQ L115 - true in context: waitean.DominionMaven.GameBoard:play()V
   * Goal 80. Branch waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true in context: waitean.DominionMaven.GameBoard:getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 81. Branch waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;: I15 Branch 9 IFEQ L68 - true in context: waitean.DominionMaven.GameBoard:filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   * Goal 82. Branch waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: I15 Branch 11 IFEQ L77 - true in context: waitean.DominionMaven.GameBoard:filterPiles(I)Ljava/util/ArrayList;
   * Goal 83. Branch waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true in context: waitean.DominionMaven.GameBoard:getWinners()Ljava/util/ArrayList;
   * Goal 84. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 85. [METHOD] waitean.DominionMaven.GameBoard.play()V
   * Goal 86. play()V_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 87. [METHOD] waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V
   * Goal 88. [METHODNOEX] waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V
   * Goal 89. [METHOD] waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   * Goal 90. [METHODNOEX] waitean.DominionMaven.GameBoard.filterPiles(Lwaitean/DominionMaven/Card$CardType;)Ljava/util/ArrayList;
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      Player player0 = new Player("");
      arrayList0.add(player0);
      gameBoard0.initializeGame(arrayList0);
      int int0 = 2629;
      gameBoard0.filterPiles(2629);
      Card.CardType.values();
      Card.CardName card_CardName0 = Card.CardName.Silver;
      gameBoard0.getCardFromPiles(card_CardName0);
      Card.CardType card_CardType0 = Card.CardType.TREASURE;
      gameBoard0.filterPiles(card_CardType0);
      gameBoard0.isGameOver();
      gameBoard0.getWinners();
      // Undeclared exception!
      try { 
        gameBoard0.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 7
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(" of ");
      GameBoard gameBoard0 = null;
      try {  
      gameBoard0 = player0.board;
      } catch(NullPointerException e) {}
  }

  //Test case number: 8
  /*
   * 27 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 2. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 3. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true
   * Goal 4. waitean.DominionMaven.GameBoard.printWinner()V: I10 Branch 23 IF_ICMPLE L128 - true
   * Goal 5. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true
   * Goal 6. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 96
   * Goal 7. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 85
   * Goal 8. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 86
   * Goal 9. waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: Line 87
   * Goal 10. Weak Mutation 73: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:85 - ReplaceConstant - 0 -> 1
   * Goal 11. Weak Mutation 74: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:87 - ReplaceComparisonOperator == -> !=
   * Goal 12. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 13. [Output]: waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 14. [METHOD] waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;
   * Goal 15. [METHODNOEX] waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;
   * Goal 16. Branch waitean.DominionMaven.GameBoard.getWinners()Ljava/util/ArrayList;: I19 Branch 13 IFEQ L87 - true in context: waitean.DominionMaven.GameBoard:getWinners()Ljava/util/ArrayList;
   * Goal 17. waitean.DominionMaven.GameBoard.printWinner()V: Line 128
   * Goal 18. waitean.DominionMaven.GameBoard.printWinner()V: Line 127
   * Goal 19. waitean.DominionMaven.GameBoard.printWinner()V: Line 134
   * Goal 20. waitean.DominionMaven.GameBoard.printWinner()V: Line 135
   * Goal 21. Weak Mutation 114: waitean.DominionMaven.GameBoard.printWinner()V:128 - ReplaceConstant - 1 -> 0
   * Goal 22. Weak Mutation 115: waitean.DominionMaven.GameBoard.printWinner()V:128 - ReplaceComparisonOperator <= -> >
   * Goal 23. Weak Mutation 119: waitean.DominionMaven.GameBoard.printWinner()V:134 - ReplaceConstant - We have a winner! -> 
   * Goal 24. Weak Mutation 120: waitean.DominionMaven.GameBoard.printWinner()V:135 - ReplaceConstant - 0 -> 1
   * Goal 25. [METHOD] waitean.DominionMaven.GameBoard.printWinner()V
   * Goal 26. Branch waitean.DominionMaven.GameBoard.printWinner()V: I10 Branch 23 IF_ICMPLE L128 - true in context: waitean.DominionMaven.GameBoard:printWinner()V
   * Goal 27. printWinner()V_java.lang.IndexOutOfBoundsException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      arrayList0.clear();
      GameBoard gameBoard1 = new GameBoard(arrayList0);
      Card.CardName card_CardName0 = Card.CardName.Village;
      gameBoard1.getCardFromPiles(card_CardName0);
      arrayList0.stream();
      ArrayList<Player> arrayList1 = gameBoard1.getWinners();
      GameBoard gameBoard2 = new GameBoard(arrayList1);
      Randomness.reset(0L);
      Card.CardName.values();
      GameBoard gameBoard3 = new GameBoard(arrayList0);
      // Undeclared exception!
      try { 
        gameBoard2.printWinner();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 9
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "]~.a}VU(";
      // Undeclared exception!
      try { 
        Card.CardType.valueOf("]~.a}VU(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant waitean.DominionMaven.Card.CardType.]~.a}VU(
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 10
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Randomness.nextRandomInt(2789);
      Player player0 = new Player("Embargo");
      Card.CardName.valueOf("Embargo");
      player0.playTreasureCards();
      int int0 = Randomness.totalCallsToRandom;
      Randomness.reset((-348L));
      Card.CardType[] card_CardTypeArray0 = Card.CardType.values();
      assertNotNull(card_CardTypeArray0);
  }

  //Test case number: 11
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("w");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant waitean.DominionMaven.Card.CardName.w
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 12
  /*
   * 63 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 100
   * Goal 2. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 101
   * Goal 3. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 5. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 6. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 76
   * Goal 7. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 8. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 108
   * Goal 9. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 77
   * Goal 10. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 13
   * Goal 11. waitean.DominionMaven.GameBoard.isGameOver()Z: Line 110
   * Goal 12. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: Line 81
   * Goal 13. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 24
   * Goal 14. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 25
   * Goal 15. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 26
   * Goal 16. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 27
   * Goal 17. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 59
   * Goal 18. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 28
   * Goal 19. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: Line 63
   * Goal 20. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 21. waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true
   * Goal 22. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - true
   * Goal 23. waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true
   * Goal 24. waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true
   * Goal 25. waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: I15 Branch 11 IFEQ L77 - true
   * Goal 26. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 27. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 28. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 29. Weak Mutation 66: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:77 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 31. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 32. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 33. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 34. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 35. Weak Mutation 9: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 87: waitean.DominionMaven.GameBoard.isGameOver()Z:100 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 88: waitean.DominionMaven.GameBoard.isGameOver()Z:101 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 97: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp Negation of numEmptyPiles
   * Goal 39. Weak Mutation 98: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC 1 numEmptyPiles
   * Goal 40. Weak Mutation 99: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - InsertUnaryOp IINC -1 numEmptyPiles
   * Goal 41. Weak Mutation 100: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 0
   * Goal 42. Weak Mutation 101: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 1
   * Goal 43. Weak Mutation 102: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> -1
   * Goal 44. Weak Mutation 103: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 2
   * Goal 45. Weak Mutation 104: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceConstant - 3 -> 4
   * Goal 46. Weak Mutation 106: waitean.DominionMaven.GameBoard.isGameOver()Z:108 - ReplaceComparisonOperator < -> -2
   * Goal 47. Weak Mutation 109: waitean.DominionMaven.GameBoard.isGameOver()Z:110 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 62: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:59 - ReplaceComparisonOperator == -> !=
   * Goal 49. [Output]: waitean.DominionMaven.GameBoard.isGameOver()Z:False
   * Goal 50. [Output]: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:True
   * Goal 51. [Output]: waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Zero
   * Goal 52. [Output]: waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;:Null
   * Goal 53. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I13 Branch 16 IFEQ L101 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 54. Branch waitean.DominionMaven.GameBoard.isGameOver()Z: I49 Branch 20 IF_ICMPLT L108 - true in context: waitean.DominionMaven.GameBoard:isGameOver()Z
   * Goal 55. Branch waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;: I9 Branch 7 IFEQ L59 - true in context: waitean.DominionMaven.GameBoard:getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 56. Branch waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;: I15 Branch 11 IFEQ L77 - true in context: waitean.DominionMaven.GameBoard:filterPiles(I)Ljava/util/ArrayList;
   * Goal 57. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 58. [METHOD] waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 59. [METHODNOEX] waitean.DominionMaven.GameBoard.getCardFromPiles(Lwaitean/DominionMaven/Card$CardName;)Lwaitean/DominionMaven/Pile;
   * Goal 60. [METHOD] waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;
   * Goal 61. [METHODNOEX] waitean.DominionMaven.GameBoard.filterPiles(I)Ljava/util/ArrayList;
   * Goal 62. [METHOD] waitean.DominionMaven.GameBoard.isGameOver()Z
   * Goal 63. [METHODNOEX] waitean.DominionMaven.GameBoard.isGameOver()Z
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      int int0 = 2518;
      gameBoard0.isGameOver();
      gameBoard0.filterPiles(2518);
      String string0 = null;
      Card.CardName card_CardName0 = Card.CardName.Mine;
      gameBoard0.getCardFromPiles(card_CardName0);
      // Undeclared exception!
      try { 
        arrayList0.replaceAll((UnaryOperator<Player>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Objects", e);
      }
  }

  //Test case number: 13
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("_J|SWfTt)%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant waitean.DominionMaven.Card.CardName._J|SWfTt)%
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 14
  /*
   * 102 covered goals:
   * Goal 1. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 9
   * Goal 2. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 10
   * Goal 3. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 11
   * Goal 4. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 12
   * Goal 5. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: Line 13
   * Goal 6. waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: Line 20
   * Goal 7. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 24
   * Goal 8. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 25
   * Goal 9. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 26
   * Goal 10. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 27
   * Goal 11. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 30
   * Goal 12. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 31
   * Goal 13. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 32
   * Goal 14. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 33
   * Goal 15. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 34
   * Goal 16. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 35
   * Goal 17. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 37
   * Goal 18. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 38
   * Goal 19. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 42
   * Goal 20. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 43
   * Goal 21. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 44
   * Goal 22. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 45
   * Goal 23. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 46
   * Goal 24. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 47
   * Goal 25. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 48
   * Goal 26. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 49
   * Goal 27. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 50
   * Goal 28. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 51
   * Goal 29. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 52
   * Goal 30. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 54
   * Goal 31. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 55
   * Goal 32. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: Line 56
   * Goal 33. waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 34. waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: root-Branch
   * Goal 35. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I22 Branch 2 IF_ICMPLE L27 - true
   * Goal 36. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I53 Branch 3 IFEQ L32 - true
   * Goal 37. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I215 Branch 5 IFEQ L50 - true
   * Goal 38. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I225 Branch 6 IF_ACMPNE L51 - true
   * Goal 39. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I19 Branch 1 IF_ICMPLT L27 - false
   * Goal 40. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I53 Branch 3 IFEQ L32 - false
   * Goal 41. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I76 Branch 4 IF_ICMPNE L37 - false
   * Goal 42. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I215 Branch 5 IFEQ L50 - false
   * Goal 43. waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V: I225 Branch 6 IF_ACMPNE L51 - false
   * Goal 44. Weak Mutation 0: waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V:9 - ReplaceConstant - Beginning of gameboard constructor -> 
   * Goal 45. Weak Mutation 1: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 46. Weak Mutation 2: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 47. Weak Mutation 3: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 48. Weak Mutation 4: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 0
   * Goal 49. Weak Mutation 5: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 1
   * Goal 50. Weak Mutation 6: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> -1
   * Goal 51. Weak Mutation 7: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 2 -> 3
   * Goal 52. Weak Mutation 10: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator < -> <=
   * Goal 53. Weak Mutation 11: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp Negation of nP
   * Goal 54. Weak Mutation 12: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC 1 nP
   * Goal 55. Weak Mutation 13: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - InsertUnaryOp IINC -1 nP
   * Goal 56. Weak Mutation 14: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 0
   * Goal 57. Weak Mutation 15: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 1
   * Goal 58. Weak Mutation 16: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> -1
   * Goal 59. Weak Mutation 17: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 5
   * Goal 60. Weak Mutation 18: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceConstant - 6 -> 7
   * Goal 61. Weak Mutation 21: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:27 - ReplaceComparisonOperator <= -> ==
   * Goal 62. Weak Mutation 22: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:30 - ReplaceConstant - newPLayers.size =  -> 
   * Goal 63. Weak Mutation 23: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:32 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 24: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - InsertUnaryOp Negation of nP
   * Goal 65. Weak Mutation 25: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - InsertUnaryOp IINC 1 nP
   * Goal 66. Weak Mutation 26: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - InsertUnaryOp IINC -1 nP
   * Goal 67. Weak Mutation 27: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - ReplaceConstant - 2 -> 0
   * Goal 68. Weak Mutation 28: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - ReplaceConstant - 2 -> 1
   * Goal 69. Weak Mutation 29: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - ReplaceConstant - 2 -> -1
   * Goal 70. Weak Mutation 30: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - ReplaceConstant - 2 -> 3
   * Goal 71. Weak Mutation 31: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:37 - ReplaceComparisonOperator != -> -1
   * Goal 72. Weak Mutation 34: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:38 - ReplaceConstant - 8 -> 0
   * Goal 73. Weak Mutation 35: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:38 - ReplaceConstant - 8 -> 1
   * Goal 74. Weak Mutation 36: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:38 - ReplaceConstant - 8 -> -1
   * Goal 75. Weak Mutation 37: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:38 - ReplaceConstant - 8 -> 7
   * Goal 76. Weak Mutation 38: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:38 - ReplaceConstant - 8 -> 9
   * Goal 77. Weak Mutation 44: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceConstant - 8 -> 0
   * Goal 78. Weak Mutation 45: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceConstant - 8 -> 1
   * Goal 79. Weak Mutation 46: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceConstant - 8 -> -1
   * Goal 80. Weak Mutation 47: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceConstant - 8 -> 7
   * Goal 81. Weak Mutation 48: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceConstant - 8 -> 9
   * Goal 82. Weak Mutation 49: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - ReplaceVariable victoryToAdd -> nP
   * Goal 83. Weak Mutation 50: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - InsertUnaryOp Negation of victoryToAdd
   * Goal 84. Weak Mutation 51: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - InsertUnaryOp IINC 1 victoryToAdd
   * Goal 85. Weak Mutation 52: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:42 - InsertUnaryOp IINC -1 victoryToAdd
   * Goal 86. Weak Mutation 53: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceConstant - 5 -> 0
   * Goal 87. Weak Mutation 54: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceConstant - 5 -> 1
   * Goal 88. Weak Mutation 55: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceConstant - 5 -> -1
   * Goal 89. Weak Mutation 56: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceConstant - 5 -> 4
   * Goal 90. Weak Mutation 57: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceConstant - 5 -> 6
   * Goal 91. Weak Mutation 58: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - ReplaceVariable victoryToAdd -> nP
   * Goal 92. Weak Mutation 59: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - InsertUnaryOp Negation of victoryToAdd
   * Goal 93. Weak Mutation 60: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - InsertUnaryOp IINC 1 victoryToAdd
   * Goal 94. Weak Mutation 61: waitean.DominionMaven.GameBoard.initializeGame(Ljava/util/ArrayList;)V:43 - InsertUnaryOp IINC -1 victoryToAdd
   * Goal 95. [Output]: waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:isEmpty()Z:False
   * Goal 96. [Output]: waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;:NonNull:java.util.ArrayList:size()I:Positive
   * Goal 97. Branch waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V: root-Branch in context: waitean.DominionMaven.GameBoard:<init>(Ljava/util/ArrayList;)V
   * Goal 98. Branch waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;: root-Branch in context: waitean.DominionMaven.GameBoard:getPiles()Ljava/util/ArrayList;
   * Goal 99. [METHOD] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 100. [METHODNOEX] waitean.DominionMaven.GameBoard.<init>(Ljava/util/ArrayList;)V
   * Goal 101. [METHOD] waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;
   * Goal 102. [METHODNOEX] waitean.DominionMaven.GameBoard.getPiles()Ljava/util/ArrayList;
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      Player player0 = new Player("<\"y+Q'<O");
      player0.draw();
      arrayList0.add(player0);
      arrayList0.add(player0);
      arrayList0.clone();
      GameBoard gameBoard0 = new GameBoard(arrayList0);
      gameBoard0.getPiles();
      // Undeclared exception!
      try { 
        arrayList0.sort((Comparator<? super Player>) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // waitean.DominionMaven.Player cannot be cast to java.lang.Comparable
         //
         assertThrownBy("java.util.ComparableTimSort", e);
      }
  }
}
