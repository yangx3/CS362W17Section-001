/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 03:32:01 GMT 2017
 */

package cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cs362.dominion.Card;
import cs362.dominion.GameState;
import cs362.dominion.Player;
import cs362.dominion.Randomness;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(2131);
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      HashMap<Card, Integer> hashMap0 = gameState0.embargoTokens;
      gameState0.gameBoard = hashMap0;
      Player player0 = new Player(gameState0, "numActions: ");
      List<Card> list0 = player0.discard;
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Card.CardName.values();
      player0.drawCard();
      Integer integer0 = new Integer(2131);
      hashMap0.put((Card) null, integer0);
      player0.coins = (-603);
      player0.buyCard();
      Card.CardName card_CardName0 = Card.CardName.Village;
      // Undeclared exception!
      try { 
        player0.tryBuy(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom(2136);
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      HashMap<Card, Integer> hashMap0 = gameState0.embargoTokens;
      gameState0.gameBoard = hashMap0;
      Player player0 = new Player(gameState0, "numActions: ");
      List<Card> list0 = player0.discard;
      Card.CardName.values();
      player0.drawCard();
      player0.numBuys = 2136;
      Integer integer0 = new Integer(2136);
      hashMap0.put((Card) null, integer0);
      // Undeclared exception!
      try { 
        player0.buyCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      Stack<Card> stack0 = new Stack<Card>();
      player0.scoreFor();
      player0.playKingdomCard();
      player0.playKingdomCard();
      player0.drawCard();
      String string0 = player0.player_username;
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      player0.numBuys = 257;
      Stack<Card> stack0 = new Stack<Card>();
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.countCardName(stack0, card_CardName0);
      List<Card> list0 = Card.createCards();
      player0.hand = list0;
      player0.scoreFor();
      player0.playKingdomCard();
      player0.revealHand();
      player0.endTurn();
      player0.coins = 257;
      player0.coins = 257;
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>(0, 1443);
      GameState gameState0 = new GameState((List<Card>) vector0);
      Player player0 = new Player(gameState0, "");
      player0.numActions = 1443;
      player0.toString();
      GameState gameState1 = new GameState((List<Card>) vector0);
      Player player1 = new Player(gameState1, "");
      int int0 = player1.coins;
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.player_username = "";
      player0.numActions = (-1);
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      player0.buyCard();
      player0.numBuys = 0;
      player0.scoreFor();
      player0.gain((Card) null, true);
      // Undeclared exception!
      try { 
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      HashMap<Card, Integer> hashMap0 = gameState0.embargoTokens;
      gameState0.embargoTokens = hashMap0;
      Card.CardName card_CardName0 = Card.CardName.Baron;
      hashMap0.clear();
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 1, 0, (-236));
      Integer integer0 = new Integer(0);
      Integer.compare(17, (-236));
      hashMap0.put(card0, integer0);
      Integer.getInteger("^6~Q,kcM_qd3byNFp");
      hashMap0.put(card0, (Integer) null);
      Player player0 = new Player(gameState0, "&:sE  @tmR%=~P");
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.discard(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      gameState0.getWinners();
      Player player0 = new Player(gameState0, " to draw FIVE cards");
      player0.printStateGame();
      player0.revealHand();
      // Undeclared exception!
      try { 
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((GameState) null, "8>ecVi#%%V{v_}o/d/");
      Card.Type.values();
      List<Card> list0 = player0.hand;
      player0.hand = list0;
      player0.discard = list0;
      player0.initializePlayerTurn();
      Player player1 = new Player((GameState) null, "Mq?P<g)&$");
      // Undeclared exception!
      try { 
        player0.playTtreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card.Type.values();
      Card.Type.values();
      Randomness.reset(0L);
      Card.CardName.values();
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "Player: ");
      gameState0.gameBoard = null;
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      gameState0.gameBoard = hashMap0;
      List<Card> list0 = player0.discard;
      player0.discard = null;
      gameState0.toString();
      // Undeclared exception!
      try { 
        player0.gain((Card) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      vector0.removeAll(gameState0.cards);
      Player player0 = new Player(gameState0, "9'Md|P^_I*XlM[Y<");
      gameState0.play();
      vector0.spliterator();
      player0.coins = (-131);
      player0.playTtreasureCard();
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Player player0 = new Player(gameState0, "");
      Card.CardName card_CardName0 = Card.CardName.Embargo;
      Card.Type card_Type0 = Card.Type.TREASURE;
      player0.coins = (-3601);
      player0.buyCard();
      Card card0 = new Card(card_CardName0, card_Type0, 2956, (-3460), (-3460));
      card0.play(player0, gameState0);
      Card.getCard(linkedList0, card_CardName0);
      player0.discard(card0);
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "6?7ZkqjI@W7~Qxz");
      Card.CardName card_CardName0 = Card.CardName.Garden;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, (-695), 2731, 2731);
      player0.discard(card0);
      Card.CardName card_CardName1 = Card.CardName.Cutpurse;
      player0.tryBuy(card_CardName1);
      gameState0.isGameOver();
      Card.CardName.values();
      player0.playKingdomCard();
      player0.scoreFor();
      player0.playKingdomCard();
      player0.drawCard();
      player0.numBuys = 0;
      Card.Type.values();
      player0.toString();
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("6?7ZkqjI@W7~Qxz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant cs362.dominion.Card.CardName.6?7ZkqjI@W7~Qxz
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 14, 2062);
      vector0.add(card0);
      Player player0 = new Player(gameState0, "");
      gameState0.initializeGame();
      Card.CardName card_CardName1 = Card.CardName.Baron;
      player0.tryBuy(card_CardName1);
      player0.discard = gameState0.cards;
      player0.drawCard();
      player0.printStateGame();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Embargo");
      player0.drawCard();
      player0.discard((Card) null);
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Randomness.nextRandomInt(10);
      Card.CardName.values();
      Randomness.nextRandomInt((-9));
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "LImn9[aC1zC");
      Card.CardName card_CardName0 = Card.CardName.Province;
      Card.Type card_Type0 = Card.Type.ACTION;
      gameState0.play();
      Card card0 = new Card(card_CardName0, card_Type0, 0, (-1), (-19));
      stack0.add(card0);
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      Integer integer0 = new Integer(0);
      hashMap0.put(card0, integer0);
      gameState0.embargoTokens = hashMap0;
      player0.hand = (List<Card>) stack0;
      player0.player_username = "LImn9[aC1zC";
      String string0 = player0.player_username;
      player0.scoreFor();
      player0.scoreFor();
      int int0 = Randomness.totalCallsToRandom;
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("LImn9[aC1zC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant cs362.dominion.Card.CardName.LImn9[aC1zC
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayDeque<Card> arrayDeque0 = new ArrayDeque<Card>();
      Card.Type card_Type0 = Card.Type.VICTORY;
      List<Card> list0 = Card.filter(arrayDeque0, card_Type0);
      GameState gameState0 = new GameState(list0);
      gameState0.initializeGame();
      gameState0.isGameOver();
      Player player0 = new Player(gameState0, "Ending ");
      gameState0.isGameOver();
      LinkedList<Card> linkedList0 = player0.deck;
      player0.revealHand();
      player0.deck = linkedList0;
      Player player1 = new Player(gameState0, "");
      player1.printStateGame();
      player1.numActions = 0;
      HashMap<Card, Integer> hashMap0 = gameState0.gameBoard;
      Integer integer0 = new Integer(0);
      hashMap0.put((Card) null, integer0);
      gameState0.gameBoard = hashMap0;
      List<Card> list1 = player0.playedCards;
      gameState0.gameBoard = hashMap0;
      player0.coins = 2448;
      Card.CardName card_CardName0 = Card.CardName.Village;
      player1.tryBuy(card_CardName0);
      LinkedList<Card> linkedList1 = player0.deck;
      gameState0.play();
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      // Undeclared exception!
      try { 
        Card.Type.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant cs362.dominion.Card.Type.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, (String) null);
      player0.discard = list0;
      player0.initializePlayerTurn();
      player0.playTtreasureCard();
      player0.coins = 8;
      Randomness.reset((-3420L));
      // Undeclared exception!
      player0.buyCard();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Randomness.totalCallsToRandom = 1675;
      Player player0 = new Player((GameState) null, "Baron");
      player0.buyCard();
      int int0 = player0.coins;
      List<Card> list0 = player0.hand;
      Card.CardName card_CardName0 = Card.CardName.Duchy;
      Card.getCard(list0, card_CardName0);
      player0.gain((Card) null, true);
      int int1 = player0.numActions;
      // Undeclared exception!
      try { 
        player0.tryBuy(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      Player player1 = new Player((GameState) null, (String) null);
      int int0 = 257;
      player1.numBuys = 257;
      Stack<Card> stack0 = new Stack<Card>();
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.CardName card_CardName1 = Card.CardName.Garden;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName1, card_Type0, 1448, 4, (-948));
      stack0.add(card0);
      Card.countCardName(stack0, card_CardName0);
      player1.numActions = 5;
      List<Card> list0 = Card.createCards();
      player1.gain(card0, false);
      player1.hand = list0;
      player1.scoreFor();
      // Undeclared exception!
      try { 
        player1.playKingdomCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      Player player1 = new Player((GameState) null, (String) null);
      Stack<Card> stack0 = new Stack<Card>();
      List<Card> list0 = Card.createCards();
      player0.toString();
      player1.hand = list0;
      player1.scoreFor();
      player1.playKingdomCard();
      player1.revealHand();
      player1.endTurn();
      player0.player_username = "";
      player0.buyCard();
      player1.toString();
      // Undeclared exception!
      try { 
        player1.buyCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = (-6);
      Random.setNextRandom((-6));
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      String string0 = "numActions: ";
      gameState0.play();
      HashMap<Card, Integer> hashMap0 = gameState0.embargoTokens;
      gameState0.gameBoard = hashMap0;
      Player player0 = new Player(gameState0, "numActions: ");
      Vector<Card> vector0 = new Vector<Card>();
      Card.CardName.values();
      player0.drawCard();
      Integer integer0 = new Integer((-6));
      hashMap0.put((Card) null, integer0);
      player0.buyCard();
      Card.CardName card_CardName0 = Card.CardName.Cooper;
      player0.tryBuy(card_CardName0);
      Randomness.nextRandomInt((-6));
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 2131;
      Random.setNextRandom(2131);
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      HashMap<Card, Integer> hashMap0 = gameState0.embargoTokens;
      gameState0.gameBoard = hashMap0;
      Player player0 = new Player(gameState0, "numActions: ");
      List<Card> list0 = player0.discard;
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Card.CardName.values();
      player0.drawCard();
      Integer integer0 = new Integer(2131);
      hashMap0.put((Card) null, integer0);
      player0.buyCard();
      Card.CardName card_CardName0 = Card.CardName.Village;
      // Undeclared exception!
      try { 
        player0.tryBuy(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Card.Type.values();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.numActions = 9;
      player0.coins = (-3108);
      player0.playKingdomCard();
      LinkedList<Card> linkedList0 = player0.deck;
      player0.numBuys = (-3108);
      player0.buyCard();
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Card.CardName.values();
      Player player1 = new Player(gameState0, "");
      player0.printStateGame();
      player0.scoreFor();
      Card.CardName card_CardName0 = Card.CardName.Silver;
      player0.tryBuy(card_CardName0);
      player0.numActions = (-1);
      Random.setNextRandom(389);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, (String) null);
      player0.discard = list0;
      player0.initializePlayerTurn();
      player0.playTtreasureCard();
      player0.coins = 2749;
      player0.scoreFor();
      Randomness.reset((-3420L));
      // Undeclared exception!
      player0.buyCard();
  }
}
