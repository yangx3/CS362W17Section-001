/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 17:03:46 PST 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.Player;
import dominion.dominionBoard;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class dominionBoard_ESTest0 extends dominionBoard_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      Map<Card.Name, Card> map0 = dominionBoard.cardList;
      dominionBoard.whosTurn();
      Card.Name card_Name0 = Card.Name.province;
      int int0 = 14;
  }

  @Test
  public void test01()  throws Throwable  {
      Player[] playerArray0 = new Player[1];
      Card.Type card_Type0 = Card.Type.victory;
      Card.Name card_Name0 = Card.Name.mine;
      Card card0 = new Card(card_Type0, card_Name0, 1873);
      HashMap<Card.Name, Card> hashMap0 = new HashMap<Card.Name, Card>();
      card0.cardList = (Map<Card.Name, Card>) hashMap0;
      dominionBoard.players = playerArray0;
      dominionBoard.cardOptions((-1));
      // Undeclared exception!
      try { 
        dominionBoard.whosTurn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test05()  throws Throwable  {
      dominionBoard.isGameOver();
  }

  @Test
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        dominionBoard.game();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test07()  throws Throwable  {
      dominionBoard dominionBoard0 = new dominionBoard(0);
      // Undeclared exception!
      try { 
        dominionBoard.winner();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("dominion.dominionBoard", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Map<Card, Integer> map0 = dominionBoard.pool;
      Map<Card.Name, Card> map1 = dominionBoard.cardList;
      dominionBoard.cardList = map1;
      dominionBoard dominionBoard0 = null;
      try {
        dominionBoard0 = new dominionBoard((-16));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.dominionBoard", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      dominionBoard.cardOptions(16);
      Card.Name card_Name0 = Card.Name.great_hall;
      // Undeclared exception!
      try { 
        Card.Name.valueOf("Hy?l)L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dominion.Card.Name.Hy?l)L
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Card.Type card_Type0 = Card.Type.victory;
      Card.Name card_Name0 = Card.Name.silver;
      Card card0 = new Card(card_Type0, card_Name0, 0);
      // Undeclared exception!
      try { 
        dominionBoard.buyCard(player0, card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.dominionBoard", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Card.createCards();
      Map<Card, Integer> map0 = dominionBoard.embargo;
      Card.createCards();
      ArrayList<Card> arrayList0 = dominionBoard.trash;
      dominionBoard.cardOptions(0);
  }

  @Test
  public void test12()  throws Throwable  {
      Player[] playerArray0 = new Player[1];
      // Undeclared exception!
      try { 
        dominionBoard.whosTurn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      dominionBoard dominionBoard0 = new dominionBoard(12);
      Player player0 = dominionBoard.whosTurn();
      player0.hand = dominionBoard0.trash;
      dominionBoard.turn = 0;
      Map<Card, Integer> map0 = dominionBoard.embargo;
      Map<Card.Name, Card> map1 = Card.cardList;
      Map<Card.Name, Card> map2 = dominionBoard.cardList;
      dominionBoard.embargo = map0;
      player0.discard = dominionBoard0.trash;
      dominionBoard.cardOptions(731);
      Player[] playerArray0 = new Player[1];
      playerArray0[0] = player0;
      dominionBoard.players = playerArray0;
      Card.Name.values();
      dominionBoard.players = dominionBoard0.players;
      // Undeclared exception!
      try { 
        dominionBoard.game();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be positive
         //
         assertThrownBy("java.util.Random", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      dominionBoard.cardOptions(0);
      Card.Name.values();
      dominionBoard.otherPlayer();
  }

  @Test
  public void test16()  throws Throwable  {
      Card.createCards();
      dominionBoard.winner();
  }


  @Test
  public void test18()  throws Throwable  {
      dominionBoard dominionBoard0 = new dominionBoard(5686);
      Map<Card, Integer> map0 = dominionBoard.pool;
      Card.Type card_Type0 = Card.Type.treasure;
      Card.Name card_Name0 = Card.Name.cutpurse;
      Card card0 = new Card(card_Type0, card_Name0, 0);
      Card.createCards();
      Card.createCards();
      Card.createCards();
      dominionBoard.playCard(card0);
      Map<Card, Integer> map1 = dominionBoard.pool;
      // Undeclared exception!
      try { 
        dominionBoard.start();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      Map<Card, Integer> map0 = dominionBoard.embargo;
      dominionBoard.pool = map0;
      String string0 = null;
      // Undeclared exception!
      try { 
        Card.Name.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      ArrayList<Card> arrayList0 = dominionBoard.trash;
      dominionBoard.turn = 7;
      dominionBoard dominionBoard0 = new dominionBoard(7);
      dominionBoard.cardOptions(30);
      int int0 = dominionBoard.turn;
      dominionBoard.isGameOver();
      dominionBoard.isGameOver();
      Card.Type card_Type0 = Card.Type.victory;
      Card.Name card_Name0 = Card.Name.salvager;
      Card card0 = new Card(card_Type0, card_Name0, 0);
      card0.cardList = dominionBoard0.cardList;
      card0.cardList = dominionBoard0.cardList;
      card0.cardList = dominionBoard0.cardList;
      dominionBoard.game();
      Card.createCards();
      dominionBoard.playCard(card0);
      int int1 = dominionBoard.turn;
      // Undeclared exception!
      try { 
        Card.Name.valueOf("w");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dominion.Card.Name.w
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Card.Type card_Type0 = Card.Type.victory;
      Card.Name card_Name0 = Card.Name.feast;
      ArrayList<Card> arrayList0 = player0.gethand();
      player0.hand = arrayList0;
      Card card0 = new Card(card_Type0, card_Name0, 0);
      Card.createCards();
      // Undeclared exception!
      try { 
        dominionBoard.addCard(player0, card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.dominionBoard", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      Map<Card.Name, Card> map0 = Card.cardList;
      Card.Name.values();
      Card.Type card_Type0 = Card.Type.treasure;
      Card.Name card_Name0 = Card.Name.ambassador;
      Card card0 = new Card(card_Type0, card_Name0, 859);
      card0.cardList = map0;
      Card.createCards();
      dominionBoard.playCard(card0);
  }

}
