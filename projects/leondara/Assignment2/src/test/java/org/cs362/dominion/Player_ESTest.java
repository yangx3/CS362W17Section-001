/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 00:38:21 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 84 covered goals:
   * Goal 1. Player.toString()Ljava/lang/String;: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 4. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 5. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 6. Branch Player.toString()Ljava/lang/String;: root-Branch in context: Player:toString()Ljava/lang/String;
   * Goal 7. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 8. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 9. [Output]: Player.toString()Ljava/lang/String;:NonEmptyString
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 23. Player.endTurn()V: Line 282
   * Goal 24. Player.endTurn()V: Line 283
   * Goal 25. Player.endTurn()V: Line 284
   * Goal 26. Player.endTurn()V: Line 285
   * Goal 27. Player.endTurn()V: Line 288
   * Goal 28. Player.endTurn()V: Line 291
   * Goal 29. Player.endTurn()V: Line 292
   * Goal 30. Player.endTurn()V: Line 293
   * Goal 31. Player.toString()Ljava/lang/String;: Line 304
   * Goal 32. Player.toString()Ljava/lang/String;: Line 315
   * Goal 33. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 34. [METHOD] Player.endTurn()V
   * Goal 35. [METHOD] Player.toString()Ljava/lang/String;
   * Goal 36. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] Player.endTurn()V
   * Goal 38. [METHODNOEX] Player.toString()Ljava/lang/String;
   * Goal 39. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 41. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 46. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 47. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 49. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 50. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 52. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 53. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 54. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   * Goal 55. Weak Mutation 277: Player.toString()Ljava/lang/String;:304 - ReplaceConstant -  ---  -> 
   * Goal 56. Weak Mutation 278: Player.toString()Ljava/lang/String;:304 - ReplaceConstant -  ---  -> 
   * Goal 57. Weak Mutation 279: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
--- --------------------------- --- 
Hand:  -> 
   * Goal 58. Weak Mutation 280: Player.toString()Ljava/lang/String;:304 - ReplaceVariable hand -> discard
   * Goal 59. Weak Mutation 281: Player.toString()Ljava/lang/String;:304 - ReplaceVariable hand -> playedCards
   * Goal 60. Weak Mutation 282: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Discard:  -> 
   * Goal 61. Weak Mutation 283: Player.toString()Ljava/lang/String;:304 - ReplaceVariable discard -> playedCards
   * Goal 62. Weak Mutation 284: Player.toString()Ljava/lang/String;:304 - ReplaceVariable discard -> hand
   * Goal 63. Weak Mutation 285: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Deck:  -> 
   * Goal 64. Weak Mutation 286: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Played Cards:  -> 
   * Goal 65. Weak Mutation 287: Player.toString()Ljava/lang/String;:304 - ReplaceVariable playedCards -> discard
   * Goal 66. Weak Mutation 288: Player.toString()Ljava/lang/String;:304 - ReplaceVariable playedCards -> hand
   * Goal 67. Weak Mutation 289: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
numActions:  -> 
   * Goal 68. Weak Mutation 290: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numActions -> coins
   * Goal 69. Weak Mutation 292: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 293: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 71. Weak Mutation 294: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 72. Weak Mutation 295: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
coinss:  -> 
   * Goal 73. Weak Mutation 296: Player.toString()Ljava/lang/String;:304 - ReplaceVariable coins -> numActions
   * Goal 74. Weak Mutation 297: Player.toString()Ljava/lang/String;:304 - ReplaceVariable coins -> numBuys
   * Goal 75. Weak Mutation 298: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 299: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 77. Weak Mutation 300: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 78. Weak Mutation 301: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
numBuys:  -> 
   * Goal 79. Weak Mutation 302: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numBuys -> coins
   * Goal 80. Weak Mutation 304: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 305: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 82. Weak Mutation 306: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 83. Weak Mutation 307: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
 -> 
   * Goal 84. Weak Mutation 308: Player.toString()Ljava/lang/String;:315 - ReplaceVariable sb -> player_username
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.endTurn();
      String string0 = player0.toString();
      assertEquals(" --- mH$8#@Bf~IL { --- \n--- --------------------------- --- \nHand: []\nDiscard: []\nDeck: []\nPlayed Cards: []\nnumActions: 1\ncoinss: 0\nnumBuys: 1\n", string0);
  }

  //Test case number: 1
  /*
   * 66 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 3. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - true
   * Goal 4. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 5. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 6. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 7. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 8. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - true in context: 
   * Goal 9. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 10. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 24. Player.buyCard(LGameState;)V: Line 154
   * Goal 25. Player.buyCard(LGameState;)V: Line 280
   * Goal 26. Player.endTurn()V: Line 282
   * Goal 27. Player.endTurn()V: Line 283
   * Goal 28. Player.endTurn()V: Line 284
   * Goal 29. Player.endTurn()V: Line 285
   * Goal 30. Player.endTurn()V: Line 288
   * Goal 31. Player.endTurn()V: Line 291
   * Goal 32. Player.endTurn()V: Line 292
   * Goal 33. Player.endTurn()V: Line 293
   * Goal 34. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 35. [METHOD] Player.buyCard(LGameState;)V
   * Goal 36. [METHOD] Player.endTurn()V
   * Goal 37. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 38. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 39. [METHODNOEX] Player.endTurn()V
   * Goal 40. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 42. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 44. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 46. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 47. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 48. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 49. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 50. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 203: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> ==
   * Goal 54. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 58. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 59. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 61. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 62. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 64. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 65. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 66. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@B~IL {");
      player0.endTurn();
      player0.coins = (-480);
      player0.buyCard((GameState) null);
  }

  //Test case number: 2
  /*
   * 32 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 5. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 18. Player.buyCard(LGameState;)V: Line 154
   * Goal 19. Player.buyCard(LGameState;)V: Line 280
   * Goal 20. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 21. [METHOD] Player.buyCard(LGameState;)V
   * Goal 22. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 24. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 26. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 28. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 29. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 195: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      Player player0 = new Player(gameState0, "");
      player0.numBuys = (-284);
      player0.buyCard(gameState0);
  }

  //Test case number: 3
  /*
   * 99 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true
   * Goal 3. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true
   * Goal 4. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false
   * Goal 5. Player.scoreFor()I: I52 Branch 11 IFNULL L116 - false
   * Goal 6. Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - true
   * Goal 7. Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - false
   * Goal 8. Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true
   * Goal 9. Player.scoreFor()I: I111 Branch 16 IFLE L134 - false
   * Goal 10. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 11. Branch Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true in context: 
   * Goal 12. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false in context: 
   * Goal 13. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true in context: 
   * Goal 14. Branch Player.scoreFor()I: I52 Branch 11 IFNULL L116 - false in context: 
   * Goal 15. Branch Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - true in context: 
   * Goal 16. Branch Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - false in context: 
   * Goal 17. Branch Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true in context: 
   * Goal 18. Branch Player.scoreFor()I: I111 Branch 16 IFLE L134 - false in context: 
   * Goal 19. [Output]: Player.scoreFor()I:Positive
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 33. Player.scoreFor()I: Line 106
   * Goal 34. Player.scoreFor()I: Line 107
   * Goal 35. Player.scoreFor()I: Line 108
   * Goal 36. Player.scoreFor()I: Line 110
   * Goal 37. Player.scoreFor()I: Line 115
   * Goal 38. Player.scoreFor()I: Line 116
   * Goal 39. Player.scoreFor()I: Line 117
   * Goal 40. Player.scoreFor()I: Line 118
   * Goal 41. Player.scoreFor()I: Line 121
   * Goal 42. Player.scoreFor()I: Line 122
   * Goal 43. Player.scoreFor()I: Line 124
   * Goal 44. Player.scoreFor()I: Line 134
   * Goal 45. Player.scoreFor()I: Line 135
   * Goal 46. Player.scoreFor()I: Line 137
   * Goal 47. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 48. [METHOD] Player.scoreFor()I
   * Goal 49. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] Player.scoreFor()I
   * Goal 51. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 53. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 96: Player.scoreFor()I:106 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 97: Player.scoreFor()I:107 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 98: Player.scoreFor()I:108 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 99: Player.scoreFor()I:110 - ReplaceVariable hand -> discard
   * Goal 58. Weak Mutation 100: Player.scoreFor()I:110 - ReplaceVariable hand -> playedCards
   * Goal 59. Weak Mutation 101: Player.scoreFor()I:110 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 104: Player.scoreFor()I:115 - ReplaceVariable discard -> playedCards
   * Goal 61. Weak Mutation 105: Player.scoreFor()I:115 - ReplaceVariable discard -> hand
   * Goal 62. Weak Mutation 106: Player.scoreFor()I:115 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 107: Player.scoreFor()I:116 - ReplaceVariable discard -> playedCards
   * Goal 64. Weak Mutation 108: Player.scoreFor()I:116 - ReplaceVariable discard -> hand
   * Goal 65. Weak Mutation 109: Player.scoreFor()I:116 - ReplaceComparisonOperator = null -> != null
   * Goal 66. Weak Mutation 110: Player.scoreFor()I:117 - ReplaceVariable discard -> playedCards
   * Goal 67. Weak Mutation 111: Player.scoreFor()I:117 - ReplaceVariable discard -> hand
   * Goal 68. Weak Mutation 112: Player.scoreFor()I:117 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 113: Player.scoreFor()I:118 - ReplaceVariable gardenCards -> score
   * Goal 70. Weak Mutation 114: Player.scoreFor()I:118 - ReplaceVariable gardenCards -> numCards
   * Goal 71. Weak Mutation 115: Player.scoreFor()I:121 - ReplaceVariable numCards -> gardenCards
   * Goal 72. Weak Mutation 116: Player.scoreFor()I:121 - ReplaceVariable numCards -> score
   * Goal 73. Weak Mutation 117: Player.scoreFor()I:124 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 126: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> score
   * Goal 75. Weak Mutation 127: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numActions
   * Goal 76. Weak Mutation 128: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numCards
   * Goal 77. Weak Mutation 129: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> coins
   * Goal 78. Weak Mutation 130: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numBuys
   * Goal 79. Weak Mutation 131: Player.scoreFor()I:134 - InsertUnaryOp Negation of gardenCards
   * Goal 80. Weak Mutation 132: Player.scoreFor()I:134 - InsertUnaryOp IINC 1 gardenCards
   * Goal 81. Weak Mutation 133: Player.scoreFor()I:134 - InsertUnaryOp IINC -1 gardenCards
   * Goal 82. Weak Mutation 134: Player.scoreFor()I:134 - ReplaceComparisonOperator <= -> -1
   * Goal 83. Weak Mutation 137: Player.scoreFor()I:135 - ReplaceVariable score -> gardenCards
   * Goal 84. Weak Mutation 139: Player.scoreFor()I:135 - ReplaceVariable score -> numCards
   * Goal 85. Weak Mutation 140: Player.scoreFor()I:135 - ReplaceVariable score -> coins
   * Goal 86. Weak Mutation 142: Player.scoreFor()I:135 - InsertUnaryOp Negation of score
   * Goal 87. Weak Mutation 143: Player.scoreFor()I:135 - InsertUnaryOp IINC 1 score
   * Goal 88. Weak Mutation 144: Player.scoreFor()I:135 - InsertUnaryOp IINC -1 score
   * Goal 89. Weak Mutation 145: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> score
   * Goal 90. Weak Mutation 146: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> numActions
   * Goal 91. Weak Mutation 147: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> numCards
   * Goal 92. Weak Mutation 148: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> coins
   * Goal 93. Weak Mutation 149: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> numBuys
   * Goal 94. Weak Mutation 150: Player.scoreFor()I:135 - InsertUnaryOp Negation of gardenCards
   * Goal 95. Weak Mutation 151: Player.scoreFor()I:135 - ReplaceVariable numCards -> gardenCards
   * Goal 96. Weak Mutation 152: Player.scoreFor()I:135 - ReplaceVariable numCards -> score
   * Goal 97. Weak Mutation 153: Player.scoreFor()I:135 - ReplaceVariable numCards -> numActions
   * Goal 98. Weak Mutation 154: Player.scoreFor()I:135 - ReplaceVariable numCards -> coins
   * Goal 99. Weak Mutation 155: Player.scoreFor()I:135 - ReplaceVariable numCards -> numBuys
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Treasure Cards Played: ");
      player0.discard = list0;
      player0.coins = 3;
      int int0 = player0.scoreFor();
      assertEquals(2, int0);
  }

  //Test case number: 4
  /*
   * 120 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - true
   * Goal 3. Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false
   * Goal 4. Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - true
   * Goal 5. Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - false
   * Goal 6. Player.playKingdomCard()V: I36 Branch 6 IF_ACMPNE L83 - true
   * Goal 7. Player.playKingdomCard()V: I36 Branch 6 IF_ACMPNE L83 - false
   * Goal 8. Player.playKingdomCard()V: I48 Branch 7 IFNE L88 - true
   * Goal 9. Player.playKingdomCard()V: I62 Branch 8 IFNONNULL L93 - true
   * Goal 10. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 11. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 12. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 13. Branch Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - true in context: Player:playKingdomCard()V
   * Goal 14. Branch Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false in context: Player:playKingdomCard()V
   * Goal 15. Branch Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - true in context: Player:playKingdomCard()V
   * Goal 16. Branch Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - false in context: Player:playKingdomCard()V
   * Goal 17. Branch Player.playKingdomCard()V: I36 Branch 6 IF_ACMPNE L83 - false in context: Player:playKingdomCard()V
   * Goal 18. Branch Player.playKingdomCard()V: I36 Branch 6 IF_ACMPNE L83 - true in context: Player:playKingdomCard()V
   * Goal 19. Branch Player.playKingdomCard()V: I48 Branch 7 IFNE L88 - true in context: Player:playKingdomCard()V
   * Goal 20. Branch Player.playKingdomCard()V: I62 Branch 8 IFNONNULL L93 - true in context: Player:playKingdomCard()V
   * Goal 21. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 22. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 36. Player.endTurn()V: Line 282
   * Goal 37. Player.endTurn()V: Line 283
   * Goal 38. Player.endTurn()V: Line 284
   * Goal 39. Player.endTurn()V: Line 285
   * Goal 40. Player.endTurn()V: Line 288
   * Goal 41. Player.endTurn()V: Line 291
   * Goal 42. Player.endTurn()V: Line 292
   * Goal 43. Player.endTurn()V: Line 293
   * Goal 44. Player.playKingdomCard()V: Line 78
   * Goal 45. Player.playKingdomCard()V: Line 79
   * Goal 46. Player.playKingdomCard()V: Line 80
   * Goal 47. Player.playKingdomCard()V: Line 81
   * Goal 48. Player.playKingdomCard()V: Line 82
   * Goal 49. Player.playKingdomCard()V: Line 83
   * Goal 50. Player.playKingdomCard()V: Line 84
   * Goal 51. Player.playKingdomCard()V: Line 86
   * Goal 52. Player.playKingdomCard()V: Line 88
   * Goal 53. Player.playKingdomCard()V: Line 91
   * Goal 54. Player.playKingdomCard()V: Line 93
   * Goal 55. Player.playKingdomCard()V: Line 96
   * Goal 56. Player.playKingdomCard()V: Line 98
   * Goal 57. Player.playKingdomCard()V: Line 99
   * Goal 58. Player.playKingdomCard()V: Line 100
   * Goal 59. Player.playKingdomCard()V: Line 102
   * Goal 60. Player.playKingdomCard()V: Line 103
   * Goal 61. Player.playKingdomCard()V: Line 104
   * Goal 62. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 63. [METHOD] Player.endTurn()V
   * Goal 64. [METHOD] Player.playKingdomCard()V
   * Goal 65. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 66. [METHODNOEX] Player.endTurn()V
   * Goal 67. [METHODNOEX] Player.playKingdomCard()V
   * Goal 68. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 70. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 71. Weak Mutation 55: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> coins
   * Goal 72. Weak Mutation 56: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> numBuys
   * Goal 73. Weak Mutation 57: Player.playKingdomCard()V:78 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 58: Player.playKingdomCard()V:78 - InsertUnaryOp +1
   * Goal 75. Weak Mutation 59: Player.playKingdomCard()V:78 - InsertUnaryOp -1
   * Goal 76. Weak Mutation 60: Player.playKingdomCard()V:78 - ReplaceComparisonOperator <= -> -1
   * Goal 77. Weak Mutation 62: Player.playKingdomCard()V:78 - ReplaceComparisonOperator <= -> <
   * Goal 78. Weak Mutation 63: Player.playKingdomCard()V:79 - ReplaceVariable hand -> discard
   * Goal 79. Weak Mutation 64: Player.playKingdomCard()V:79 - ReplaceVariable hand -> playedCards
   * Goal 80. Weak Mutation 65: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> discard
   * Goal 81. Weak Mutation 66: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> playedCards
   * Goal 82. Weak Mutation 67: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> hand
   * Goal 83. Weak Mutation 68: Player.playKingdomCard()V:81 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 69: Player.playKingdomCard()V:83 - ReplaceComparisonOperator != -> ==
   * Goal 85. Weak Mutation 70: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> discard
   * Goal 86. Weak Mutation 71: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> playedCards
   * Goal 87. Weak Mutation 72: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> hand
   * Goal 88. Weak Mutation 74: Player.playKingdomCard()V:88 - ReplaceComparisonOperator != -> <
   * Goal 89. Weak Mutation 76: Player.playKingdomCard()V:91 - ReplaceVariable actionCards -> discard
   * Goal 90. Weak Mutation 77: Player.playKingdomCard()V:91 - ReplaceVariable actionCards -> playedCards
   * Goal 91. Weak Mutation 78: Player.playKingdomCard()V:91 - ReplaceVariable actionCards -> hand
   * Goal 92. Weak Mutation 79: Player.playKingdomCard()V:91 - ReplaceConstant - 0 -> 1
   * Goal 93. Weak Mutation 80: Player.playKingdomCard()V:93 - ReplaceComparisonOperator != null -> = null
   * Goal 94. Weak Mutation 81: Player.playKingdomCard()V:96 - ReplaceConstant - Player.actionPhase Card: -> 
   * Goal 95. Weak Mutation 82: Player.playKingdomCard()V:98 - ReplaceVariable playedCards -> discard
   * Goal 96. Weak Mutation 83: Player.playKingdomCard()V:98 - ReplaceVariable playedCards -> hand
   * Goal 97. Weak Mutation 84: Player.playKingdomCard()V:99 - ReplaceVariable hand -> discard
   * Goal 98. Weak Mutation 85: Player.playKingdomCard()V:99 - ReplaceVariable hand -> playedCards
   * Goal 99. Weak Mutation 86: Player.playKingdomCard()V:100 - ReplaceVariable numActions -> coins
   * Goal 100. Weak Mutation 87: Player.playKingdomCard()V:100 - ReplaceVariable numActions -> numBuys
   * Goal 101. Weak Mutation 88: Player.playKingdomCard()V:100 - InsertUnaryOp Negation
   * Goal 102. Weak Mutation 89: Player.playKingdomCard()V:100 - InsertUnaryOp +1
   * Goal 103. Weak Mutation 90: Player.playKingdomCard()V:100 - InsertUnaryOp -1
   * Goal 104. Weak Mutation 91: Player.playKingdomCard()V:100 - ReplaceConstant - 1 -> 0
   * Goal 105. Weak Mutation 92: Player.playKingdomCard()V:100 - ReplaceArithmeticOperator - -> +
   * Goal 106. Weak Mutation 94: Player.playKingdomCard()V:100 - ReplaceArithmeticOperator - -> *
   * Goal 107. Weak Mutation 95: Player.playKingdomCard()V:100 - ReplaceArithmeticOperator - -> /
   * Goal 108. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 109. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 110. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 111. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 112. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 113. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 115. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 116. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 117. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 118. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 119. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 120. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.endTurn();
      player0.hand = gameState0.cards;
      player0.numBuys = 1165;
      player0.playKingdomCard();
      assertEquals(19, list0.size());
  }

  //Test case number: 5
  /*
   * 32 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - true
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - true in context: Player:playKingdomCard()V
   * Goal 5. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 18. Player.playKingdomCard()V: Line 78
   * Goal 19. Player.playKingdomCard()V: Line 104
   * Goal 20. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 21. [METHOD] Player.playKingdomCard()V
   * Goal 22. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] Player.playKingdomCard()V
   * Goal 24. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 26. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 55: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> coins
   * Goal 28. Weak Mutation 56: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> numBuys
   * Goal 29. Weak Mutation 57: Player.playKingdomCard()V:78 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 58: Player.playKingdomCard()V:78 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 59: Player.playKingdomCard()V:78 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 61: Player.playKingdomCard()V:78 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "dqI6ktIv_");
      player0.numActions = (-1488);
      player0.playKingdomCard();
  }

  //Test case number: 6
  /*
   * 74 covered goals:
   * Goal 1. Player.gain(LCard;)Z: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 5. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 6. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 7. Branch Player.gain(LCard;)Z: root-Branch in context: 
   * Goal 8. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 9. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 10. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 11. [Output]: Player.drawCard()LCard;:NonNull:Card:getCost()I:Positive
   * Goal 12. [Output]: Player.drawCard()LCard;:NonNull:Card:getScore()I:Positive
   * Goal 13. [Output]: Player.drawCard()LCard;:NonNull:Card:getTreasureValue()I:Zero
   * Goal 14. [Output]: Player.gain(LCard;)Z:True
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 28. Player.drawCard()LCard;: Line 32
   * Goal 29. Player.drawCard()LCard;: Line 34
   * Goal 30. Player.drawCard()LCard;: Line 36
   * Goal 31. Player.drawCard()LCard;: Line 37
   * Goal 32. Player.drawCard()LCard;: Line 39
   * Goal 33. Player.drawCard()LCard;: Line 40
   * Goal 34. Player.drawCard()LCard;: Line 43
   * Goal 35. Player.drawCard()LCard;: Line 44
   * Goal 36. Player.drawCard()LCard;: Line 46
   * Goal 37. Player.drawCard()LCard;: Line 47
   * Goal 38. Player.drawCard()LCard;: Line 48
   * Goal 39. Player.gain(LCard;)Z: Line 67
   * Goal 40. Player.gain(LCard;)Z: Line 68
   * Goal 41. Player.gain(LCard;)Z: Line 69
   * Goal 42. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 43. [METHOD] Player.drawCard()LCard;
   * Goal 44. [METHOD] Player.gain(LCard;)Z
   * Goal 45. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 46. [METHODNOEX] Player.drawCard()LCard;
   * Goal 47. [METHODNOEX] Player.gain(LCard;)Z
   * Goal 48. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 50. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 53. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 54. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 55. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 56. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 57. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 58. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 59. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 60. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 61. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 62. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 63. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 64. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 65. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 66. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 67. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 68. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 69. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 70. Weak Mutation 44: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> playedCards
   * Goal 71. Weak Mutation 45: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> hand
   * Goal 72. Weak Mutation 46: Player.gain(LCard;)Z:68 - ReplaceConstant - Player:  -> 
   * Goal 73. Weak Mutation 47: Player.gain(LCard;)Z:68 - ReplaceConstant -  gains  -> 
   * Goal 74. Weak Mutation 48: Player.gain(LCard;)Z:69 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "CDFm &d%[");
      Card.CardName card_CardName0 = Card.CardName.Duchy;
      Card card0 = Card.getCard(list0, card_CardName0);
      player0.gain(card0);
      Card card1 = player0.drawCard();
      //  // Unstable assertion: assertNull(card1);
  }

  //Test case number: 7
  /*
   * 56 covered goals:
   * Goal 1. Player.gain(LCard;)Z: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true
   * Goal 4. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false
   * Goal 5. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 6. Branch Player.gain(LCard;)Z: root-Branch in context: 
   * Goal 7. Branch Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true in context: 
   * Goal 8. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false in context: 
   * Goal 9. scoreFor()I_java.lang.NullPointerException_IMPLICIT
   * Goal 10. [Output]: Player.gain(LCard;)Z:True
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 24. Player.gain(LCard;)Z: Line 67
   * Goal 25. Player.gain(LCard;)Z: Line 68
   * Goal 26. Player.gain(LCard;)Z: Line 69
   * Goal 27. Player.scoreFor()I: Line 106
   * Goal 28. Player.scoreFor()I: Line 107
   * Goal 29. Player.scoreFor()I: Line 108
   * Goal 30. Player.scoreFor()I: Line 110
   * Goal 31. Player.scoreFor()I: Line 115
   * Goal 32. Player.scoreFor()I: Line 116
   * Goal 33. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 34. [METHOD] Player.gain(LCard;)Z
   * Goal 35. [METHOD] Player.scoreFor()I
   * Goal 36. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] Player.gain(LCard;)Z
   * Goal 38. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 40. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 44: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> playedCards
   * Goal 42. Weak Mutation 45: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> hand
   * Goal 43. Weak Mutation 46: Player.gain(LCard;)Z:68 - ReplaceConstant - Player:  -> 
   * Goal 44. Weak Mutation 47: Player.gain(LCard;)Z:68 - ReplaceConstant -  gains  -> 
   * Goal 45. Weak Mutation 48: Player.gain(LCard;)Z:69 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 96: Player.scoreFor()I:106 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 97: Player.scoreFor()I:107 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 98: Player.scoreFor()I:108 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 99: Player.scoreFor()I:110 - ReplaceVariable hand -> discard
   * Goal 50. Weak Mutation 100: Player.scoreFor()I:110 - ReplaceVariable hand -> playedCards
   * Goal 51. Weak Mutation 101: Player.scoreFor()I:110 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 104: Player.scoreFor()I:115 - ReplaceVariable discard -> playedCards
   * Goal 53. Weak Mutation 105: Player.scoreFor()I:115 - ReplaceVariable discard -> hand
   * Goal 54. Weak Mutation 106: Player.scoreFor()I:115 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 107: Player.scoreFor()I:116 - ReplaceVariable discard -> playedCards
   * Goal 56. Weak Mutation 108: Player.scoreFor()I:116 - ReplaceVariable discard -> hand
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "mH$8#@n3BIL");
      player0.gain((Card) null);
      // Undeclared exception!
      try { 
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 30 covered goals:
   * Goal 1. Player.printStateGame()V: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.printStateGame()V: root-Branch in context: Player:printStateGame()V
   * Goal 5. printStateGame()V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 19. Player.printStateGame()V: Line 297
   * Goal 20. Player.printStateGame()V: Line 298
   * Goal 21. Player.printStateGame()V: Line 299
   * Goal 22. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 23. [METHOD] Player.printStateGame()V
   * Goal 24. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 25. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 27. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 273: Player.printStateGame()V:297 - ReplaceConstant -  ---  -> 
   * Goal 29. Weak Mutation 274: Player.printStateGame()V:297 - ReplaceConstant -  ---  -> 
   * Goal 30. Weak Mutation 275: Player.printStateGame()V:298 - ReplaceConstant -  --- --------------------------- ---  -> 
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((GameState) null, ",RjwV");
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 9
  /*
   * 51 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 3. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 4. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 5. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 6. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 7. playTtreasureCard()V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. [Output]: Player.drawCard()LCard;:Null
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 22. Player.drawCard()LCard;: Line 32
   * Goal 23. Player.drawCard()LCard;: Line 34
   * Goal 24. Player.drawCard()LCard;: Line 36
   * Goal 25. Player.drawCard()LCard;: Line 43
   * Goal 26. Player.drawCard()LCard;: Line 44
   * Goal 27. Player.drawCard()LCard;: Line 46
   * Goal 28. Player.drawCard()LCard;: Line 47
   * Goal 29. Player.drawCard()LCard;: Line 48
   * Goal 30. Player.playTtreasureCard()V: Line 141
   * Goal 31. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 32. [METHOD] Player.drawCard()LCard;
   * Goal 33. [METHOD] Player.playTtreasureCard()V
   * Goal 34. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 35. [METHODNOEX] Player.drawCard()LCard;
   * Goal 36. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 38. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 41. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 42. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 43. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 44. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 45. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 46. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 47. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 48. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 49. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 50. Weak Mutation 156: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> discard
   * Goal 51. Weak Mutation 157: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Player player0 = new Player(gameState0, "|xy?hlTl");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.playTtreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Card", e);
      }
  }

  //Test case number: 10
  /*
   * 86 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 3. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 4. Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false
   * Goal 5. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 6. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 7. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 8. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 9. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 10. Branch Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false in context: Player:playKingdomCard()V
   * Goal 11. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 12. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 13. playKingdomCard()V_java.lang.NullPointerException_IMPLICIT
   * Goal 14. [Output]: Player.drawCard()LCard;:Null
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 28. Player.drawCard()LCard;: Line 32
   * Goal 29. Player.drawCard()LCard;: Line 34
   * Goal 30. Player.drawCard()LCard;: Line 36
   * Goal 31. Player.drawCard()LCard;: Line 43
   * Goal 32. Player.drawCard()LCard;: Line 44
   * Goal 33. Player.drawCard()LCard;: Line 46
   * Goal 34. Player.drawCard()LCard;: Line 47
   * Goal 35. Player.drawCard()LCard;: Line 48
   * Goal 36. Player.endTurn()V: Line 282
   * Goal 37. Player.endTurn()V: Line 283
   * Goal 38. Player.endTurn()V: Line 284
   * Goal 39. Player.endTurn()V: Line 285
   * Goal 40. Player.endTurn()V: Line 288
   * Goal 41. Player.endTurn()V: Line 291
   * Goal 42. Player.endTurn()V: Line 292
   * Goal 43. Player.endTurn()V: Line 293
   * Goal 44. Player.playKingdomCard()V: Line 78
   * Goal 45. Player.playKingdomCard()V: Line 79
   * Goal 46. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 47. [METHOD] Player.drawCard()LCard;
   * Goal 48. [METHOD] Player.endTurn()V
   * Goal 49. [METHOD] Player.playKingdomCard()V
   * Goal 50. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 51. [METHODNOEX] Player.drawCard()LCard;
   * Goal 52. [METHODNOEX] Player.endTurn()V
   * Goal 53. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 55. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 58. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 59. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 60. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 61. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 62. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 63. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 64. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 65. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 66. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 67. Weak Mutation 55: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> coins
   * Goal 68. Weak Mutation 57: Player.playKingdomCard()V:78 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 58: Player.playKingdomCard()V:78 - InsertUnaryOp +1
   * Goal 70. Weak Mutation 59: Player.playKingdomCard()V:78 - InsertUnaryOp -1
   * Goal 71. Weak Mutation 60: Player.playKingdomCard()V:78 - ReplaceComparisonOperator <= -> -1
   * Goal 72. Weak Mutation 63: Player.playKingdomCard()V:79 - ReplaceVariable hand -> discard
   * Goal 73. Weak Mutation 64: Player.playKingdomCard()V:79 - ReplaceVariable hand -> playedCards
   * Goal 74. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 77. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 78. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 79. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 81. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 82. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 84. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 85. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 86. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "\ncoinss: ");
      player0.endTurn();
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Card", e);
      }
  }

  //Test case number: 11
  /*
   * 68 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 3. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 4. Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - false
   * Goal 5. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 6. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 7. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 8. Branch Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - false in context: 
   * Goal 9. initializePlayerTurn()V_java.lang.NullPointerException_IMPLICIT
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 23. Player.drawCard()LCard;: Line 32
   * Goal 24. Player.drawCard()LCard;: Line 34
   * Goal 25. Player.drawCard()LCard;: Line 36
   * Goal 26. Player.drawCard()LCard;: Line 43
   * Goal 27. Player.drawCard()LCard;: Line 44
   * Goal 28. Player.drawCard()LCard;: Line 46
   * Goal 29. Player.drawCard()LCard;: Line 47
   * Goal 30. Player.drawCard()LCard;: Line 48
   * Goal 31. Player.initializePlayerTurn()V: Line 55
   * Goal 32. Player.initializePlayerTurn()V: Line 56
   * Goal 33. Player.initializePlayerTurn()V: Line 57
   * Goal 34. Player.initializePlayerTurn()V: Line 60
   * Goal 35. Player.initializePlayerTurn()V: Line 61
   * Goal 36. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 37. [METHOD] Player.initializePlayerTurn()V
   * Goal 38. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 39. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 41. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 44. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 45. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 46. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 47. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 48. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 49. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 50. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 51. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 52. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 53. Weak Mutation 26: Player.initializePlayerTurn()V:55 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 27: Player.initializePlayerTurn()V:56 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 28: Player.initializePlayerTurn()V:57 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 29: Player.initializePlayerTurn()V:60 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 30: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> numActions
   * Goal 58. Weak Mutation 31: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> coins
   * Goal 59. Weak Mutation 32: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> numBuys
   * Goal 60. Weak Mutation 33: Player.initializePlayerTurn()V:60 - InsertUnaryOp Negation of i
   * Goal 61. Weak Mutation 34: Player.initializePlayerTurn()V:60 - InsertUnaryOp IINC 1 i
   * Goal 62. Weak Mutation 35: Player.initializePlayerTurn()V:60 - InsertUnaryOp IINC -1 i
   * Goal 63. Weak Mutation 36: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 0
   * Goal 64. Weak Mutation 37: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 1
   * Goal 65. Weak Mutation 38: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> -1
   * Goal 66. Weak Mutation 39: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 4
   * Goal 67. Weak Mutation 40: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 6
   * Goal 68. Weak Mutation 41: Player.initializePlayerTurn()V:60 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      // Undeclared exception!
      try { 
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 27 covered goals:
   * Goal 1. Player.gain(LCard;)Z: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.gain(LCard;)Z: root-Branch in context: 
   * Goal 5. gain(LCard;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 19. Player.gain(LCard;)Z: Line 67
   * Goal 20. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 21. [METHOD] Player.gain(LCard;)Z
   * Goal 22. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 23. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 25. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 44: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> playedCards
   * Goal 27. Weak Mutation 45: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> hand
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "CDFm &d%[");
      Card.CardName card_CardName0 = Card.CardName.Duchy;
      Card card0 = Card.getCard(list0, card_CardName0);
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.gain(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 13
  /*
   * 50 covered goals:
   * Goal 1. Player.discard(LCard;)V: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.endTurn()V: I24 Branch 85 IFEQ L285 - false
   * Goal 4. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 5. Branch Player.discard(LCard;)V: root-Branch in context: Player:discard(LCard;)V
   * Goal 6. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - false in context: 
   * Goal 7. endTurn()V_java.util.ConcurrentModificationException_IMPLICIT
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 21. Player.discard(LCard;)V: Line 73
   * Goal 22. Player.discard(LCard;)V: Line 74
   * Goal 23. Player.discard(LCard;)V: Line 75
   * Goal 24. Player.discard(LCard;)V: Line 76
   * Goal 25. Player.endTurn()V: Line 282
   * Goal 26. Player.endTurn()V: Line 283
   * Goal 27. Player.endTurn()V: Line 284
   * Goal 28. Player.endTurn()V: Line 285
   * Goal 29. Player.endTurn()V: Line 286
   * Goal 30. Player.endTurn()V: Line 287
   * Goal 31. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 32. [METHOD] Player.discard(LCard;)V
   * Goal 33. [METHOD] Player.endTurn()V
   * Goal 34. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 35. [METHODNOEX] Player.discard(LCard;)V
   * Goal 36. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 38. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 49: Player.discard(LCard;)V:73 - ReplaceVariable hand -> discard
   * Goal 40. Weak Mutation 50: Player.discard(LCard;)V:73 - ReplaceVariable hand -> playedCards
   * Goal 41. Weak Mutation 51: Player.discard(LCard;)V:74 - ReplaceVariable discard -> playedCards
   * Goal 42. Weak Mutation 52: Player.discard(LCard;)V:74 - ReplaceVariable discard -> hand
   * Goal 43. Weak Mutation 53: Player.discard(LCard;)V:75 - ReplaceConstant - Player:   -> 
   * Goal 44. Weak Mutation 54: Player.discard(LCard;)V:75 - ReplaceConstant -  discards  -> 
   * Goal 45. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 47. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 49. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 263: Player.endTurn()V:286 - ReplaceVariable discard -> hand
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((GameState) null, "ieast");
      player0.discard((Card) null);
      List<Card> list0 = player0.discard;
      player0.playedCards = list0;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList$Itr", e);
      }
  }

  //Test case number: 14
  /*
   * 30 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 3. endTurn()V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 5. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 17. Player.endTurn()V: Line 282
   * Goal 18. Player.endTurn()V: Line 283
   * Goal 19. Player.endTurn()V: Line 284
   * Goal 20. Player.endTurn()V: Line 285
   * Goal 21. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 22. [METHOD] Player.endTurn()V
   * Goal 23. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 29. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 30. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Player player0 = new Player(gameState0, (String) null);
      player0.playedCards = null;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 15
  /*
   * 30 covered goals:
   * Goal 1. Player.discard(LCard;)V: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.discard(LCard;)V: root-Branch in context: Player:discard(LCard;)V
   * Goal 5. discard(LCard;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 19. Player.discard(LCard;)V: Line 73
   * Goal 20. Player.discard(LCard;)V: Line 74
   * Goal 21. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 22. [METHOD] Player.discard(LCard;)V
   * Goal 23. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 26. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 49: Player.discard(LCard;)V:73 - ReplaceVariable hand -> discard
   * Goal 28. Weak Mutation 50: Player.discard(LCard;)V:73 - ReplaceVariable hand -> playedCards
   * Goal 29. Weak Mutation 51: Player.discard(LCard;)V:74 - ReplaceVariable discard -> playedCards
   * Goal 30. Weak Mutation 52: Player.discard(LCard;)V:74 - ReplaceVariable discard -> hand
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.discard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 16
  /*
   * 53 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 3. Player.endTurn()V: I24 Branch 85 IFEQ L285 - false
   * Goal 4. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 5. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 6. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - false in context: 
   * Goal 7. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 8. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 22. Player.endTurn()V: Line 282
   * Goal 23. Player.endTurn()V: Line 283
   * Goal 24. Player.endTurn()V: Line 284
   * Goal 25. Player.endTurn()V: Line 285
   * Goal 26. Player.endTurn()V: Line 286
   * Goal 27. Player.endTurn()V: Line 287
   * Goal 28. Player.endTurn()V: Line 288
   * Goal 29. Player.endTurn()V: Line 291
   * Goal 30. Player.endTurn()V: Line 292
   * Goal 31. Player.endTurn()V: Line 293
   * Goal 32. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 33. [METHOD] Player.endTurn()V
   * Goal 34. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 35. [METHODNOEX] Player.endTurn()V
   * Goal 36. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 38. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 41. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 43. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 44. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 262: Player.endTurn()V:286 - ReplaceVariable discard -> playedCards
   * Goal 46. Weak Mutation 263: Player.endTurn()V:286 - ReplaceVariable discard -> hand
   * Goal 47. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 48. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 49. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 51. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 52. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 53. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Treasure Cards Played: ");
      player0.discard = list0;
      Player player1 = new Player(gameState0, "Treasure Cards Played: ");
      player1.playedCards = player0.discard;
      player1.endTurn();
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
  }

  //Test case number: 17
  /*
   * 124 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 3. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 4. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 5. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 6. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 7. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 8. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true
   * Goal 9. Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true
   * Goal 10. Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true
   * Goal 11. Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - true
   * Goal 12. Player.buyCard(LGameState;)V: I1229 Branch 79 IF_ICMPNE L264 - true
   * Goal 13. Player.buyCard(LGameState;)V: I1295 Branch 82 IF_ICMPLT L271 - false
   * Goal 14. Player.buyCard(LGameState;)V: I1305 Branch 83 IFEQ L272 - true
   * Goal 15. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 16. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 17. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 18. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 19. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 20. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 21. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 22. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 23. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 24. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true in context: 
   * Goal 25. Branch Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true in context: 
   * Goal 26. Branch Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true in context: 
   * Goal 27. Branch Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - true in context: 
   * Goal 28. Branch Player.buyCard(LGameState;)V: I1229 Branch 79 IF_ICMPNE L264 - true in context: 
   * Goal 29. Branch Player.buyCard(LGameState;)V: I1295 Branch 82 IF_ICMPLT L271 - false in context: 
   * Goal 30. Branch Player.buyCard(LGameState;)V: I1305 Branch 83 IFEQ L272 - true in context: 
   * Goal 31. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 32. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 36. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 39. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 40. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 41. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 42. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 43. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 44. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 45. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 46. Player.buyCard(LGameState;)V: Line 154
   * Goal 47. Player.buyCard(LGameState;)V: Line 155
   * Goal 48. Player.buyCard(LGameState;)V: Line 159
   * Goal 49. Player.buyCard(LGameState;)V: Line 163
   * Goal 50. Player.buyCard(LGameState;)V: Line 176
   * Goal 51. Player.buyCard(LGameState;)V: Line 200
   * Goal 52. Player.buyCard(LGameState;)V: Line 233
   * Goal 53. Player.buyCard(LGameState;)V: Line 251
   * Goal 54. Player.buyCard(LGameState;)V: Line 264
   * Goal 55. Player.buyCard(LGameState;)V: Line 271
   * Goal 56. Player.buyCard(LGameState;)V: Line 272
   * Goal 57. Player.buyCard(LGameState;)V: Line 278
   * Goal 58. Player.buyCard(LGameState;)V: Line 280
   * Goal 59. Player.endTurn()V: Line 282
   * Goal 60. Player.endTurn()V: Line 283
   * Goal 61. Player.endTurn()V: Line 284
   * Goal 62. Player.endTurn()V: Line 285
   * Goal 63. Player.endTurn()V: Line 288
   * Goal 64. Player.endTurn()V: Line 291
   * Goal 65. Player.endTurn()V: Line 292
   * Goal 66. Player.endTurn()V: Line 293
   * Goal 67. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 68. [METHOD] Player.buyCard(LGameState;)V
   * Goal 69. [METHOD] Player.endTurn()V
   * Goal 70. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 71. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 72. [METHODNOEX] Player.endTurn()V
   * Goal 73. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 75. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 77. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 78. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 80. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 81. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 82. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 83. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 84. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 85. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 87. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 88. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 89. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 90. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 91. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 93. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 94. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 95. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 96. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 97. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 98. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 99. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 100. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 102. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 103. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 104. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 105. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 106. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 107. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 108. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 109. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 110. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 111. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 112. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 113. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 114. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 115. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 116. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 117. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 119. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 120. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 122. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 123. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 124. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DFm d%[");
      player0.endTurn();
      player0.coins = 3894;
      player0.buyCard(gameState0);
  }

  //Test case number: 18
  /*
   * 175 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - true
   * Goal 3. Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - true
   * Goal 4. Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - false
   * Goal 5. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 6. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 7. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 8. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 9. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 10. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 11. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true
   * Goal 12. Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true
   * Goal 13. Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true
   * Goal 14. Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - false
   * Goal 15. Player.buyCard(LGameState;)V: I1100 Branch 73 IFNE L253 - false
   * Goal 16. Player.buyCard(LGameState;)V: I1108 Branch 74 IFEQ L253 - true
   * Goal 17. Player.buyCard(LGameState;)V: I1163 Branch 76 IF_ICMPNE L258 - true
   * Goal 18. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 19. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 20. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 21. Branch Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - true in context: Player:playTtreasureCard()V
   * Goal 22. Branch Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - true in context: Player:playTtreasureCard()V
   * Goal 23. Branch Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - false in context: Player:playTtreasureCard()V
   * Goal 24. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 25. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 26. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 27. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 28. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 29. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 30. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true in context: 
   * Goal 31. Branch Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true in context: 
   * Goal 32. Branch Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true in context: 
   * Goal 33. Branch Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - false in context: 
   * Goal 34. Branch Player.buyCard(LGameState;)V: I1100 Branch 73 IFNE L253 - false in context: 
   * Goal 35. Branch Player.buyCard(LGameState;)V: I1108 Branch 74 IFEQ L253 - true in context: 
   * Goal 36. Branch Player.buyCard(LGameState;)V: I1163 Branch 76 IF_ICMPNE L258 - true in context: 
   * Goal 37. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 38. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 39. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 40. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 41. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 42. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 43. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 44. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 45. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 46. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 47. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 48. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 49. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 50. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 51. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 52. Player.buyCard(LGameState;)V: Line 154
   * Goal 53. Player.buyCard(LGameState;)V: Line 155
   * Goal 54. Player.buyCard(LGameState;)V: Line 159
   * Goal 55. Player.buyCard(LGameState;)V: Line 163
   * Goal 56. Player.buyCard(LGameState;)V: Line 176
   * Goal 57. Player.buyCard(LGameState;)V: Line 200
   * Goal 58. Player.buyCard(LGameState;)V: Line 233
   * Goal 59. Player.buyCard(LGameState;)V: Line 251
   * Goal 60. Player.buyCard(LGameState;)V: Line 252
   * Goal 61. Player.buyCard(LGameState;)V: Line 253
   * Goal 62. Player.buyCard(LGameState;)V: Line 258
   * Goal 63. Player.buyCard(LGameState;)V: Line 263
   * Goal 64. Player.buyCard(LGameState;)V: Line 278
   * Goal 65. Player.buyCard(LGameState;)V: Line 280
   * Goal 66. Player.endTurn()V: Line 282
   * Goal 67. Player.endTurn()V: Line 283
   * Goal 68. Player.endTurn()V: Line 284
   * Goal 69. Player.endTurn()V: Line 285
   * Goal 70. Player.endTurn()V: Line 288
   * Goal 71. Player.endTurn()V: Line 291
   * Goal 72. Player.endTurn()V: Line 292
   * Goal 73. Player.endTurn()V: Line 293
   * Goal 74. Player.playTtreasureCard()V: Line 141
   * Goal 75. Player.playTtreasureCard()V: Line 142
   * Goal 76. Player.playTtreasureCard()V: Line 144
   * Goal 77. Player.playTtreasureCard()V: Line 145
   * Goal 78. Player.playTtreasureCard()V: Line 146
   * Goal 79. Player.playTtreasureCard()V: Line 147
   * Goal 80. Player.playTtreasureCard()V: Line 148
   * Goal 81. Player.playTtreasureCard()V: Line 149
   * Goal 82. Player.playTtreasureCard()V: Line 150
   * Goal 83. Player.playTtreasureCard()V: Line 151
   * Goal 84. Player.playTtreasureCard()V: Line 152
   * Goal 85. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 86. [METHOD] Player.buyCard(LGameState;)V
   * Goal 87. [METHOD] Player.endTurn()V
   * Goal 88. [METHOD] Player.playTtreasureCard()V
   * Goal 89. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 90. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 91. [METHODNOEX] Player.endTurn()V
   * Goal 92. [METHODNOEX] Player.playTtreasureCard()V
   * Goal 93. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 95. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 96. Weak Mutation 156: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> discard
   * Goal 97. Weak Mutation 157: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> playedCards
   * Goal 98. Weak Mutation 158: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> discard
   * Goal 99. Weak Mutation 159: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> playedCards
   * Goal 100. Weak Mutation 160: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> hand
   * Goal 101. Weak Mutation 162: Player.playTtreasureCard()V:142 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 164: Player.playTtreasureCard()V:144 - ReplaceConstant - Treasure Cards Played:  -> 
   * Goal 103. Weak Mutation 165: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> discard
   * Goal 104. Weak Mutation 166: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> playedCards
   * Goal 105. Weak Mutation 167: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> hand
   * Goal 106. Weak Mutation 168: Player.playTtreasureCard()V:145 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 169: Player.playTtreasureCard()V:146 - ReplaceVariable coins -> numActions
   * Goal 108. Weak Mutation 170: Player.playTtreasureCard()V:146 - ReplaceVariable coins -> numBuys
   * Goal 109. Weak Mutation 171: Player.playTtreasureCard()V:146 - InsertUnaryOp Negation
   * Goal 110. Weak Mutation 172: Player.playTtreasureCard()V:146 - InsertUnaryOp +1
   * Goal 111. Weak Mutation 173: Player.playTtreasureCard()V:146 - InsertUnaryOp -1
   * Goal 112. Weak Mutation 174: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> %
   * Goal 113. Weak Mutation 175: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> -
   * Goal 114. Weak Mutation 176: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> *
   * Goal 115. Weak Mutation 177: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> /
   * Goal 116. Weak Mutation 178: Player.playTtreasureCard()V:148 - ReplaceVariable playedCards -> discard
   * Goal 117. Weak Mutation 179: Player.playTtreasureCard()V:148 - ReplaceVariable playedCards -> hand
   * Goal 118. Weak Mutation 180: Player.playTtreasureCard()V:149 - ReplaceVariable hand -> discard
   * Goal 119. Weak Mutation 181: Player.playTtreasureCard()V:149 - ReplaceVariable hand -> playedCards
   * Goal 120. Weak Mutation 182: Player.playTtreasureCard()V:151 - ReplaceConstant - 's current coins:  -> 
   * Goal 121. Weak Mutation 183: Player.playTtreasureCard()V:151 - ReplaceVariable coins -> numActions
   * Goal 122. Weak Mutation 184: Player.playTtreasureCard()V:151 - ReplaceVariable coins -> numBuys
   * Goal 123. Weak Mutation 185: Player.playTtreasureCard()V:151 - InsertUnaryOp Negation
   * Goal 124. Weak Mutation 186: Player.playTtreasureCard()V:151 - InsertUnaryOp +1
   * Goal 125. Weak Mutation 187: Player.playTtreasureCard()V:151 - InsertUnaryOp -1
   * Goal 126. Weak Mutation 188: Player.playTtreasureCard()V:151 - ReplaceConstant - 
 -> 
   * Goal 127. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 128. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 129. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 130. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 131. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 132. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 133. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 134. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 135. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 136. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 137. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 138. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 139. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 140. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 141. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 142. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 143. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 144. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 145. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 146. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 147. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 148. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 149. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 150. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 151. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 152. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 153. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 154. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 155. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 156. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 157. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 158. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 159. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 160. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 161. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 162. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 163. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 164. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 165. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 166. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 167. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 168. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 169. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 170. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 171. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 172. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 173. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 174. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 175. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.endTurn();
      player0.hand = gameState0.cards;
      player0.playTtreasureCard();
      player0.buyCard(gameState0);
      assertEquals(17, list0.size());
  }

  //Test case number: 19
  /*
   * 121 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 3. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 4. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 5. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 6. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 7. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 8. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true
   * Goal 9. Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true
   * Goal 10. Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true
   * Goal 11. Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - true
   * Goal 12. Player.buyCard(LGameState;)V: I1229 Branch 79 IF_ICMPNE L264 - false
   * Goal 13. Player.buyCard(LGameState;)V: I1239 Branch 80 IFEQ L265 - true
   * Goal 14. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 15. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 16. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 17. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 18. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 19. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 20. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 21. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 22. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 23. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true in context: 
   * Goal 24. Branch Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true in context: 
   * Goal 25. Branch Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - true in context: 
   * Goal 26. Branch Player.buyCard(LGameState;)V: I1089 Branch 72 IF_ICMPNE L251 - true in context: 
   * Goal 27. Branch Player.buyCard(LGameState;)V: I1229 Branch 79 IF_ICMPNE L264 - false in context: 
   * Goal 28. Branch Player.buyCard(LGameState;)V: I1239 Branch 80 IFEQ L265 - true in context: 
   * Goal 29. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 30. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 36. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 39. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 40. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 41. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 42. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 43. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 44. Player.buyCard(LGameState;)V: Line 154
   * Goal 45. Player.buyCard(LGameState;)V: Line 155
   * Goal 46. Player.buyCard(LGameState;)V: Line 159
   * Goal 47. Player.buyCard(LGameState;)V: Line 163
   * Goal 48. Player.buyCard(LGameState;)V: Line 176
   * Goal 49. Player.buyCard(LGameState;)V: Line 200
   * Goal 50. Player.buyCard(LGameState;)V: Line 233
   * Goal 51. Player.buyCard(LGameState;)V: Line 251
   * Goal 52. Player.buyCard(LGameState;)V: Line 264
   * Goal 53. Player.buyCard(LGameState;)V: Line 265
   * Goal 54. Player.buyCard(LGameState;)V: Line 278
   * Goal 55. Player.buyCard(LGameState;)V: Line 280
   * Goal 56. Player.endTurn()V: Line 282
   * Goal 57. Player.endTurn()V: Line 283
   * Goal 58. Player.endTurn()V: Line 284
   * Goal 59. Player.endTurn()V: Line 285
   * Goal 60. Player.endTurn()V: Line 288
   * Goal 61. Player.endTurn()V: Line 291
   * Goal 62. Player.endTurn()V: Line 292
   * Goal 63. Player.endTurn()V: Line 293
   * Goal 64. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 65. [METHOD] Player.buyCard(LGameState;)V
   * Goal 66. [METHOD] Player.endTurn()V
   * Goal 67. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 68. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 69. [METHODNOEX] Player.endTurn()V
   * Goal 70. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 71. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 72. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 74. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 75. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 77. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 78. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 79. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 80. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 81. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 82. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 83. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 84. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 85. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 86. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 87. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 88. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 90. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 91. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 92. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 93. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 94. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 95. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 96. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 97. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 99. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 100. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 101. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 102. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 103. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 104. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 105. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 106. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 107. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 108. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 109. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 110. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 111. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 113. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 114. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 115. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 116. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 117. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 119. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 120. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 121. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.endTurn();
      player0.coins = 7;
      LinkedList<Card> linkedList0 = player0.deck;
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      player0.buyCard(gameState0);
  }

  //Test case number: 20
  /*
   * 131 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 3. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 4. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 5. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 6. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 7. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 8. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true
   * Goal 9. Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - false
   * Goal 10. Player.buyCard(LGameState;)V: I505 Branch 44 IFNE L202 - false
   * Goal 11. Player.buyCard(LGameState;)V: I513 Branch 45 IFEQ L202 - true
   * Goal 12. Player.buyCard(LGameState;)V: I568 Branch 47 IF_ICMPNE L207 - true
   * Goal 13. Player.buyCard(LGameState;)V: I631 Branch 50 IF_ICMPNE L212 - true
   * Goal 14. Player.buyCard(LGameState;)V: I694 Branch 53 IF_ICMPNE L217 - true
   * Goal 15. Player.buyCard(LGameState;)V: I757 Branch 56 IF_ICMPNE L222 - true
   * Goal 16. Player.buyCard(LGameState;)V: I820 Branch 59 IF_ICMPNE L227 - true
   * Goal 17. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 18. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 19. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 20. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 21. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 22. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 23. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 24. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 25. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 26. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true in context: 
   * Goal 27. Branch Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - false in context: 
   * Goal 28. Branch Player.buyCard(LGameState;)V: I505 Branch 44 IFNE L202 - false in context: 
   * Goal 29. Branch Player.buyCard(LGameState;)V: I513 Branch 45 IFEQ L202 - true in context: 
   * Goal 30. Branch Player.buyCard(LGameState;)V: I568 Branch 47 IF_ICMPNE L207 - true in context: 
   * Goal 31. Branch Player.buyCard(LGameState;)V: I631 Branch 50 IF_ICMPNE L212 - true in context: 
   * Goal 32. Branch Player.buyCard(LGameState;)V: I694 Branch 53 IF_ICMPNE L217 - true in context: 
   * Goal 33. Branch Player.buyCard(LGameState;)V: I757 Branch 56 IF_ICMPNE L222 - true in context: 
   * Goal 34. Branch Player.buyCard(LGameState;)V: I820 Branch 59 IF_ICMPNE L227 - true in context: 
   * Goal 35. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 36. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 39. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 40. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 41. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 42. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 43. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 44. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 45. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 46. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 47. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 48. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 49. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 50. Player.buyCard(LGameState;)V: Line 154
   * Goal 51. Player.buyCard(LGameState;)V: Line 155
   * Goal 52. Player.buyCard(LGameState;)V: Line 159
   * Goal 53. Player.buyCard(LGameState;)V: Line 163
   * Goal 54. Player.buyCard(LGameState;)V: Line 176
   * Goal 55. Player.buyCard(LGameState;)V: Line 200
   * Goal 56. Player.buyCard(LGameState;)V: Line 201
   * Goal 57. Player.buyCard(LGameState;)V: Line 202
   * Goal 58. Player.buyCard(LGameState;)V: Line 207
   * Goal 59. Player.buyCard(LGameState;)V: Line 212
   * Goal 60. Player.buyCard(LGameState;)V: Line 217
   * Goal 61. Player.buyCard(LGameState;)V: Line 222
   * Goal 62. Player.buyCard(LGameState;)V: Line 227
   * Goal 63. Player.buyCard(LGameState;)V: Line 232
   * Goal 64. Player.buyCard(LGameState;)V: Line 278
   * Goal 65. Player.buyCard(LGameState;)V: Line 280
   * Goal 66. Player.endTurn()V: Line 282
   * Goal 67. Player.endTurn()V: Line 283
   * Goal 68. Player.endTurn()V: Line 284
   * Goal 69. Player.endTurn()V: Line 285
   * Goal 70. Player.endTurn()V: Line 288
   * Goal 71. Player.endTurn()V: Line 291
   * Goal 72. Player.endTurn()V: Line 292
   * Goal 73. Player.endTurn()V: Line 293
   * Goal 74. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 75. [METHOD] Player.buyCard(LGameState;)V
   * Goal 76. [METHOD] Player.endTurn()V
   * Goal 77. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 78. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 79. [METHODNOEX] Player.endTurn()V
   * Goal 80. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 82. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 84. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 85. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 87. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 88. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 89. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 90. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 91. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 92. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 94. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 95. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 96. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 97. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 98. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 99. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 100. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 101. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 103. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 104. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 105. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 106. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 107. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 108. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 109. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 110. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 111. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 113. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 114. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 115. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 116. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 117. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 118. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 119. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 120. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 121. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 122. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 123. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 124. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 125. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 126. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 127. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 128. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 129. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 130. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 131. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.endTurn();
      player0.coins = 4;
      LinkedList<Card> linkedList0 = player0.deck;
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      player0.buyCard(gameState0);
  }

  //Test case number: 21
  /*
   * 110 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 3. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 4. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 5. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 6. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 7. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true
   * Goal 8. Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true
   * Goal 9. Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - false
   * Goal 10. Player.buyCard(LGameState;)V: I897 Branch 63 IFNE L235 - false
   * Goal 11. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 12. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 13. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 14. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 15. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 16. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 17. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 18. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 19. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - true in context: 
   * Goal 20. Branch Player.buyCard(LGameState;)V: I494 Branch 43 IF_ICMPNE L200 - true in context: 
   * Goal 21. Branch Player.buyCard(LGameState;)V: I886 Branch 62 IF_ICMPNE L233 - false in context: 
   * Goal 22. Branch Player.buyCard(LGameState;)V: I897 Branch 63 IFNE L235 - false in context: 
   * Goal 23. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 24. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 25. buyCard(LGameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 36. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 39. Player.buyCard(LGameState;)V: Line 154
   * Goal 40. Player.buyCard(LGameState;)V: Line 155
   * Goal 41. Player.buyCard(LGameState;)V: Line 159
   * Goal 42. Player.buyCard(LGameState;)V: Line 163
   * Goal 43. Player.buyCard(LGameState;)V: Line 176
   * Goal 44. Player.buyCard(LGameState;)V: Line 200
   * Goal 45. Player.buyCard(LGameState;)V: Line 233
   * Goal 46. Player.buyCard(LGameState;)V: Line 234
   * Goal 47. Player.buyCard(LGameState;)V: Line 235
   * Goal 48. Player.endTurn()V: Line 282
   * Goal 49. Player.endTurn()V: Line 283
   * Goal 50. Player.endTurn()V: Line 284
   * Goal 51. Player.endTurn()V: Line 285
   * Goal 52. Player.endTurn()V: Line 288
   * Goal 53. Player.endTurn()V: Line 291
   * Goal 54. Player.endTurn()V: Line 292
   * Goal 55. Player.endTurn()V: Line 293
   * Goal 56. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 57. [METHOD] Player.buyCard(LGameState;)V
   * Goal 58. [METHOD] Player.endTurn()V
   * Goal 59. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 60. [METHODNOEX] Player.endTurn()V
   * Goal 61. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 62. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 63. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 65. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 67. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 68. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 69. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 70. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 71. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 73. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 74. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 75. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 76. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 77. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 79. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 80. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 81. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 82. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 83. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 85. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 86. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 87. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 88. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 89. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 90. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 92. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 93. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 94. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 95. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 96. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 97. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 98. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 99. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 100. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 102. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 103. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 105. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 106. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 108. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 109. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 110. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@B~IL {");
      player0.endTurn();
      player0.coins = 5;
      // Undeclared exception!
      try { 
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 22
  /*
   * 164 covered goals:
   * Goal 1. Player.toString()Ljava/lang/String;: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 4. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 5. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 6. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 7. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 8. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - false
   * Goal 9. Player.buyCard(LGameState;)V: I99 Branch 24 IFNE L165 - false
   * Goal 10. Player.buyCard(LGameState;)V: I107 Branch 25 IFEQ L165 - true
   * Goal 11. Player.buyCard(LGameState;)V: I162 Branch 27 IF_ICMPNE L170 - true
   * Goal 12. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 13. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 14. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 15. Branch Player.toString()Ljava/lang/String;: root-Branch in context: Player:toString()Ljava/lang/String;
   * Goal 16. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 17. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 18. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 19. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 20. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 21. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - false in context: 
   * Goal 22. Branch Player.buyCard(LGameState;)V: I107 Branch 25 IFEQ L165 - true in context: 
   * Goal 23. Branch Player.buyCard(LGameState;)V: I99 Branch 24 IFNE L165 - false in context: 
   * Goal 24. Branch Player.buyCard(LGameState;)V: I162 Branch 27 IF_ICMPNE L170 - true in context: 
   * Goal 25. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 26. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 27. [Output]: Player.toString()Ljava/lang/String;:NonEmptyString
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 36. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 39. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 40. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 41. Player.buyCard(LGameState;)V: Line 154
   * Goal 42. Player.buyCard(LGameState;)V: Line 155
   * Goal 43. Player.buyCard(LGameState;)V: Line 159
   * Goal 44. Player.buyCard(LGameState;)V: Line 163
   * Goal 45. Player.buyCard(LGameState;)V: Line 164
   * Goal 46. Player.buyCard(LGameState;)V: Line 165
   * Goal 47. Player.buyCard(LGameState;)V: Line 170
   * Goal 48. Player.buyCard(LGameState;)V: Line 175
   * Goal 49. Player.buyCard(LGameState;)V: Line 278
   * Goal 50. Player.buyCard(LGameState;)V: Line 280
   * Goal 51. Player.endTurn()V: Line 282
   * Goal 52. Player.endTurn()V: Line 283
   * Goal 53. Player.endTurn()V: Line 284
   * Goal 54. Player.endTurn()V: Line 285
   * Goal 55. Player.endTurn()V: Line 288
   * Goal 56. Player.endTurn()V: Line 291
   * Goal 57. Player.endTurn()V: Line 292
   * Goal 58. Player.endTurn()V: Line 293
   * Goal 59. Player.toString()Ljava/lang/String;: Line 304
   * Goal 60. Player.toString()Ljava/lang/String;: Line 315
   * Goal 61. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 62. [METHOD] Player.buyCard(LGameState;)V
   * Goal 63. [METHOD] Player.endTurn()V
   * Goal 64. [METHOD] Player.toString()Ljava/lang/String;
   * Goal 65. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 66. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 67. [METHODNOEX] Player.endTurn()V
   * Goal 68. [METHODNOEX] Player.toString()Ljava/lang/String;
   * Goal 69. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 71. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 73. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 74. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 76. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 77. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 78. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 79. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 80. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 81. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 83. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 84. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 85. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 86. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 87. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 89. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 90. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 91. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 92. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 93. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 95. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 96. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 97. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 98. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 99. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 100. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 101. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 102. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 103. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 104. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 105. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 106. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 107. Weak Mutation 239: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> -1
   * Goal 108. Weak Mutation 242: Player.buyCard(LGameState;)V:164 - ReplaceConstant - 2 -> 0
   * Goal 109. Weak Mutation 243: Player.buyCard(LGameState;)V:164 - ReplaceConstant - 2 -> 1
   * Goal 110. Weak Mutation 244: Player.buyCard(LGameState;)V:164 - ReplaceConstant - 2 -> -1
   * Goal 111. Weak Mutation 245: Player.buyCard(LGameState;)V:164 - ReplaceConstant - 2 -> 3
   * Goal 112. Weak Mutation 246: Player.buyCard(LGameState;)V:165 - ReplaceVariable rand -> numActions
   * Goal 113. Weak Mutation 247: Player.buyCard(LGameState;)V:165 - ReplaceVariable rand -> coins
   * Goal 114. Weak Mutation 248: Player.buyCard(LGameState;)V:165 - ReplaceVariable rand -> numBuys
   * Goal 115. Weak Mutation 249: Player.buyCard(LGameState;)V:165 - InsertUnaryOp Negation of rand
   * Goal 116. Weak Mutation 250: Player.buyCard(LGameState;)V:165 - InsertUnaryOp IINC 1 rand
   * Goal 117. Weak Mutation 251: Player.buyCard(LGameState;)V:165 - InsertUnaryOp IINC -1 rand
   * Goal 118. Weak Mutation 252: Player.buyCard(LGameState;)V:165 - ReplaceComparisonOperator != -> -1
   * Goal 119. Weak Mutation 255: Player.buyCard(LGameState;)V:165 - ReplaceComparisonOperator == -> !=
   * Goal 120. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 121. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 122. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 123. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 124. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 125. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 126. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 127. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 128. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 129. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 130. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 131. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 132. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   * Goal 133. Weak Mutation 277: Player.toString()Ljava/lang/String;:304 - ReplaceConstant -  ---  -> 
   * Goal 134. Weak Mutation 278: Player.toString()Ljava/lang/String;:304 - ReplaceConstant -  ---  -> 
   * Goal 135. Weak Mutation 279: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
--- --------------------------- --- 
Hand:  -> 
   * Goal 136. Weak Mutation 280: Player.toString()Ljava/lang/String;:304 - ReplaceVariable hand -> discard
   * Goal 137. Weak Mutation 281: Player.toString()Ljava/lang/String;:304 - ReplaceVariable hand -> playedCards
   * Goal 138. Weak Mutation 282: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Discard:  -> 
   * Goal 139. Weak Mutation 283: Player.toString()Ljava/lang/String;:304 - ReplaceVariable discard -> playedCards
   * Goal 140. Weak Mutation 284: Player.toString()Ljava/lang/String;:304 - ReplaceVariable discard -> hand
   * Goal 141. Weak Mutation 285: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Deck:  -> 
   * Goal 142. Weak Mutation 286: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
Played Cards:  -> 
   * Goal 143. Weak Mutation 287: Player.toString()Ljava/lang/String;:304 - ReplaceVariable playedCards -> discard
   * Goal 144. Weak Mutation 288: Player.toString()Ljava/lang/String;:304 - ReplaceVariable playedCards -> hand
   * Goal 145. Weak Mutation 289: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
numActions:  -> 
   * Goal 146. Weak Mutation 290: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numActions -> coins
   * Goal 147. Weak Mutation 291: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numActions -> numBuys
   * Goal 148. Weak Mutation 292: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 149. Weak Mutation 293: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 150. Weak Mutation 294: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 151. Weak Mutation 295: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
coinss:  -> 
   * Goal 152. Weak Mutation 296: Player.toString()Ljava/lang/String;:304 - ReplaceVariable coins -> numActions
   * Goal 153. Weak Mutation 297: Player.toString()Ljava/lang/String;:304 - ReplaceVariable coins -> numBuys
   * Goal 154. Weak Mutation 298: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 155. Weak Mutation 299: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 156. Weak Mutation 300: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 157. Weak Mutation 301: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
numBuys:  -> 
   * Goal 158. Weak Mutation 302: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numBuys -> coins
   * Goal 159. Weak Mutation 303: Player.toString()Ljava/lang/String;:304 - ReplaceVariable numBuys -> numActions
   * Goal 160. Weak Mutation 304: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp Negation
   * Goal 161. Weak Mutation 305: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp +1
   * Goal 162. Weak Mutation 306: Player.toString()Ljava/lang/String;:304 - InsertUnaryOp -1
   * Goal 163. Weak Mutation 307: Player.toString()Ljava/lang/String;:304 - ReplaceConstant - 
 -> 
   * Goal 164. Weak Mutation 308: Player.toString()Ljava/lang/String;:315 - ReplaceVariable sb -> player_username
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.endTurn();
      player0.coins = 2;
      LinkedList<Card> linkedList0 = player0.deck;
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      player0.buyCard(gameState0);
      String string0 = player0.toString();
      assertEquals(" --- mH$8#@Bf~IL { --- \n--- --------------------------- --- \nHand: []\nDiscard: []\nDeck: []\nPlayed Cards: []\nnumActions: 1\ncoinss: 2\nnumBuys: 0\n", string0);
  }

  //Test case number: 23
  /*
   * 89 covered goals:
   * Goal 1. Player.gain(LCard;)Z: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 4. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 5. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 6. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - false
   * Goal 7. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 8. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 9. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 10. Branch Player.gain(LCard;)Z: root-Branch in context: 
   * Goal 11. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 12. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 13. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 14. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - false in context: 
   * Goal 15. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 16. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 17. buyCard(LGameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 31. Player.buyCard(LGameState;)V: Line 154
   * Goal 32. Player.buyCard(LGameState;)V: Line 155
   * Goal 33. Player.buyCard(LGameState;)V: Line 159
   * Goal 34. Player.buyCard(LGameState;)V: Line 160
   * Goal 35. Player.buyCard(LGameState;)V: Line 161
   * Goal 36. Player.endTurn()V: Line 282
   * Goal 37. Player.endTurn()V: Line 283
   * Goal 38. Player.endTurn()V: Line 284
   * Goal 39. Player.endTurn()V: Line 285
   * Goal 40. Player.endTurn()V: Line 288
   * Goal 41. Player.endTurn()V: Line 291
   * Goal 42. Player.endTurn()V: Line 292
   * Goal 43. Player.endTurn()V: Line 293
   * Goal 44. Player.gain(LCard;)Z: Line 67
   * Goal 45. Player.gain(LCard;)Z: Line 68
   * Goal 46. Player.gain(LCard;)Z: Line 69
   * Goal 47. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 48. [METHOD] Player.buyCard(LGameState;)V
   * Goal 49. [METHOD] Player.endTurn()V
   * Goal 50. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 51. [METHODNOEX] Player.endTurn()V
   * Goal 52. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 54. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 44: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> playedCards
   * Goal 56. Weak Mutation 45: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> hand
   * Goal 57. Weak Mutation 46: Player.gain(LCard;)Z:68 - ReplaceConstant - Player:  -> 
   * Goal 58. Weak Mutation 47: Player.gain(LCard;)Z:68 - ReplaceConstant -  gains  -> 
   * Goal 59. Weak Mutation 48: Player.gain(LCard;)Z:69 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 64. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 66. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 67. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 68. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 70. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 71. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 72. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 74. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 75. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 79. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 80. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 81. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 82. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 84. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 85. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 87. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 88. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 89. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DFm d%[");
      player0.endTurn();
      player0.coins = 1;
      // Undeclared exception!
      try { 
        player0.buyCard(gameState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  //Test case number: 24
  /*
   * 66 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 3. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - true
   * Goal 4. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 5. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 6. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 7. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 8. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - true in context: 
   * Goal 9. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 10. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 24. Player.buyCard(LGameState;)V: Line 154
   * Goal 25. Player.buyCard(LGameState;)V: Line 280
   * Goal 26. Player.endTurn()V: Line 282
   * Goal 27. Player.endTurn()V: Line 283
   * Goal 28. Player.endTurn()V: Line 284
   * Goal 29. Player.endTurn()V: Line 285
   * Goal 30. Player.endTurn()V: Line 288
   * Goal 31. Player.endTurn()V: Line 291
   * Goal 32. Player.endTurn()V: Line 292
   * Goal 33. Player.endTurn()V: Line 293
   * Goal 34. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 35. [METHOD] Player.buyCard(LGameState;)V
   * Goal 36. [METHOD] Player.endTurn()V
   * Goal 37. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 38. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 39. [METHODNOEX] Player.endTurn()V
   * Goal 40. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 42. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 44. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 46. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 47. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 48. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 49. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 50. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 204: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 54. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 58. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 59. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 61. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 62. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 64. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 65. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 66. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@B~IL {");
      player0.endTurn();
      player0.buyCard((GameState) null);
  }

  //Test case number: 25
  /*
   * 33 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - false
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - false in context: Player:playTtreasureCard()V
   * Goal 5. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 18. Player.playTtreasureCard()V: Line 141
   * Goal 19. Player.playTtreasureCard()V: Line 142
   * Goal 20. Player.playTtreasureCard()V: Line 143
   * Goal 21. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 22. [METHOD] Player.playTtreasureCard()V
   * Goal 23. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] Player.playTtreasureCard()V
   * Goal 25. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 27. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 156: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> discard
   * Goal 29. Weak Mutation 157: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> playedCards
   * Goal 30. Weak Mutation 158: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> discard
   * Goal 31. Weak Mutation 159: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> playedCards
   * Goal 32. Weak Mutation 160: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> hand
   * Goal 33. Weak Mutation 161: Player.playTtreasureCard()V:142 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "CDFm &d%[");
      player0.playTtreasureCard();
  }

  //Test case number: 26
  /*
   * 221 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 3. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 5. Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - true
   * Goal 6. Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - true
   * Goal 7. Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - false
   * Goal 8. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true
   * Goal 9. Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false
   * Goal 10. Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false
   * Goal 11. Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true
   * Goal 12. Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true
   * Goal 13. Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true
   * Goal 14. Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - false
   * Goal 15. Player.buyCard(LGameState;)V: I239 Branch 31 IFNE L178 - false
   * Goal 16. Player.buyCard(LGameState;)V: I247 Branch 32 IFEQ L178 - true
   * Goal 17. Player.buyCard(LGameState;)V: I302 Branch 34 IF_ICMPNE L183 - true
   * Goal 18. Player.buyCard(LGameState;)V: I365 Branch 37 IF_ICMPNE L188 - true
   * Goal 19. Player.buyCard(LGameState;)V: I428 Branch 40 IF_ICMPNE L193 - true
   * Goal 20. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 21. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 22. Player.endTurn()V: I48 Branch 86 IFEQ L288 - false
   * Goal 23. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 24. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 25. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 26. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 27. Branch Player.playTtreasureCard()V: I11 Branch 17 IFNE L142 - true in context: Player:playTtreasureCard()V
   * Goal 28. Branch Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - true in context: Player:playTtreasureCard()V
   * Goal 29. Branch Player.playTtreasureCard()V: I28 Branch 18 IFEQ L145 - false in context: Player:playTtreasureCard()V
   * Goal 30. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - false in context: 
   * Goal 31. Branch Player.buyCard(LGameState;)V: I7 Branch 20 IFLE L154 - false in context: 
   * Goal 32. Branch Player.buyCard(LGameState;)V: I4 Branch 19 IFLE L154 - true in context: 
   * Goal 33. Branch Player.buyCard(LGameState;)V: I12 Branch 21 IFNE L155 - true in context: 
   * Goal 34. Branch Player.buyCard(LGameState;)V: I50 Branch 22 IF_ICMPNE L159 - true in context: 
   * Goal 35. Branch Player.buyCard(LGameState;)V: I88 Branch 23 IF_ICMPNE L163 - true in context: 
   * Goal 36. Branch Player.buyCard(LGameState;)V: I228 Branch 30 IF_ICMPNE L176 - false in context: 
   * Goal 37. Branch Player.buyCard(LGameState;)V: I247 Branch 32 IFEQ L178 - true in context: 
   * Goal 38. Branch Player.buyCard(LGameState;)V: I239 Branch 31 IFNE L178 - false in context: 
   * Goal 39. Branch Player.buyCard(LGameState;)V: I302 Branch 34 IF_ICMPNE L183 - true in context: 
   * Goal 40. Branch Player.buyCard(LGameState;)V: I365 Branch 37 IF_ICMPNE L188 - true in context: 
   * Goal 41. Branch Player.buyCard(LGameState;)V: I428 Branch 40 IF_ICMPNE L193 - true in context: 
   * Goal 42. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 43. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - false in context: 
   * Goal 44. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 45. [Output]: Player.drawCard()LCard;:NonNull:Card:getCost()I:Positive
   * Goal 46. [Output]: Player.drawCard()LCard;:NonNull:Card:getScore()I:Zero
   * Goal 47. [Output]: Player.drawCard()LCard;:NonNull:Card:getTreasureValue()I:Positive
   * Goal 48. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 49. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 50. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 51. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 52. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 53. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 54. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 55. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 56. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 57. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 58. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 59. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 60. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 61. Player.buyCard(LGameState;)V: Line 154
   * Goal 62. Player.buyCard(LGameState;)V: Line 155
   * Goal 63. Player.buyCard(LGameState;)V: Line 159
   * Goal 64. Player.buyCard(LGameState;)V: Line 163
   * Goal 65. Player.buyCard(LGameState;)V: Line 176
   * Goal 66. Player.buyCard(LGameState;)V: Line 177
   * Goal 67. Player.buyCard(LGameState;)V: Line 178
   * Goal 68. Player.buyCard(LGameState;)V: Line 183
   * Goal 69. Player.buyCard(LGameState;)V: Line 188
   * Goal 70. Player.buyCard(LGameState;)V: Line 193
   * Goal 71. Player.buyCard(LGameState;)V: Line 199
   * Goal 72. Player.buyCard(LGameState;)V: Line 278
   * Goal 73. Player.buyCard(LGameState;)V: Line 280
   * Goal 74. Player.drawCard()LCard;: Line 32
   * Goal 75. Player.drawCard()LCard;: Line 34
   * Goal 76. Player.drawCard()LCard;: Line 36
   * Goal 77. Player.drawCard()LCard;: Line 37
   * Goal 78. Player.drawCard()LCard;: Line 39
   * Goal 79. Player.drawCard()LCard;: Line 40
   * Goal 80. Player.drawCard()LCard;: Line 43
   * Goal 81. Player.drawCard()LCard;: Line 44
   * Goal 82. Player.drawCard()LCard;: Line 46
   * Goal 83. Player.drawCard()LCard;: Line 47
   * Goal 84. Player.drawCard()LCard;: Line 48
   * Goal 85. Player.endTurn()V: Line 282
   * Goal 86. Player.endTurn()V: Line 283
   * Goal 87. Player.endTurn()V: Line 284
   * Goal 88. Player.endTurn()V: Line 285
   * Goal 89. Player.endTurn()V: Line 288
   * Goal 90. Player.endTurn()V: Line 289
   * Goal 91. Player.endTurn()V: Line 290
   * Goal 92. Player.endTurn()V: Line 291
   * Goal 93. Player.endTurn()V: Line 292
   * Goal 94. Player.endTurn()V: Line 293
   * Goal 95. Player.playTtreasureCard()V: Line 141
   * Goal 96. Player.playTtreasureCard()V: Line 142
   * Goal 97. Player.playTtreasureCard()V: Line 144
   * Goal 98. Player.playTtreasureCard()V: Line 145
   * Goal 99. Player.playTtreasureCard()V: Line 146
   * Goal 100. Player.playTtreasureCard()V: Line 147
   * Goal 101. Player.playTtreasureCard()V: Line 148
   * Goal 102. Player.playTtreasureCard()V: Line 149
   * Goal 103. Player.playTtreasureCard()V: Line 150
   * Goal 104. Player.playTtreasureCard()V: Line 151
   * Goal 105. Player.playTtreasureCard()V: Line 152
   * Goal 106. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 107. [METHOD] Player.buyCard(LGameState;)V
   * Goal 108. [METHOD] Player.drawCard()LCard;
   * Goal 109. [METHOD] Player.endTurn()V
   * Goal 110. [METHOD] Player.playTtreasureCard()V
   * Goal 111. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 112. [METHODNOEX] Player.buyCard(LGameState;)V
   * Goal 113. [METHODNOEX] Player.drawCard()LCard;
   * Goal 114. [METHODNOEX] Player.endTurn()V
   * Goal 115. [METHODNOEX] Player.playTtreasureCard()V
   * Goal 116. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 117. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 118. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 119. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 120. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 121. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 122. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 123. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 124. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 125. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 126. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 127. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 128. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 129. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 130. Weak Mutation 15: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numActions
   * Goal 131. Weak Mutation 17: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numBuys
   * Goal 132. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 133. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 134. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 135. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 136. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 137. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 138. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 139. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 140. Weak Mutation 156: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> discard
   * Goal 141. Weak Mutation 157: Player.playTtreasureCard()V:141 - ReplaceVariable hand -> playedCards
   * Goal 142. Weak Mutation 158: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> discard
   * Goal 143. Weak Mutation 159: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> playedCards
   * Goal 144. Weak Mutation 160: Player.playTtreasureCard()V:142 - ReplaceVariable treasureCards -> hand
   * Goal 145. Weak Mutation 162: Player.playTtreasureCard()V:142 - ReplaceComparisonOperator != -> <
   * Goal 146. Weak Mutation 164: Player.playTtreasureCard()V:144 - ReplaceConstant - Treasure Cards Played:  -> 
   * Goal 147. Weak Mutation 165: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> discard
   * Goal 148. Weak Mutation 166: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> playedCards
   * Goal 149. Weak Mutation 167: Player.playTtreasureCard()V:145 - ReplaceVariable treasureCards -> hand
   * Goal 150. Weak Mutation 168: Player.playTtreasureCard()V:145 - ReplaceComparisonOperator == -> !=
   * Goal 151. Weak Mutation 169: Player.playTtreasureCard()V:146 - ReplaceVariable coins -> numActions
   * Goal 152. Weak Mutation 170: Player.playTtreasureCard()V:146 - ReplaceVariable coins -> numBuys
   * Goal 153. Weak Mutation 171: Player.playTtreasureCard()V:146 - InsertUnaryOp Negation
   * Goal 154. Weak Mutation 172: Player.playTtreasureCard()V:146 - InsertUnaryOp +1
   * Goal 155. Weak Mutation 173: Player.playTtreasureCard()V:146 - InsertUnaryOp -1
   * Goal 156. Weak Mutation 174: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> %
   * Goal 157. Weak Mutation 175: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> -
   * Goal 158. Weak Mutation 176: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> *
   * Goal 159. Weak Mutation 177: Player.playTtreasureCard()V:146 - ReplaceArithmeticOperator + -> /
   * Goal 160. Weak Mutation 178: Player.playTtreasureCard()V:148 - ReplaceVariable playedCards -> discard
   * Goal 161. Weak Mutation 179: Player.playTtreasureCard()V:148 - ReplaceVariable playedCards -> hand
   * Goal 162. Weak Mutation 180: Player.playTtreasureCard()V:149 - ReplaceVariable hand -> discard
   * Goal 163. Weak Mutation 181: Player.playTtreasureCard()V:149 - ReplaceVariable hand -> playedCards
   * Goal 164. Weak Mutation 182: Player.playTtreasureCard()V:151 - ReplaceConstant - 's current coins:  -> 
   * Goal 165. Weak Mutation 183: Player.playTtreasureCard()V:151 - ReplaceVariable coins -> numActions
   * Goal 166. Weak Mutation 184: Player.playTtreasureCard()V:151 - ReplaceVariable coins -> numBuys
   * Goal 167. Weak Mutation 185: Player.playTtreasureCard()V:151 - InsertUnaryOp Negation
   * Goal 168. Weak Mutation 186: Player.playTtreasureCard()V:151 - InsertUnaryOp +1
   * Goal 169. Weak Mutation 187: Player.playTtreasureCard()V:151 - InsertUnaryOp -1
   * Goal 170. Weak Mutation 188: Player.playTtreasureCard()V:151 - ReplaceConstant - 
 -> 
   * Goal 171. Weak Mutation 189: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> coins
   * Goal 172. Weak Mutation 190: Player.buyCard(LGameState;)V:154 - ReplaceVariable numBuys -> numActions
   * Goal 173. Weak Mutation 191: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 174. Weak Mutation 192: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 175. Weak Mutation 193: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 176. Weak Mutation 194: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 177. Weak Mutation 196: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> <
   * Goal 178. Weak Mutation 197: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numActions
   * Goal 179. Weak Mutation 198: Player.buyCard(LGameState;)V:154 - ReplaceVariable coins -> numBuys
   * Goal 180. Weak Mutation 199: Player.buyCard(LGameState;)V:154 - InsertUnaryOp Negation
   * Goal 181. Weak Mutation 200: Player.buyCard(LGameState;)V:154 - InsertUnaryOp +1
   * Goal 182. Weak Mutation 201: Player.buyCard(LGameState;)V:154 - InsertUnaryOp -1
   * Goal 183. Weak Mutation 202: Player.buyCard(LGameState;)V:154 - ReplaceComparisonOperator <= -> -1
   * Goal 184. Weak Mutation 205: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numActions
   * Goal 185. Weak Mutation 206: Player.buyCard(LGameState;)V:155 - ReplaceVariable coins -> numBuys
   * Goal 186. Weak Mutation 207: Player.buyCard(LGameState;)V:155 - InsertUnaryOp Negation
   * Goal 187. Weak Mutation 208: Player.buyCard(LGameState;)V:155 - InsertUnaryOp +1
   * Goal 188. Weak Mutation 209: Player.buyCard(LGameState;)V:155 - InsertUnaryOp -1
   * Goal 189. Weak Mutation 211: Player.buyCard(LGameState;)V:155 - ReplaceComparisonOperator != -> <
   * Goal 190. Weak Mutation 218: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numActions
   * Goal 191. Weak Mutation 219: Player.buyCard(LGameState;)V:159 - ReplaceVariable coins -> numBuys
   * Goal 192. Weak Mutation 220: Player.buyCard(LGameState;)V:159 - InsertUnaryOp Negation
   * Goal 193. Weak Mutation 221: Player.buyCard(LGameState;)V:159 - InsertUnaryOp +1
   * Goal 194. Weak Mutation 222: Player.buyCard(LGameState;)V:159 - InsertUnaryOp -1
   * Goal 195. Weak Mutation 223: Player.buyCard(LGameState;)V:159 - ReplaceConstant - 1 -> 0
   * Goal 196. Weak Mutation 224: Player.buyCard(LGameState;)V:159 - ReplaceComparisonOperator != -> ==
   * Goal 197. Weak Mutation 230: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numActions
   * Goal 198. Weak Mutation 231: Player.buyCard(LGameState;)V:163 - ReplaceVariable coins -> numBuys
   * Goal 199. Weak Mutation 232: Player.buyCard(LGameState;)V:163 - InsertUnaryOp Negation
   * Goal 200. Weak Mutation 233: Player.buyCard(LGameState;)V:163 - InsertUnaryOp +1
   * Goal 201. Weak Mutation 234: Player.buyCard(LGameState;)V:163 - InsertUnaryOp -1
   * Goal 202. Weak Mutation 235: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 0
   * Goal 203. Weak Mutation 236: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 1
   * Goal 204. Weak Mutation 237: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> -1
   * Goal 205. Weak Mutation 238: Player.buyCard(LGameState;)V:163 - ReplaceConstant - 2 -> 3
   * Goal 206. Weak Mutation 240: Player.buyCard(LGameState;)V:163 - ReplaceComparisonOperator != -> <
   * Goal 207. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 208. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 209. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 210. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 211. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 212. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 213. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 214. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 215. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 216. Weak Mutation 267: Player.endTurn()V:289 - ReplaceVariable discard -> playedCards
   * Goal 217. Weak Mutation 268: Player.endTurn()V:289 - ReplaceVariable discard -> hand
   * Goal 218. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 219. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 220. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 221. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.hand = list0;
      player0.endTurn();
      player0.drawCard();
      player0.playTtreasureCard();
      player0.buyCard(gameState0);
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
  }

  //Test case number: 27
  /*
   * 179 covered goals:
   * Goal 1. Player.gain(LCard;)Z: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 5. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 6. Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true
   * Goal 7. Player.scoreFor()I: I21 Branch 9 IFEQ L110 - false
   * Goal 8. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true
   * Goal 9. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false
   * Goal 10. Player.scoreFor()I: I52 Branch 11 IFNULL L116 - true
   * Goal 11. Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true
   * Goal 12. Player.scoreFor()I: I79 Branch 13 IFEQ L124 - false
   * Goal 13. Player.scoreFor()I: I90 Branch 14 IFNULL L125 - false
   * Goal 14. Player.scoreFor()I: I98 Branch 15 IF_ACMPNE L126 - true
   * Goal 15. Player.scoreFor()I: I111 Branch 16 IFLE L134 - true
   * Goal 16. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 17. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 18. Player.endTurn()V: I48 Branch 86 IFEQ L288 - false
   * Goal 19. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 20. Branch Player.gain(LCard;)Z: root-Branch in context: 
   * Goal 21. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 22. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 23. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 24. Branch Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true in context: 
   * Goal 25. Branch Player.scoreFor()I: I21 Branch 9 IFEQ L110 - false in context: 
   * Goal 26. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false in context: 
   * Goal 27. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true in context: 
   * Goal 28. Branch Player.scoreFor()I: I52 Branch 11 IFNULL L116 - true in context: 
   * Goal 29. Branch Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true in context: 
   * Goal 30. Branch Player.scoreFor()I: I79 Branch 13 IFEQ L124 - false in context: 
   * Goal 31. Branch Player.scoreFor()I: I90 Branch 14 IFNULL L125 - false in context: 
   * Goal 32. Branch Player.scoreFor()I: I98 Branch 15 IF_ACMPNE L126 - true in context: 
   * Goal 33. Branch Player.scoreFor()I: I111 Branch 16 IFLE L134 - true in context: 
   * Goal 34. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 35. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - false in context: 
   * Goal 36. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 37. [Output]: Player.drawCard()LCard;:NonNull:Card:getCost()I:Positive
   * Goal 38. [Output]: Player.drawCard()LCard;:NonNull:Card:getScore()I:Zero
   * Goal 39. [Output]: Player.drawCard()LCard;:NonNull:Card:getTreasureValue()I:Positive
   * Goal 40. [Output]: Player.gain(LCard;)Z:True
   * Goal 41. [Output]: Player.scoreFor()I:Zero
   * Goal 42. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 43. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 44. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 45. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 46. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 47. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 48. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 49. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 50. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 51. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 52. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 53. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 54. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 55. Player.drawCard()LCard;: Line 32
   * Goal 56. Player.drawCard()LCard;: Line 34
   * Goal 57. Player.drawCard()LCard;: Line 36
   * Goal 58. Player.drawCard()LCard;: Line 37
   * Goal 59. Player.drawCard()LCard;: Line 39
   * Goal 60. Player.drawCard()LCard;: Line 40
   * Goal 61. Player.drawCard()LCard;: Line 43
   * Goal 62. Player.drawCard()LCard;: Line 44
   * Goal 63. Player.drawCard()LCard;: Line 46
   * Goal 64. Player.drawCard()LCard;: Line 47
   * Goal 65. Player.drawCard()LCard;: Line 48
   * Goal 66. Player.endTurn()V: Line 282
   * Goal 67. Player.endTurn()V: Line 283
   * Goal 68. Player.endTurn()V: Line 284
   * Goal 69. Player.endTurn()V: Line 285
   * Goal 70. Player.endTurn()V: Line 288
   * Goal 71. Player.endTurn()V: Line 289
   * Goal 72. Player.endTurn()V: Line 290
   * Goal 73. Player.endTurn()V: Line 291
   * Goal 74. Player.endTurn()V: Line 292
   * Goal 75. Player.endTurn()V: Line 293
   * Goal 76. Player.gain(LCard;)Z: Line 67
   * Goal 77. Player.gain(LCard;)Z: Line 68
   * Goal 78. Player.gain(LCard;)Z: Line 69
   * Goal 79. Player.scoreFor()I: Line 106
   * Goal 80. Player.scoreFor()I: Line 107
   * Goal 81. Player.scoreFor()I: Line 108
   * Goal 82. Player.scoreFor()I: Line 110
   * Goal 83. Player.scoreFor()I: Line 112
   * Goal 84. Player.scoreFor()I: Line 113
   * Goal 85. Player.scoreFor()I: Line 115
   * Goal 86. Player.scoreFor()I: Line 116
   * Goal 87. Player.scoreFor()I: Line 121
   * Goal 88. Player.scoreFor()I: Line 122
   * Goal 89. Player.scoreFor()I: Line 124
   * Goal 90. Player.scoreFor()I: Line 125
   * Goal 91. Player.scoreFor()I: Line 126
   * Goal 92. Player.scoreFor()I: Line 131
   * Goal 93. Player.scoreFor()I: Line 132
   * Goal 94. Player.scoreFor()I: Line 134
   * Goal 95. Player.scoreFor()I: Line 137
   * Goal 96. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 97. [METHOD] Player.drawCard()LCard;
   * Goal 98. [METHOD] Player.endTurn()V
   * Goal 99. [METHOD] Player.gain(LCard;)Z
   * Goal 100. [METHOD] Player.scoreFor()I
   * Goal 101. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 102. [METHODNOEX] Player.drawCard()LCard;
   * Goal 103. [METHODNOEX] Player.endTurn()V
   * Goal 104. [METHODNOEX] Player.gain(LCard;)Z
   * Goal 105. [METHODNOEX] Player.scoreFor()I
   * Goal 106. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 108. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 110. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 111. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 112. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 113. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 114. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 115. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 116. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 117. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 118. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 119. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 120. Weak Mutation 15: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numActions
   * Goal 121. Weak Mutation 17: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numBuys
   * Goal 122. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 123. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 124. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 125. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 126. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 127. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 128. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 129. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 130. Weak Mutation 44: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> playedCards
   * Goal 131. Weak Mutation 45: Player.gain(LCard;)Z:67 - ReplaceVariable discard -> hand
   * Goal 132. Weak Mutation 46: Player.gain(LCard;)Z:68 - ReplaceConstant - Player:  -> 
   * Goal 133. Weak Mutation 47: Player.gain(LCard;)Z:68 - ReplaceConstant -  gains  -> 
   * Goal 134. Weak Mutation 48: Player.gain(LCard;)Z:69 - ReplaceConstant - 1 -> 0
   * Goal 135. Weak Mutation 96: Player.scoreFor()I:106 - ReplaceConstant - 0 -> 1
   * Goal 136. Weak Mutation 97: Player.scoreFor()I:107 - ReplaceConstant - 0 -> 1
   * Goal 137. Weak Mutation 98: Player.scoreFor()I:108 - ReplaceConstant - 0 -> 1
   * Goal 138. Weak Mutation 99: Player.scoreFor()I:110 - ReplaceVariable hand -> discard
   * Goal 139. Weak Mutation 100: Player.scoreFor()I:110 - ReplaceVariable hand -> playedCards
   * Goal 140. Weak Mutation 101: Player.scoreFor()I:110 - ReplaceComparisonOperator == -> !=
   * Goal 141. Weak Mutation 102: Player.scoreFor()I:112 - ReplaceVariable numCards -> gardenCards
   * Goal 142. Weak Mutation 103: Player.scoreFor()I:112 - ReplaceVariable numCards -> score
   * Goal 143. Weak Mutation 104: Player.scoreFor()I:115 - ReplaceVariable discard -> playedCards
   * Goal 144. Weak Mutation 105: Player.scoreFor()I:115 - ReplaceVariable discard -> hand
   * Goal 145. Weak Mutation 106: Player.scoreFor()I:115 - ReplaceComparisonOperator == -> !=
   * Goal 146. Weak Mutation 107: Player.scoreFor()I:116 - ReplaceVariable discard -> playedCards
   * Goal 147. Weak Mutation 108: Player.scoreFor()I:116 - ReplaceVariable discard -> hand
   * Goal 148. Weak Mutation 109: Player.scoreFor()I:116 - ReplaceComparisonOperator = null -> != null
   * Goal 149. Weak Mutation 115: Player.scoreFor()I:121 - ReplaceVariable numCards -> gardenCards
   * Goal 150. Weak Mutation 116: Player.scoreFor()I:121 - ReplaceVariable numCards -> score
   * Goal 151. Weak Mutation 117: Player.scoreFor()I:124 - ReplaceComparisonOperator == -> !=
   * Goal 152. Weak Mutation 118: Player.scoreFor()I:125 - ReplaceComparisonOperator = null -> != null
   * Goal 153. Weak Mutation 119: Player.scoreFor()I:126 - ReplaceVariable discard -> playedCards
   * Goal 154. Weak Mutation 120: Player.scoreFor()I:126 - ReplaceVariable discard -> hand
   * Goal 155. Weak Mutation 121: Player.scoreFor()I:126 - ReplaceComparisonOperator != -> ==
   * Goal 156. Weak Mutation 124: Player.scoreFor()I:131 - ReplaceVariable numCards -> gardenCards
   * Goal 157. Weak Mutation 125: Player.scoreFor()I:131 - ReplaceVariable numCards -> score
   * Goal 158. Weak Mutation 127: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numActions
   * Goal 159. Weak Mutation 128: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numCards
   * Goal 160. Weak Mutation 130: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numBuys
   * Goal 161. Weak Mutation 131: Player.scoreFor()I:134 - InsertUnaryOp Negation of gardenCards
   * Goal 162. Weak Mutation 132: Player.scoreFor()I:134 - InsertUnaryOp IINC 1 gardenCards
   * Goal 163. Weak Mutation 133: Player.scoreFor()I:134 - InsertUnaryOp IINC -1 gardenCards
   * Goal 164. Weak Mutation 136: Player.scoreFor()I:134 - ReplaceComparisonOperator <= -> <
   * Goal 165. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 166. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 167. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 168. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 169. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 170. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 171. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 172. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 173. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 174. Weak Mutation 267: Player.endTurn()V:289 - ReplaceVariable discard -> playedCards
   * Goal 175. Weak Mutation 268: Player.endTurn()V:289 - ReplaceVariable discard -> hand
   * Goal 176. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 177. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 178. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 179. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.hand = list0;
      player0.endTurn();
      Card card0 = player0.drawCard();
      player0.gain(card0);
      int int0 = player0.scoreFor();
      assertEquals(1, list0.size());
      assertEquals(0, int0);
  }

  //Test case number: 28
  /*
   * 129 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true
   * Goal 3. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true
   * Goal 4. Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false
   * Goal 5. Player.scoreFor()I: I52 Branch 11 IFNULL L116 - false
   * Goal 6. Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - true
   * Goal 7. Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - false
   * Goal 8. Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true
   * Goal 9. Player.scoreFor()I: I111 Branch 16 IFLE L134 - false
   * Goal 10. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 11. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 12. Player.endTurn()V: I48 Branch 86 IFEQ L288 - false
   * Goal 13. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 14. Branch Player.scoreFor()I: I21 Branch 9 IFEQ L110 - true in context: 
   * Goal 15. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - false in context: 
   * Goal 16. Branch Player.scoreFor()I: I41 Branch 10 IFEQ L115 - true in context: 
   * Goal 17. Branch Player.scoreFor()I: I52 Branch 11 IFNULL L116 - false in context: 
   * Goal 18. Branch Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - true in context: 
   * Goal 19. Branch Player.scoreFor()I: I60 Branch 12 IF_ACMPNE L117 - false in context: 
   * Goal 20. Branch Player.scoreFor()I: I79 Branch 13 IFEQ L124 - true in context: 
   * Goal 21. Branch Player.scoreFor()I: I111 Branch 16 IFLE L134 - false in context: 
   * Goal 22. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 23. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - false in context: 
   * Goal 24. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 25. [Output]: Player.scoreFor()I:Positive
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 34. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 35. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 36. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 37. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 38. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 39. Player.endTurn()V: Line 282
   * Goal 40. Player.endTurn()V: Line 283
   * Goal 41. Player.endTurn()V: Line 284
   * Goal 42. Player.endTurn()V: Line 285
   * Goal 43. Player.endTurn()V: Line 288
   * Goal 44. Player.endTurn()V: Line 289
   * Goal 45. Player.endTurn()V: Line 290
   * Goal 46. Player.endTurn()V: Line 291
   * Goal 47. Player.endTurn()V: Line 292
   * Goal 48. Player.endTurn()V: Line 293
   * Goal 49. Player.scoreFor()I: Line 106
   * Goal 50. Player.scoreFor()I: Line 107
   * Goal 51. Player.scoreFor()I: Line 108
   * Goal 52. Player.scoreFor()I: Line 110
   * Goal 53. Player.scoreFor()I: Line 115
   * Goal 54. Player.scoreFor()I: Line 116
   * Goal 55. Player.scoreFor()I: Line 117
   * Goal 56. Player.scoreFor()I: Line 118
   * Goal 57. Player.scoreFor()I: Line 121
   * Goal 58. Player.scoreFor()I: Line 122
   * Goal 59. Player.scoreFor()I: Line 124
   * Goal 60. Player.scoreFor()I: Line 134
   * Goal 61. Player.scoreFor()I: Line 135
   * Goal 62. Player.scoreFor()I: Line 137
   * Goal 63. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 64. [METHOD] Player.endTurn()V
   * Goal 65. [METHOD] Player.scoreFor()I
   * Goal 66. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 67. [METHODNOEX] Player.endTurn()V
   * Goal 68. [METHODNOEX] Player.scoreFor()I
   * Goal 69. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 71. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 96: Player.scoreFor()I:106 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 97: Player.scoreFor()I:107 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 98: Player.scoreFor()I:108 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 99: Player.scoreFor()I:110 - ReplaceVariable hand -> discard
   * Goal 76. Weak Mutation 100: Player.scoreFor()I:110 - ReplaceVariable hand -> playedCards
   * Goal 77. Weak Mutation 101: Player.scoreFor()I:110 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 104: Player.scoreFor()I:115 - ReplaceVariable discard -> playedCards
   * Goal 79. Weak Mutation 105: Player.scoreFor()I:115 - ReplaceVariable discard -> hand
   * Goal 80. Weak Mutation 106: Player.scoreFor()I:115 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 107: Player.scoreFor()I:116 - ReplaceVariable discard -> playedCards
   * Goal 82. Weak Mutation 108: Player.scoreFor()I:116 - ReplaceVariable discard -> hand
   * Goal 83. Weak Mutation 109: Player.scoreFor()I:116 - ReplaceComparisonOperator = null -> != null
   * Goal 84. Weak Mutation 110: Player.scoreFor()I:117 - ReplaceVariable discard -> playedCards
   * Goal 85. Weak Mutation 111: Player.scoreFor()I:117 - ReplaceVariable discard -> hand
   * Goal 86. Weak Mutation 112: Player.scoreFor()I:117 - ReplaceComparisonOperator != -> ==
   * Goal 87. Weak Mutation 113: Player.scoreFor()I:118 - ReplaceVariable gardenCards -> score
   * Goal 88. Weak Mutation 114: Player.scoreFor()I:118 - ReplaceVariable gardenCards -> numCards
   * Goal 89. Weak Mutation 115: Player.scoreFor()I:121 - ReplaceVariable numCards -> gardenCards
   * Goal 90. Weak Mutation 116: Player.scoreFor()I:121 - ReplaceVariable numCards -> score
   * Goal 91. Weak Mutation 117: Player.scoreFor()I:124 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 126: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> score
   * Goal 93. Weak Mutation 128: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> numCards
   * Goal 94. Weak Mutation 129: Player.scoreFor()I:134 - ReplaceVariable gardenCards -> coins
   * Goal 95. Weak Mutation 131: Player.scoreFor()I:134 - InsertUnaryOp Negation of gardenCards
   * Goal 96. Weak Mutation 132: Player.scoreFor()I:134 - InsertUnaryOp IINC 1 gardenCards
   * Goal 97. Weak Mutation 133: Player.scoreFor()I:134 - InsertUnaryOp IINC -1 gardenCards
   * Goal 98. Weak Mutation 134: Player.scoreFor()I:134 - ReplaceComparisonOperator <= -> -1
   * Goal 99. Weak Mutation 137: Player.scoreFor()I:135 - ReplaceVariable score -> gardenCards
   * Goal 100. Weak Mutation 138: Player.scoreFor()I:135 - ReplaceVariable score -> numActions
   * Goal 101. Weak Mutation 139: Player.scoreFor()I:135 - ReplaceVariable score -> numCards
   * Goal 102. Weak Mutation 141: Player.scoreFor()I:135 - ReplaceVariable score -> numBuys
   * Goal 103. Weak Mutation 142: Player.scoreFor()I:135 - InsertUnaryOp Negation of score
   * Goal 104. Weak Mutation 143: Player.scoreFor()I:135 - InsertUnaryOp IINC 1 score
   * Goal 105. Weak Mutation 144: Player.scoreFor()I:135 - InsertUnaryOp IINC -1 score
   * Goal 106. Weak Mutation 145: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> score
   * Goal 107. Weak Mutation 147: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> numCards
   * Goal 108. Weak Mutation 148: Player.scoreFor()I:135 - ReplaceVariable gardenCards -> coins
   * Goal 109. Weak Mutation 150: Player.scoreFor()I:135 - InsertUnaryOp Negation of gardenCards
   * Goal 110. Weak Mutation 151: Player.scoreFor()I:135 - ReplaceVariable numCards -> gardenCards
   * Goal 111. Weak Mutation 152: Player.scoreFor()I:135 - ReplaceVariable numCards -> score
   * Goal 112. Weak Mutation 153: Player.scoreFor()I:135 - ReplaceVariable numCards -> numActions
   * Goal 113. Weak Mutation 154: Player.scoreFor()I:135 - ReplaceVariable numCards -> coins
   * Goal 114. Weak Mutation 155: Player.scoreFor()I:135 - ReplaceVariable numCards -> numBuys
   * Goal 115. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 116. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 117. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 118. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 119. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 120. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 122. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 123. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 124. Weak Mutation 267: Player.endTurn()V:289 - ReplaceVariable discard -> playedCards
   * Goal 125. Weak Mutation 268: Player.endTurn()V:289 - ReplaceVariable discard -> hand
   * Goal 126. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 127. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 128. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 129. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.hand = list0;
      player0.endTurn();
      int int0 = player0.scoreFor();
      assertTrue(list0.isEmpty());
      assertEquals(2, int0);
  }

  //Test case number: 29
  /*
   * 76 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false
   * Goal 3. Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - true
   * Goal 4. Player.playKingdomCard()V: I48 Branch 7 IFNE L88 - false
   * Goal 5. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 6. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 7. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 8. Branch Player.playKingdomCard()V: I4 Branch 4 IFLE L78 - false in context: Player:playKingdomCard()V
   * Goal 9. Branch Player.playKingdomCard()V: I21 Branch 5 IFEQ L81 - true in context: Player:playKingdomCard()V
   * Goal 10. Branch Player.playKingdomCard()V: I48 Branch 7 IFNE L88 - false in context: Player:playKingdomCard()V
   * Goal 11. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 12. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 26. Player.endTurn()V: Line 282
   * Goal 27. Player.endTurn()V: Line 283
   * Goal 28. Player.endTurn()V: Line 284
   * Goal 29. Player.endTurn()V: Line 285
   * Goal 30. Player.endTurn()V: Line 288
   * Goal 31. Player.endTurn()V: Line 291
   * Goal 32. Player.endTurn()V: Line 292
   * Goal 33. Player.endTurn()V: Line 293
   * Goal 34. Player.playKingdomCard()V: Line 78
   * Goal 35. Player.playKingdomCard()V: Line 79
   * Goal 36. Player.playKingdomCard()V: Line 80
   * Goal 37. Player.playKingdomCard()V: Line 81
   * Goal 38. Player.playKingdomCard()V: Line 88
   * Goal 39. Player.playKingdomCard()V: Line 89
   * Goal 40. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 41. [METHOD] Player.endTurn()V
   * Goal 42. [METHOD] Player.playKingdomCard()V
   * Goal 43. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 44. [METHODNOEX] Player.endTurn()V
   * Goal 45. [METHODNOEX] Player.playKingdomCard()V
   * Goal 46. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 48. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 55: Player.playKingdomCard()V:78 - ReplaceVariable numActions -> coins
   * Goal 50. Weak Mutation 57: Player.playKingdomCard()V:78 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 58: Player.playKingdomCard()V:78 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 59: Player.playKingdomCard()V:78 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 60: Player.playKingdomCard()V:78 - ReplaceComparisonOperator <= -> -1
   * Goal 54. Weak Mutation 63: Player.playKingdomCard()V:79 - ReplaceVariable hand -> discard
   * Goal 55. Weak Mutation 64: Player.playKingdomCard()V:79 - ReplaceVariable hand -> playedCards
   * Goal 56. Weak Mutation 65: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> discard
   * Goal 57. Weak Mutation 66: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> playedCards
   * Goal 58. Weak Mutation 67: Player.playKingdomCard()V:80 - ReplaceVariable actionCards -> hand
   * Goal 59. Weak Mutation 68: Player.playKingdomCard()V:81 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 70: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> discard
   * Goal 61. Weak Mutation 71: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> playedCards
   * Goal 62. Weak Mutation 72: Player.playKingdomCard()V:88 - ReplaceVariable actionCards -> hand
   * Goal 63. Weak Mutation 73: Player.playKingdomCard()V:88 - ReplaceComparisonOperator != -> -1
   * Goal 64. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 68. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 69. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 71. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 72. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 74. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 75. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 76. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.endTurn();
      player0.playKingdomCard();
  }

  //Test case number: 30
  /*
   * 89 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - true
   * Goal 3. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 5. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 6. Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - true
   * Goal 7. Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - false
   * Goal 8. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 9. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 10. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - true in context: 
   * Goal 11. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 12. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 13. Branch Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - false in context: 
   * Goal 14. Branch Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L60 - true in context: 
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 28. Player.drawCard()LCard;: Line 32
   * Goal 29. Player.drawCard()LCard;: Line 34
   * Goal 30. Player.drawCard()LCard;: Line 36
   * Goal 31. Player.drawCard()LCard;: Line 37
   * Goal 32. Player.drawCard()LCard;: Line 39
   * Goal 33. Player.drawCard()LCard;: Line 40
   * Goal 34. Player.drawCard()LCard;: Line 43
   * Goal 35. Player.drawCard()LCard;: Line 44
   * Goal 36. Player.drawCard()LCard;: Line 46
   * Goal 37. Player.drawCard()LCard;: Line 47
   * Goal 38. Player.drawCard()LCard;: Line 48
   * Goal 39. Player.initializePlayerTurn()V: Line 55
   * Goal 40. Player.initializePlayerTurn()V: Line 56
   * Goal 41. Player.initializePlayerTurn()V: Line 57
   * Goal 42. Player.initializePlayerTurn()V: Line 60
   * Goal 43. Player.initializePlayerTurn()V: Line 61
   * Goal 44. Player.initializePlayerTurn()V: Line 63
   * Goal 45. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 46. [METHOD] Player.initializePlayerTurn()V
   * Goal 47. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 48. [METHODNOEX] Player.initializePlayerTurn()V
   * Goal 49. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 51. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 54. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 55. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 56. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 57. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 59. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 60. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 61. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 62. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 63. Weak Mutation 15: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numActions
   * Goal 64. Weak Mutation 17: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numBuys
   * Goal 65. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 66. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 67. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 68. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 69. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 70. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 71. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 72. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 73. Weak Mutation 26: Player.initializePlayerTurn()V:55 - ReplaceConstant - 1 -> 0
   * Goal 74. Weak Mutation 27: Player.initializePlayerTurn()V:56 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 28: Player.initializePlayerTurn()V:57 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 29: Player.initializePlayerTurn()V:60 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 30: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> numActions
   * Goal 78. Weak Mutation 31: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> coins
   * Goal 79. Weak Mutation 32: Player.initializePlayerTurn()V:60 - ReplaceVariable i -> numBuys
   * Goal 80. Weak Mutation 33: Player.initializePlayerTurn()V:60 - InsertUnaryOp Negation of i
   * Goal 81. Weak Mutation 34: Player.initializePlayerTurn()V:60 - InsertUnaryOp IINC 1 i
   * Goal 82. Weak Mutation 35: Player.initializePlayerTurn()V:60 - InsertUnaryOp IINC -1 i
   * Goal 83. Weak Mutation 36: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 0
   * Goal 84. Weak Mutation 37: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 1
   * Goal 85. Weak Mutation 38: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> -1
   * Goal 86. Weak Mutation 39: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 4
   * Goal 87. Weak Mutation 40: Player.initializePlayerTurn()V:60 - ReplaceConstant - 5 -> 6
   * Goal 88. Weak Mutation 41: Player.initializePlayerTurn()V:60 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 42: Player.initializePlayerTurn()V:60 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Treasure Cards Played: ");
      player0.discard = list0;
      player0.initializePlayerTurn();
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
  }

  //Test case number: 31
  /*
   * 99 covered goals:
   * Goal 1. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - true
   * Goal 3. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 5. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 6. Player.endTurn()V: I24 Branch 85 IFEQ L285 - true
   * Goal 7. Player.endTurn()V: I48 Branch 86 IFEQ L288 - true
   * Goal 8. Player.endTurn()V: I48 Branch 86 IFEQ L288 - false
   * Goal 9. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 10. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 11. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - true in context: 
   * Goal 12. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 13. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 14. Branch Player.endTurn()V: I24 Branch 85 IFEQ L285 - true in context: 
   * Goal 15. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - false in context: 
   * Goal 16. Branch Player.endTurn()V: I48 Branch 86 IFEQ L288 - true in context: 
   * Goal 17. [Output]: Player.drawCard()LCard;:NonNull:Card:getCost()I:Positive
   * Goal 18. [Output]: Player.drawCard()LCard;:NonNull:Card:getCost()I:Zero
   * Goal 19. [Output]: Player.drawCard()LCard;:NonNull:Card:getScore()I:Zero
   * Goal 20. [Output]: Player.drawCard()LCard;:NonNull:Card:getTreasureValue()I:Positive
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 25. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 26. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 27. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 28. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 29. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 30. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 31. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 32. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 33. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 34. Player.drawCard()LCard;: Line 32
   * Goal 35. Player.drawCard()LCard;: Line 34
   * Goal 36. Player.drawCard()LCard;: Line 36
   * Goal 37. Player.drawCard()LCard;: Line 37
   * Goal 38. Player.drawCard()LCard;: Line 39
   * Goal 39. Player.drawCard()LCard;: Line 40
   * Goal 40. Player.drawCard()LCard;: Line 43
   * Goal 41. Player.drawCard()LCard;: Line 44
   * Goal 42. Player.drawCard()LCard;: Line 46
   * Goal 43. Player.drawCard()LCard;: Line 47
   * Goal 44. Player.drawCard()LCard;: Line 48
   * Goal 45. Player.endTurn()V: Line 282
   * Goal 46. Player.endTurn()V: Line 283
   * Goal 47. Player.endTurn()V: Line 284
   * Goal 48. Player.endTurn()V: Line 285
   * Goal 49. Player.endTurn()V: Line 288
   * Goal 50. Player.endTurn()V: Line 289
   * Goal 51. Player.endTurn()V: Line 290
   * Goal 52. Player.endTurn()V: Line 291
   * Goal 53. Player.endTurn()V: Line 292
   * Goal 54. Player.endTurn()V: Line 293
   * Goal 55. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 56. [METHOD] Player.drawCard()LCard;
   * Goal 57. [METHOD] Player.endTurn()V
   * Goal 58. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 59. [METHODNOEX] Player.drawCard()LCard;
   * Goal 60. [METHODNOEX] Player.endTurn()V
   * Goal 61. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 62. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 63. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 66. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 67. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 68. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 69. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 71. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 72. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 73. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 74. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 75. Weak Mutation 15: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numActions
   * Goal 76. Weak Mutation 17: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> numBuys
   * Goal 77. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 78. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 79. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 80. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 81. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 82. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 83. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 84. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 85. Weak Mutation 256: Player.endTurn()V:282 - ReplaceConstant - 0 -> 1
   * Goal 86. Weak Mutation 257: Player.endTurn()V:283 - ReplaceConstant - 1 -> 0
   * Goal 87. Weak Mutation 258: Player.endTurn()V:284 - ReplaceConstant - 1 -> 0
   * Goal 88. Weak Mutation 259: Player.endTurn()V:285 - ReplaceVariable playedCards -> discard
   * Goal 89. Weak Mutation 260: Player.endTurn()V:285 - ReplaceVariable playedCards -> hand
   * Goal 90. Weak Mutation 261: Player.endTurn()V:285 - ReplaceComparisonOperator == -> !=
   * Goal 91. Weak Mutation 264: Player.endTurn()V:288 - ReplaceVariable hand -> discard
   * Goal 92. Weak Mutation 265: Player.endTurn()V:288 - ReplaceVariable hand -> playedCards
   * Goal 93. Weak Mutation 266: Player.endTurn()V:288 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 267: Player.endTurn()V:289 - ReplaceVariable discard -> playedCards
   * Goal 95. Weak Mutation 268: Player.endTurn()V:289 - ReplaceVariable discard -> hand
   * Goal 96. Weak Mutation 269: Player.endTurn()V:291 - ReplaceVariable playedCards -> discard
   * Goal 97. Weak Mutation 270: Player.endTurn()V:291 - ReplaceVariable playedCards -> hand
   * Goal 98. Weak Mutation 271: Player.endTurn()V:292 - ReplaceVariable hand -> discard
   * Goal 99. Weak Mutation 272: Player.endTurn()V:292 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "C!DEFm &d%[");
      player0.hand = list0;
      player0.endTurn();
      player0.drawCard();
      player0.drawCard();
      Card card0 = player0.drawCard();
      assertEquals(3, list0.size());
      assertEquals(0, card0.getScore());
  }

  //Test case number: 32
  /*
   * 33 covered goals:
   * Goal 1. Player.printStateGame()V: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 4. Branch Player.printStateGame()V: root-Branch in context: Player:printStateGame()V
   * Goal 5. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 6. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 7. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 8. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 9. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 10. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 11. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 18. Player.printStateGame()V: Line 297
   * Goal 19. Player.printStateGame()V: Line 298
   * Goal 20. Player.printStateGame()V: Line 299
   * Goal 21. Player.printStateGame()V: Line 300
   * Goal 22. Player.printStateGame()V: Line 301
   * Goal 23. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 24. [METHOD] Player.printStateGame()V
   * Goal 25. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 26. [METHODNOEX] Player.printStateGame()V
   * Goal 27. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 29. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 273: Player.printStateGame()V:297 - ReplaceConstant -  ---  -> 
   * Goal 31. Weak Mutation 274: Player.printStateGame()V:297 - ReplaceConstant -  ---  -> 
   * Goal 32. Weak Mutation 275: Player.printStateGame()V:298 - ReplaceConstant -  --- --------------------------- ---  -> 
   * Goal 33. Weak Mutation 276: Player.printStateGame()V:300 - ReplaceConstant -  --- --------------------------- ---  -> 
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Treasure Cards Played: ");
      player0.printStateGame();
  }

  //Test case number: 33
  /*
   * 74 covered goals:
   * Goal 1. Player.discard(LCard;)V: root-Branch
   * Goal 2. Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false
   * Goal 4. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true
   * Goal 5. Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false
   * Goal 6. Branch Player.<init>(LGameState;Ljava/lang/String;)V: root-Branch in context: Player:<init>(LGameState;Ljava/lang/String;)V
   * Goal 7. Branch Player.discard(LCard;)V: root-Branch in context: Player:discard(LCard;)V
   * Goal 8. Branch Player.drawCard()LCard;: I5 Branch 1 IFEQ L32 - false in context: 
   * Goal 9. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - false in context: 
   * Goal 10. Branch Player.drawCard()LCard;: I26 Branch 2 IFLE L36 - true in context: 
   * Goal 11. [Output]: Player.drawCard()LCard;:Null
   * Goal 12. Player.<init>(LGameState;Ljava/lang/String;)V: Line 5
   * Goal 13. Player.<init>(LGameState;Ljava/lang/String;)V: Line 6
   * Goal 14. Player.<init>(LGameState;Ljava/lang/String;)V: Line 8
   * Goal 15. Player.<init>(LGameState;Ljava/lang/String;)V: Line 10
   * Goal 16. Player.<init>(LGameState;Ljava/lang/String;)V: Line 11
   * Goal 17. Player.<init>(LGameState;Ljava/lang/String;)V: Line 22
   * Goal 18. Player.<init>(LGameState;Ljava/lang/String;)V: Line 23
   * Goal 19. Player.<init>(LGameState;Ljava/lang/String;)V: Line 24
   * Goal 20. Player.<init>(LGameState;Ljava/lang/String;)V: Line 25
   * Goal 21. Player.<init>(LGameState;Ljava/lang/String;)V: Line 26
   * Goal 22. Player.<init>(LGameState;Ljava/lang/String;)V: Line 27
   * Goal 23. Player.<init>(LGameState;Ljava/lang/String;)V: Line 28
   * Goal 24. Player.<init>(LGameState;Ljava/lang/String;)V: Line 29
   * Goal 25. Player.discard(LCard;)V: Line 73
   * Goal 26. Player.discard(LCard;)V: Line 74
   * Goal 27. Player.discard(LCard;)V: Line 75
   * Goal 28. Player.discard(LCard;)V: Line 76
   * Goal 29. Player.drawCard()LCard;: Line 32
   * Goal 30. Player.drawCard()LCard;: Line 34
   * Goal 31. Player.drawCard()LCard;: Line 36
   * Goal 32. Player.drawCard()LCard;: Line 37
   * Goal 33. Player.drawCard()LCard;: Line 39
   * Goal 34. Player.drawCard()LCard;: Line 40
   * Goal 35. Player.drawCard()LCard;: Line 43
   * Goal 36. Player.drawCard()LCard;: Line 44
   * Goal 37. Player.drawCard()LCard;: Line 46
   * Goal 38. Player.drawCard()LCard;: Line 47
   * Goal 39. Player.drawCard()LCard;: Line 48
   * Goal 40. [METHOD] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 41. [METHOD] Player.discard(LCard;)V
   * Goal 42. [METHOD] Player.drawCard()LCard;
   * Goal 43. [METHODNOEX] Player.<init>(LGameState;Ljava/lang/String;)V
   * Goal 44. [METHODNOEX] Player.discard(LCard;)V
   * Goal 45. [METHODNOEX] Player.drawCard()LCard;
   * Goal 46. Weak Mutation 0: Player.<init>(LGameState;Ljava/lang/String;)V:11 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1: Player.<init>(LGameState;Ljava/lang/String;)V:22 - ReplaceVariable player_username -> player_username
   * Goal 48. Weak Mutation 2: Player.<init>(LGameState;Ljava/lang/String;)V:28 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 3: Player.drawCard()LCard;:32 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 4: Player.drawCard()LCard;:34 - ReplaceConstant - Reshuffle the deck of the player  -> 
   * Goal 51. Weak Mutation 5: Player.drawCard()LCard;:34 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 52. Weak Mutation 6: Player.drawCard()LCard;:36 - ReplaceVariable discard -> playedCards
   * Goal 53. Weak Mutation 7: Player.drawCard()LCard;:36 - ReplaceVariable discard -> hand
   * Goal 54. Weak Mutation 8: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 55. Weak Mutation 10: Player.drawCard()LCard;:36 - ReplaceComparisonOperator <= -> <
   * Goal 56. Weak Mutation 11: Player.drawCard()LCard;:37 - ReplaceVariable discard -> playedCards
   * Goal 57. Weak Mutation 12: Player.drawCard()LCard;:37 - ReplaceVariable discard -> hand
   * Goal 58. Weak Mutation 13: Player.drawCard()LCard;:39 - ReplaceVariable discard -> playedCards
   * Goal 59. Weak Mutation 14: Player.drawCard()LCard;:39 - ReplaceVariable discard -> hand
   * Goal 60. Weak Mutation 16: Player.drawCard()LCard;:39 - ReplaceVariable ndx -> coins
   * Goal 61. Weak Mutation 18: Player.drawCard()LCard;:39 - InsertUnaryOp Negation of ndx
   * Goal 62. Weak Mutation 19: Player.drawCard()LCard;:39 - InsertUnaryOp IINC 1 ndx
   * Goal 63. Weak Mutation 20: Player.drawCard()LCard;:39 - InsertUnaryOp IINC -1 ndx
   * Goal 64. Weak Mutation 21: Player.drawCard()LCard;:44 - ReplaceVariable hand -> discard
   * Goal 65. Weak Mutation 22: Player.drawCard()LCard;:44 - ReplaceVariable hand -> playedCards
   * Goal 66. Weak Mutation 23: Player.drawCard()LCard;:46 - ReplaceConstant -  drew  -> 
   * Goal 67. Weak Mutation 24: Player.drawCard()LCard;:47 - ReplaceVariable hand -> discard
   * Goal 68. Weak Mutation 25: Player.drawCard()LCard;:47 - ReplaceVariable hand -> playedCards
   * Goal 69. Weak Mutation 49: Player.discard(LCard;)V:73 - ReplaceVariable hand -> discard
   * Goal 70. Weak Mutation 50: Player.discard(LCard;)V:73 - ReplaceVariable hand -> playedCards
   * Goal 71. Weak Mutation 51: Player.discard(LCard;)V:74 - ReplaceVariable discard -> playedCards
   * Goal 72. Weak Mutation 52: Player.discard(LCard;)V:74 - ReplaceVariable discard -> hand
   * Goal 73. Weak Mutation 53: Player.discard(LCard;)V:75 - ReplaceConstant - Player:   -> 
   * Goal 74. Weak Mutation 54: Player.discard(LCard;)V:75 - ReplaceConstant -  discards  -> 
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((GameState) null, "mH$8#@Bf~IL {");
      player0.discard((Card) null);
      player0.coins = 2;
      Card card0 = player0.drawCard();
      assertNull(card0);
  }
}
