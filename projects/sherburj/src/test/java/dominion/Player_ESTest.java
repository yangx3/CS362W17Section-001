/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 09 17:22:15 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.GameState;
import dominion.Player;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.tempcoins = 2;
      player0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numActions = 1615;
      player0.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((GameState) null, "C/_");
      Player player1 = player0.clone();
      player1.tempcoins = (-89);
      player1.numBuys = 95;
      player1.buyCard((GameState) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((GameState) null, "*");
      player0.numBuys = (-3922);
      player0.buyCard((GameState) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((GameState) null, "*");
      player0.numBuys = (-3922);
      player0.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((GameState) null, "*");
      player0.coins = 8;
      player0.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Buying");
      player0.numActions = 15;
      player0.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = player0.clone();
      player1.tempcoins = 122;
      player1.playTreasureCard();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numActions = (-1533);
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.tempcoins = 2304;
      player0.discard((Card) null);
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((GameState) null, "p");
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.trash((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((GameState) null, "A(+#~0{D");
      // Undeclared exception!
      try { 
        player0.scoreFor((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((GameState) null, "@:wBux-/|Mprl%");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.playTreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((GameState) null, "~cSN> )TLq_JU^7y");
      // Undeclared exception!
      try { 
        player0.discardType((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "I;EYK&8z`BG'9l2Yxr");
      Player player1 = player0.clone();
      player1.hand = null;
      // Undeclared exception!
      try { 
        player1.discard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((GameState) null, "n\f??X~Y\"2");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((GameState) null, "n\f??X~Y\"2");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numBuys = 15;
      player0.tempcoins = 15;
      // Undeclared exception!
      try { 
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.numBuys = 15;
      player0.tempcoins = 5;
      // Undeclared exception!
      try { 
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      List<Card> list0 = player0.hand;
      player0.discard = list0;
      player0.initializePlayerTurn();
      // Undeclared exception!
      try { 
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Buying");
      player0.numActions = 15;
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.drawType((Card) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((GameState) null, "aC0[xuz");
      Player player1 = player0.clone();
      LinkedList<Card> linkedList0 = player1.deck;
      player1.hand = (List<Card>) linkedList0;
      player1.drawCard();
      // Undeclared exception!
      try { 
        player1.drawType((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      List<Card> list0 = player0.hand;
      player0.discard = list0;
      player0.initializePlayerTurn();
      player0.gain((Card) null);
      // Undeclared exception!
      try { 
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.trash((Card) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((GameState) null, "*");
      boolean boolean0 = player0.gain((Card) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Buying");
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }
}
