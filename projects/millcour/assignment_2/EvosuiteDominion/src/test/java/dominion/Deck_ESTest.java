/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 18:41:50 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import dominion.Card;
import dominion.Deck;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Deck_ESTest extends Deck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Mine;
      Deck deck0 = new Deck(card_CardName0);
      Card card0 = deck0.drawCard();
      deck0.addCard(card0);
      deck0.addCard(card0);
      Card card1 = deck0.drawCard();
      assertSame(card1, card0);
      assertEquals(0, card1.getScore());
      assertEquals(0, card1.getCost());
      assertEquals(0, card1.getTreasureValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Deck deck0 = new Deck((Card.CardName) null);
      deck0.getName();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Ambassador;
      Deck deck0 = new Deck(card_CardName0);
      Card.CardName card_CardName1 = deck0.getName();
      assertEquals("Ambassador", card_CardName1.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Hand;
      Deck deck0 = new Deck(card_CardName0);
      deck0.addCard((Card) null);
      Card card0 = deck0.drawCard();
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Deck deck0 = new Deck(card_CardName0);
      deck0.shuffleDeck();
      assertEquals(Card.CardName.Gold, deck0.getName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Deck deck0 = new Deck(card_CardName0);
      Card.CardName card_CardName1 = deck0.getName();
      assertEquals(Card.CardName.Gold, card_CardName1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Deck deck0 = new Deck(card_CardName0);
      ArrayList<Card> arrayList0 = deck0.getPile();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Deck deck0 = new Deck(card_CardName0);
      Card card0 = deck0.drawCard();
      deck0.addCard(card0);
      ArrayList<Card> arrayList0 = deck0.getPile();
      assertFalse(arrayList0.isEmpty());
  }
}
