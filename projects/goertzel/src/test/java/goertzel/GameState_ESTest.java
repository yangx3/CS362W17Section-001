/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 21:48:35 GMT 2017
 */

package goertzel;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.LinkedList;
import java.util.List;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GameState_ESTest extends GameState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Embargoed";
      stringArray0[0] = "";
      GameState gameState0 = new GameState(stringArray0);
      Card.CardName card_CardName0 = Card.CardName.PROVINCE;
      gameState0.playOneTurn();
      gameState0.findSupplyStack(card_CardName0);
      gameState0.playOneTurn();
      gameState0.play();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_+hShC^";
      stringArray0[1] = "TURN ";
      stringArray0[2] = "TURN ";
      stringArray0[3] = "Fkn-9@dVx0d3`'";
      stringArray0[4] = "P3N\"ImP";
      stringArray0[5] = "";
      GameState gameState0 = new GameState(stringArray0);
      gameState0.treasure_supply = null;
      gameState0.victory_supply = null;
      gameState0.victory_supply = null;
      Card.CardName card_CardName0 = Card.CardName.COPPER;
      // Undeclared exception!
      try { 
        gameState0.findSupplyStack(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }


  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GameState gameState0 = new GameState();
      LinkedList<Supply_Stack> linkedList0 = new LinkedList<Supply_Stack>();
      gameState0.victory_supply = (List<Supply_Stack>) linkedList0;
      // Undeclared exception!
      try { 
        gameState0.gameOver();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GameState gameState0 = new GameState();
      gameState0.getWinners();
      LinkedList<Supply_Stack> linkedList0 = new LinkedList<Supply_Stack>();
      gameState0.victory_supply = (List<Supply_Stack>) linkedList0;
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "%s\t\t%s\t\tCost: %d \tVP: %d\tTr_Val: %d";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "#compare(Duration duration)";
      stringArray0[6] = "0.";
      GameState gameState0 = new GameState(stringArray0);
      gameState0.gameOver();
  }

//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      GameState gameState0 = new GameState();
//      List<Supply_Stack> list0 = gameState0.kingdom_supply;
//      // Undeclared exception!
//      try {
//        gameState0.play();
//        fail("Expecting exception: IndexOutOfBoundsException");
//
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         assertThrownBy("java.util.ArrayList", e);
//      }
//  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GameState gameState0 = new GameState();
      Player player0 = new Player(" : ");
      gameState0.addPlayer(player0);
      gameState0.getWinners();
      gameState0.gameOver();
      List<Player> list0 = gameState0.players;
      Card.CardName.values();
      gameState0.addPlayer(player0);
      gameState0.addPlayer(player0);
      gameState0.play();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GameState gameState0 = null;
      try {
        gameState0 = new GameState((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GameState gameState0 = new GameState();
      gameState0.getTurnCount();
      gameState0.getWinners();
      gameState0.victory_supply = null;
      gameState0.victory_supply = null;
      Player player0 = new Player("$9k&$+'H5_nwoHxg~-h");
      // Undeclared exception!
      try { 
        gameState0.addPlayer(player0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "*:\"DA9CCJg.c8r0G4'";
      stringArray0[1] = "1(Eu+rVjg/D `U";
      stringArray0[2] = "";
      stringArray0[3] = "";
      GameState gameState0 = new GameState(stringArray0);
      gameState0.gameOver();
      gameState0.treasure_supply = null;
      gameState0.treasure_supply = null;
      gameState0.kingdom_supply = null;
      gameState0.victory_supply = null;
      GameState gameState1 = new GameState(stringArray0);
      gameState1.victory_supply = null;
      gameState1.getWinners();
      GameState gameState2 = new GameState(stringArray0);
      gameState2.victory_supply = null;
      // Undeclared exception!
      try { 
        gameState2.printBoardInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GameState gameState0 = new GameState();
      gameState0.printBoardInfo();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.CardName.values();
      GameState gameState0 = new GameState();
      List<Supply_Stack> list0 = gameState0.treasure_supply;
      gameState0.kingdom_supply = list0;
      Card.CardName card_CardName0 = Card.CardName.AMBASSADOR;
      gameState0.findSupplyStack(card_CardName0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card.CardType.values();
      String[] stringArray0 = new String[3];
      GameState gameState0 = new GameState(stringArray0);
      gameState0.getWinners();
      Random.setNextRandom(9);
      Random.setNextRandom(53);
  }


  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card.CardName.values();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "\tTREASURE SUPPLY";
      stringArray0[2] = "\tTREASURE SUPPLY";
      stringArray0[3] = "";
      stringArray0[5] = "InvalidXGCFields";
      stringArray0[6] = "8ulbY<,W$";
      stringArray0[7] = "";
      stringArray0[8] = "";
      GameState gameState0 = new GameState(stringArray0);
      Player player0 = new Player("\n\nRESULTS");
      player0.decActions();
      gameState0.addPlayer(player0);
      gameState0.getTurnCount();
  }

//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      String[] stringArray0 = new String[3];
//      stringArray0[0] = " egwn";
//      stringArray0[1] = "goertzel.Card$CardType";
//      stringArray0[2] = "Mup7;-{V#WxmK";
//      GameState gameState0 = new GameState(stringArray0);
//      gameState0.play();
//      List<Supply_Stack> list0 = gameState0.treasure_supply;
//      Card.CardName card_CardName0 = Card.CardName.PROVINCE;
//      gameState0.findSupplyStack(card_CardName0);
//      List<Player> list1 = gameState0.getWinners();
//      gameState0.players = list1;
//      gameState0.treasure_supply = list0;
//  }

//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      GameState gameState0 = new GameState();
//      gameState0.getTurnCount();
//      String[] stringArray0 = new String[5];
//      stringArray0[0] = "Yz/gB?A<+'&z1r{T";
//      stringArray0[1] = "!/$2s:pd|7\"";
//      stringArray0[2] = "&IAw{s9A&";
//      stringArray0[3] = "COUNCIL_ROOM";
//      stringArray0[4] = "`8,vwa+;iC";
//      List<Player> list0 = gameState0.players;
//      gameState0.players = list0;
//      // Undeclared exception!
//      try {
//        gameState0.playOneTurn();
//        fail("Expecting exception: IndexOutOfBoundsException");
//
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         assertThrownBy("java.util.ArrayList", e);
//      }
//  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GameState gameState0 = new GameState();
      List<Supply_Stack> list0 = gameState0.victory_supply;
      gameState0.victory_supply = list0;
      Player player0 = new Player(" : ");
      gameState0.getWinners();
      boolean boolean0 = gameState0.gameOver();
      assertFalse(boolean0);
      
      List<Player> list1 = gameState0.players;
      assertEquals(0, list1.size());
      
      Card.CardName.values();
      gameState0.addPlayer(player0);
      gameState0.victory_supply = list0;
      gameState0.addPlayer(player0);
      gameState0.play();
      List<Supply_Stack> list2 = gameState0.victory_supply;
      gameState0.victory_supply = list2;
      assertEquals(4, gameState0.victory_supply.size());
  }
}
