/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 21:49:36 GMT 2017
 */

package goertzel;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.*;

//import org.evosuite.testcase.execution.CodeUnderTestException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Supply_Stack_ESTest extends Supply_Stack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Supply_Stack supply_Stack0 = null;
      try {
        supply_Stack0 = new Supply_Stack((Card.CardName) null, (-3456));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.PROVINCE;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, 49);
      supply_Stack0.isEmpty();
      supply_Stack0.take();
      Card card0 = supply_Stack0.take();
      Card.CardName card_CardName1 = Card.CardName.GREAT_HALL;
      Card.matchType(card_CardName1);
      supply_Stack0.putBack(card0);
      supply_Stack0.getName();
      supply_Stack0.embargo();
      Card.CardName.values();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.GOLD;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, 0);
      Card card0 = new Card(card_CardName0);
      Card.CardName card_CardName1 = Card.CardName.COUNCIL_ROOM;
      Card.CardName card_CardName2 = Card.CardName.CUTPURSE;
      Card.matchType(card_CardName2);
      Card.stats(card_CardName1);
      supply_Stack0.putBack(card0);
      supply_Stack0.cardsRemaining();
      Card card1 = supply_Stack0.take();
      Card.CardName.values();
      supply_Stack0.cardsRemaining();
      Supply_Stack supply_Stack1 = new Supply_Stack(card_CardName0, 0);
      supply_Stack1.putBack(card1);
      supply_Stack0.embargo();
      supply_Stack1.isEmpty();
      supply_Stack1.embargo();
      supply_Stack1.embargo();
      supply_Stack1.embargo();
      supply_Stack1.isEmbargoed();
      supply_Stack0.getName();
      Card.CardName card_CardName3 = Card.CardName.MINE;
      Supply_Stack supply_Stack2 = null;
      try {
        supply_Stack2 = new Supply_Stack(card_CardName3, 1000000000);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.GOLD;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, (-3986));
      supply_Stack0.embargo();
      int int0 = supply_Stack0.cardsRemaining();
      assertEquals(0, int0);
      
      supply_Stack0.take();
      supply_Stack0.embargo();
      supply_Stack0.getName();
      boolean boolean0 = supply_Stack0.isEmbargoed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.GARDENS;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, 109);
      boolean boolean0 = supply_Stack0.isEmbargoed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player("D-Xkr,>Wy");
      Card.CardName card_CardName0 = Card.CardName.COUNCIL_ROOM;
      GameState gameState0 = new GameState();
      player0.linkBoard(gameState0);
      player0.findSupply(card_CardName0);
  }

//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      Card.CardName card_CardName0 = Card.CardName.BARON;
//      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, (-1));
//      Card card0 = supply_Stack0.take();
//      assertNull(card0);
//
//      int int0 = supply_Stack0.getCost();
//      assertEquals(4, int0);
//  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "?c^gn]IyWXoo";
      stringArray0[1] = "jeZat:m$RNnc$";
      stringArray0[2] = "*1rsWL7@o#bIG{*}w";
      GameState gameState0 = new GameState(stringArray0);
      Card.CardName card_CardName0 = Card.CardName.CURSE;
      gameState0.findSupplyStack(card_CardName0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card.CardName.values();
      Player player0 = new Player("jU");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "jU";
      stringArray0[1] = "jU";
      stringArray0[2] = "jU";
      stringArray0[3] = "jU";
      GameState gameState0 = new GameState(stringArray0);
      Card.CardName card_CardName0 = Card.CardName.GREAT_HALL;
      gameState0.findSupplyStack(card_CardName0);
      player0.decActions();
      player0.linkBoard(gameState0);
      player0.revealCardFromDeck();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.AMBASSADOR;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, 0);
      supply_Stack0.take();
      Card card0 = null;
      supply_Stack0.cardsRemaining();
      supply_Stack0.isEmpty();
      // Undeclared exception!
      try { 
        supply_Stack0.putBack((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Supply_Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "G1NzTpor";
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("G1NzTpor");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant goertzel.Card.CardName.G1NzTpor
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = (-3992);
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("_.^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant goertzel.Card.CardName._.^
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }
}
