/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 21:46:57 GMT 2017
 */

package goertzel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import goertzel.Card;
import goertzel.GameState;
import goertzel.Player;
import goertzel.Supply_Stack;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player("+%tK3h{wURhu?T-OD");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "+%tK3h{wURhu?T-OD";
      player0.incActions((-373));
      stringArray0[1] = "+%tK3h{wURhu?T-OD";
      player0.decActions();
      stringArray0[2] = "+%tK3h{wURhu?T-OD";
      stringArray0[3] = "+%tK3h{wURhu?T-OD";
      GameState gameState0 = new GameState(stringArray0);
      gameState0.playOneTurn();
      gameState0.playOneTurn();
      gameState0.play();
      Card.CardName card_CardName0 = Card.CardName.COPPER;
      // Undeclared exception!
      try {
        player0.gain(card_CardName0, 0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }



//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      Player player0 = new Player("+%tK3h{wURhu?T-OD");
//      String[] stringArray0 = new String[4];
//      stringArray0[0] = "+%tK3h{wURhu?T-OD";
//      stringArray0[1] = "+%tK3h{wURhu?T-OD";
//      player0.decActions();
//      stringArray0[2] = "+%tK3h{wURhu?T-OD";
//      stringArray0[3] = "+%tK3h{wURhu?T-OD";
//      GameState gameState0 = new GameState(stringArray0);
//      gameState0.playOneTurn();
//      gameState0.playOneTurn();
//      gameState0.play();
//      List<Supply_Stack> list0 = gameState0.victory_supply;
//      gameState0.kingdom_supply = list0;
//      List<Supply_Stack> list1 = gameState0.victory_supply;
//      player0.linkBoard(gameState0);
//      Card.CardName card_CardName0 = null;
//      // Undeclared exception!
//      try {
//        player0.gain(card_CardName0, 0);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         assertThrownBy("goertzel.Player", e);
//      }
//  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player("");
      GameState gameState0 = new GameState();
      Card.CardName card_CardName0 = Card.CardName.BARON;
      gameState0.findSupplyStack(card_CardName0);
      player0.boardReference = gameState0;
      Card.CardName card_CardName1 = Card.CardName.CURSE;
      gameState0.findSupplyStack(card_CardName1);
      player0.boardReference = gameState0;
      player0.linkBoard(gameState0);
      player0.playTurn();
      // Undeclared exception!
      try { 
        player0.gainRandom((-172));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player("|/8(");
      player0.cloneDiscardPile();
      Card.CardName card_CardName0 = Card.CardName.VILLAGE;
      Card card0 = new Card(card_CardName0);
      player0.revealHand();
      player0.putInHand(card0);
      // Undeclared exception!
      try { 
        player0.returnCard(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player("--%M--%z");
      player0.getGoldCount();
      player0.toString();
      player0.cloneHand();
      player0.revealHand();
      player0.trashTreasure();
      Card.CardName card_CardName0 = Card.CardName.DUCHY;
      Card card0 = new Card(card_CardName0);
      Card.CardName card_CardName1 = Card.CardName.COUNCIL_ROOM;
      Card.matchType(card_CardName1);
      player0.discard(card0);
      player0.decActions();
      player0.getBuysCount();
      // Undeclared exception!
      try { 
        player0.drawCards(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player("d");
      Card.CardName card_CardName0 = Card.CardName.ADVENTURER;
      GameState gameState0 = new GameState();
      List<Supply_Stack> list0 = gameState0.victory_supply;
      gameState0.findSupplyStack(card_CardName0);
      gameState0.kingdom_supply = list0;
      gameState0.gameOver();
      LinkedList<Player> linkedList0 = new LinkedList<Player>();
      linkedList0.offerLast(player0);
      gameState0.players = (List<Player>) linkedList0;
      linkedList0.spliterator();
      gameState0.kingdom_supply = list0;
      linkedList0.add(player0);
      player0.linkBoard(gameState0);
      player0.findSupply(card_CardName0);
      Card.CardType.values();
      Card.CardType.values();
      player0.mineGain(64);
      GameState gameState1 = player0.boardReference;
      player0.trashTreasure();
      player0.getRandomSupply();
      player0.incBuys(48);
      // Undeclared exception!
      try { 
        Card.CardType.valueOf("d");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant goertzel.Card.CardType.d
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card.CardType.values();
      Player player0 = new Player("");
      Card.CardName card_CardName0 = Card.CardName.SALVAGER;
      player0.handHasCard(card_CardName0);
      player0.putInHand((Card) null);
      Card.CardName card_CardName1 = Card.CardName.DUCHY;
      // Undeclared exception!
      try { 
        player0.handHasCard(card_CardName1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }


  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player("");
      player0.revealCardFromDeck();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      Card.CardName card_CardName0 = Card.CardName.GREAT_HALL;
      Card.matchType(card_CardName0);
      stringArray0[1] = "";
      GameState gameState0 = new GameState(stringArray0);
      player0.boardReference = gameState0;
      player0.getRandomSupply();
      // Undeclared exception!
      try { 
        player0.trashCard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }


  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player("ll'_`h7Xm<x'Vr)+YC");
      player0.calcVP();
      player0.trashTreasure();
      player0.cloneHand();
      player0.cloneHand();
      player0.incActions((-946));
      player0.trashTreasure();
      player0.getActionCount();
      player0.cloneHand();
      Player player1 = new Player("ll'_`h7Xm<x'Vr)+YC");
      GameState gameState0 = null;
      try {  
      gameState0 = player1.boardReference;
      } catch(NullPointerException e) {}
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.CardName.values();
      Player player0 = new Player("=4{}3tnO'");
      player0.revealCardFromDeck();
      player0.incActions((-971));
      player0.printInfo();
      player0.discard((Card) null);
      // Undeclared exception!
      try { 
        player0.playTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player("");
      GameState gameState0 = new GameState();
      player0.incActions(8);
      Card.CardName card_CardName0 = Card.CardName.BARON;
      gameState0.findSupplyStack(card_CardName0);
      Card.CardName card_CardName1 = Card.CardName.CURSE;
      gameState0.findSupplyStack(card_CardName1);
      // Undeclared exception!
      try {
        player0.gain(card_CardName0, 0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player("");
      player0.decActions();
      player0.revealHand();
      Player player1 = new Player("it5ZG;eP>3'");
      GameState gameState0 = new GameState();
      player0.boardReference = gameState0;
      player0.incBuys(5);
      Card.CardName.values();
      Card.CardName card_CardName0 = Card.CardName.SMITHY;
      player0.returnCard(card_CardName0);
      player0.mineGain(5);
      player0.incBuys((-2616));
      player0.revealCardFromDeck();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player("y}Y+}CUIQ?");
      player0.revealCardFromDeck();
      player0.printInfo();
      Card.CardName card_CardName0 = Card.CardName.SMITHY;
      player0.decActions();
      player0.revealCardFromDeck();
      player0.handHasCard(card_CardName0);
      player0.getCardCount();
      player0.incBuys(0);
      player0.incActions(0);
      player0.getActionCount();
      player0.getCardCount();
      // Undeclared exception!
      try { 
        Card.CardType.valueOf("y}Y+}CUIQ?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant goertzel.Card.CardType.y}Y+}CUIQ?
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((String) null);
      player0.calcVP();
      player0.getPlayerName();
      player0.boardReference = null;
      player0.playTurn();
      player0.calcVP();
      Player player1 = new Player("");
      player0.cloneDiscardPile();
      Card.CardName card_CardName0 = Card.CardName.PROVINCE;
      player0.handHasCard(card_CardName0);
      player0.getGoldCount();
      // Undeclared exception!
      try { 
        player0.gainRandom(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((String) null);
      player0.cloneDiscardPile();
      player0.decActions();
      player0.cloneHand();
      player0.cloneDeck();
      player0.printInfo();
      player0.printInfo();
      player0.incBuys(2);
      player0.playTurn();
      player0.toString();
      Card.CardName card_CardName0 = Card.CardName.GOLD;
      player0.returnCard(card_CardName0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player("dSGMwQbnlLjf");
      player0.revealCardFromDeck();
      player0.incGold(1535);
      player0.calcVP();
      // Undeclared exception!
      try { 
        player0.playTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(" Gold");
      player0.playTurn();
      player0.calcVP();
      player0.playTurn();
      player0.drawCards((-2014));
      player0.revealHand();
      player0.revealCardFromDeck();
      player0.cloneDiscardPile();
      player0.incBuys((-2014));
      // Undeclared exception!
      try { 
        player0.randCardFromHand();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player("");
      player0.getActionCount();
      player0.decActions();
      player0.playTurn();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player("\t\t");
      GameState gameState0 = new GameState();
      List<Supply_Stack> list0 = gameState0.kingdom_supply;
      gameState0.kingdom_supply = list0;
      player0.linkBoard(gameState0);
      Card card0 = player0.revealCardFromDeck();
      player0.trashCard(card0);
      player0.getGoldCount();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(",?$tVW@");
      player0.getPlayerName();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player("q|^'");
      Card.CardName card_CardName0 = Card.CardName.GOLD;
      Supply_Stack supply_Stack0 = new Supply_Stack(card_CardName0, 10);
      Card card0 = supply_Stack0.take();
      player0.putInHand(card0);
      // Undeclared exception!
      try { 
        player0.linkBoard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player("+zH}s+oeV~Kz(");
      player0.boardReference = null;
      Card.CardName card_CardName0 = Card.CardName.VILLAGE;
      player0.handHasCard(card_CardName0);
      Card.stats(card_CardName0);
      player0.putInHand((Card) null);
      player0.incGold(1975);
      player0.cloneDiscardPile();
      player0.randCardFromHand();
      player0.getCardCount();
      player0.incBuys(1);
      // Undeclared exception!
      try { 
        player0.trashTreasure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player("--%M-%D%z");
      player0.getBuysCount();
      // Undeclared exception!
      try { 
        player0.mineGain(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player("");
      Card.CardName card_CardName0 = Card.CardName.ESTATE;
      player0.handHasCard(card_CardName0);
      player0.getPlayerName();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player("(g%P7[Dw^_ ");
      player0.toString();
      player0.cloneHand();
      Card.CardName card_CardName0 = Card.CardName.FEAST;
      Card card0 = new Card(card_CardName0);
      // Undeclared exception!
      try { 
        player0.randCardFromHand();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player("Hu1>>8");
      // Undeclared exception!
      try { 
        player0.gainRandom(30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player("---%D%z");
      Card.CardName card_CardName0 = Card.CardName.PROVINCE;
      // Undeclared exception!
      try { 
        player0.gain(card_CardName0, (-2084));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(";#KIYeb*syzR]~I,");
      // Undeclared exception!
      try { 
        player0.randCardFromHand();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player("");
      player0.playTurn();
      Card.CardName.values();
      Card.CardName card_CardName0 = Card.CardName.CURSE;
      // Undeclared exception!
      try { 
        player0.findSupply(card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player("B2'U\"q(>ZcOl);ol");
      player0.getGoldCount();
      player0.incGold(0);
      player0.revealHand();
      // Undeclared exception!
      try { 
        player0.getRandomSupply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Card.CardType.values();
      Player player0 = new Player("fbC183<C=A~mc+_c");
      player0.revealHand();
      player0.cloneDeck();
      player0.cloneHand();
      Card.CardName card_CardName0 = Card.CardName.GARDENS;
      player0.incActions(0);
      player0.revealCardFromDeck();
      player0.returnCard(card_CardName0);
      Card.matchType(card_CardName0);
      Card.CardName card_CardName1 = Card.CardName.COUNCIL_ROOM;
      GameState gameState0 = new GameState();
      player0.boardReference = gameState0;
      player0.findSupply(card_CardName1);
      player0.printInfo();
      Card.CardName card_CardName2 = Card.CardName.COUNCIL_ROOM;
      Card.stats(card_CardName2);
      Card.matchType(card_CardName0);
      // Undeclared exception!
      try { 
        player0.trashCard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player("");
//      player0.playTurn();
      player0.printInfo();
      player0.toString();
  }


  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player("\tAction Phase");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "\tAction Phase";
      stringArray0[1] = "\tAction Phase";
      stringArray0[2] = "";
      stringArray0[3] = "\tAction Phase";
      stringArray0[4] = "\tAction Phase";
      stringArray0[5] = "\tAction Phase";
      stringArray0[6] = "\tAction Phase";
      stringArray0[7] = "\tAction Phase";
      stringArray0[8] = "\tAction Phase";
      GameState gameState0 = new GameState(stringArray0);
      player0.linkBoard(gameState0);
      player0.mineGain(0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player("H@NyFe.%txn~V");
      player0.cloneDiscardPile();
      player0.decActions();
      player0.printInfo();
      Card.CardName card_CardName0 = Card.CardName.COUNCIL_ROOM;
      player0.handHasCard(card_CardName0);
      player0.getGoldCount();
      player0.incBuys(0);
      GameState gameState0 = null;
      try {  
      gameState0 = player0.boardReference;
      } catch(NullPointerException e) {}
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player("");
      player0.cloneHand();
      player0.incActions((-205));
      player0.decActions();
      player0.mineGain((-1050));
      // Undeclared exception!
      try { 
        player0.mineGain(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player("\t\t");
      int int0 = 5;
      player0.drawCards(5);
      player0.cloneDiscardPile();
      Card.CardName card_CardName0 = Card.CardName.SMITHY;
      player0.trashTreasure();
      player0.handHasCard(card_CardName0);
      player0.getCardCount();
      player0.cloneDiscardPile();
      Card.CardName card_CardName1 = Card.CardName.GARDENS;
      Card card0 = new Card(card_CardName1);
      card0.toString();
      player0.putInHand(card0);
      card0.toString();
      player0.trashTreasure();
      Player player1 = new Player("\t\t");
      player1.discard((Card) null);
      // Undeclared exception!
      try { 
        Card.CardName.valueOf("@ks4*>){?hg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant goertzel.Card.CardName.@ks4*>){?hg
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player("'s discard pile:");
      player0.printInfo();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'s discard pile:";
      stringArray0[1] = "'s discard pile:";
      stringArray0[2] = "'s discard pile:";
      stringArray0[3] = "'s discard pile:";
      GameState gameState0 = new GameState(stringArray0);
      gameState0.addPlayer(player0);
      gameState0.playOneTurn();
      player0.linkBoard(gameState0);
      Card card0 = player0.revealCardFromDeck();
      Card.CardName card_CardName0 = Card.CardName.SALVAGER;
      Card.matchType(card_CardName0);
      card0.toString();
      Card.CardName card_CardName1 = Card.CardName.MINE;
      Card.matchType(card_CardName1);
      player0.discard(card0);
      player0.trashTreasure();
      player0.printInfo();
      player0.getBuysCount();
      Card.CardName card_CardName2 = Card.CardName.SALVAGER;
      player0.returnCard(card_CardName2);
      player0.trashTreasure();
      player0.incBuys(1);
      player0.cloneDiscardPile();
      player0.cloneDeck();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = " could not buy ";
      Player player0 = new Player(" could not buy ");
      player0.revealHand();
      player0.revealCardFromDeck();
      player0.drawCards(5);
      player0.cloneHand();
      // Undeclared exception!
      try { 
        player0.mineGain(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("goertzel.Player", e);
      }
  }
}
