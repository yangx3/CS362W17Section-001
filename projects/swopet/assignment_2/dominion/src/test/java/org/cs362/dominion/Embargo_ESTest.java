/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 16:28:48 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.cs362.dominion.Card;
import org.cs362.dominion.Embargo;
import org.cs362.dominion.GameState;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Embargo_ESTest extends Embargo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[7];
      Boolean boolean0 = Boolean.valueOf(false);
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Embargo embargo0 = new Embargo();
      Random.setNextRandom((-1653));
      Boolean boolean1 = embargo0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[6];
      Boolean boolean0 = Boolean.valueOf(false);
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Random.setNextRandom(2625);
      Boolean boolean1 = embargo0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom(2);
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(2, 557);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(4, 33);
      Random.setNextRandom(2335);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.setNextRandom(3);
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 0);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(4, 33);
      Random.setNextRandom(33);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(2, 2);
      gameState0.phase = (-1270);
      Boolean boolean0 = embargo0.play(gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      // Undeclared exception!
      try { 
        embargo0.play((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Embargo", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(2, 557);
      LinkedList<List<Card>> linkedList0 = new LinkedList<List<Card>>();
      gameState0.treasureCards = (List<List<Card>>) linkedList0;
      // Undeclared exception!
      try { 
        embargo0.play(gameState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(2, 2);
      gameState0.whoseTurn = (-630);
      // Undeclared exception!
      try { 
        embargo0.play(gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -630
         //
         assertThrownBy("org.cs362.dominion.Embargo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[6];
      Boolean boolean0 = Boolean.valueOf(false);
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Random.setNextRandom(3);
      Boolean boolean1 = embargo0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[6];
      Boolean boolean0 = Boolean.valueOf(false);
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Random.setNextRandom(3619);
      Boolean boolean1 = embargo0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(4, 513);
      Random.setNextRandom(7);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[6];
      Boolean boolean0 = Boolean.valueOf(false);
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Boolean boolean1 = embargo0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(2, 2);
      gameState0.turn();
      Boolean boolean0 = embargo0.play(gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Embargo embargo0 = new Embargo();
      GameState gameState0 = new GameState(3, 3);
      embargo0.play(gameState0);
      Boolean boolean0 = embargo0.play(gameState0);
      assertTrue(boolean0);
  }
}
