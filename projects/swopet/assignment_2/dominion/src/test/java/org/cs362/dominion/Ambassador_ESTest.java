/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 16:25:46 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.cs362.dominion.Ambassador;
import org.cs362.dominion.Card;
import org.cs362.dominion.GameState;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Ambassador_ESTest extends Ambassador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(3, 3);
      gameState0.turn();
      Boolean boolean0 = ambassador0.play(gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      // Undeclared exception!
      try { 
        ambassador0.play((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Ambassador", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(3, 3);
      gameState0.whoseTurn = 3;
      // Undeclared exception!
      try { 
        ambassador0.play(gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         assertThrownBy("org.cs362.dominion.Ambassador", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Random.setNextRandom(3);
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(3, 3);
      ambassador0.play(gameState0);
      LinkedList<List<Card>> linkedList0 = new LinkedList<List<Card>>();
      gameState0.treasureCards = (List<List<Card>>) linkedList0;
      // Undeclared exception!
      try { 
        ambassador0.play(gameState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         assertThrownBy("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(4, 4);
      ambassador0.play(gameState0);
      ambassador0.play(gameState0);
      ambassador0.play(gameState0);
      Boolean boolean0 = ambassador0.play(gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(3, 3);
      Player[] playerArray0 = new Player[3];
      Boolean boolean0 = Boolean.FALSE;
      Player player0 = new Player(boolean0);
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      Boolean boolean1 = ambassador0.play(gameState0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Ambassador ambassador0 = new Ambassador();
      GameState gameState0 = new GameState(2, 2);
      gameState0.phase = (-3045);
      Boolean boolean0 = ambassador0.play(gameState0);
      assertFalse(boolean0);
  }
}
