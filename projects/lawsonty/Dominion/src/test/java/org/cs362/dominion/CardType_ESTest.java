/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 22 23:55:29 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.CardType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CardType_ESTest extends CardType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CardType[] cardTypeArray0 = CardType.values();
      assertNotNull(cardTypeArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CardType cardType0 = CardType.valueOf("CURSE");
      assertEquals("CURSE", cardType0.name());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CardType cardType0 = CardType.CURSE;
      long long0 = cardType0.getCardTypeValue();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        CardType.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CardType.valueOf("i@Id7*hH'v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.cs362.dominion.CardType.i@Id7*hH'v
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CardType cardType0 = CardType.valueOf("TREASURE");
      long long0 = cardType0.getCardTypeValue();
      assertEquals(1L, long0);
  }
}
