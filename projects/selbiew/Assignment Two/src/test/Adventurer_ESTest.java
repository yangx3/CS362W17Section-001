/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 05:58:29 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Adventurer_ESTest extends Adventurer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Card.Type.values();
      adventurer0.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      Adventurer adventurer1 = new Adventurer();
      adventurer0.dynamicValue(domGame0, player0);
      adventurer0.cardDraw = 41;
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      adventurer0.value = 50;
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Adventurer adventurer1 = new Adventurer();
      Card.Type.values();
      adventurer1.play(domGame0, 0, 0);
      adventurer1.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      Adventurer adventurer2 = new Adventurer();
      adventurer0.buys = 3;
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      adventurer0.value = 50;
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Adventurer adventurer1 = new Adventurer();
      Card.Type.values();
      adventurer1.play(domGame0, 0, 0);
      adventurer1.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      Adventurer adventurer2 = new Adventurer();
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Adventurer adventurer1 = new Adventurer();
      Card.Type.values();
      adventurer1.play(domGame0, 0, 0);
      adventurer1.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      adventurer0.points = 41;
      Adventurer adventurer2 = new Adventurer();
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Adventurer adventurer1 = new Adventurer();
      adventurer0.actions = 2852;
      Card.Type.values();
      adventurer1.play(domGame0, 0, 0);
      adventurer1.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 0);
      Adventurer adventurer2 = new Adventurer();
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame(0);
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      Adventurer adventurer1 = new Adventurer();
      Card.Type.values();
      adventurer1.play(domGame0, 0, 6);
      Card.Type card_Type0 = Card.Type.ATTACK;
      adventurer1.cardType = card_Type0;
      adventurer1.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      Adventurer adventurer2 = new Adventurer();
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 6);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame((-727));
      Player player0 = domGame0.getWinner();
      Deck deck0 = new Deck((Card) adventurer0, 1);
      player0.discard = deck0;
      domGame0.turnCount = 0;
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, (-4638), (-4638));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4638
         //
         assertThrownBy("Adventurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card.Type.values();
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame(6);
      Player player0 = new Player(0, domGame0.rand);
      List<Deck> list0 = domGame0.kingdomCards;
      Deck deck0 = new Deck();
      player0.draw = deck0;
      domGame0.basicCards = list0;
      // Undeclared exception!
      try { 
        adventurer0.dynamicValue(domGame0, player0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("Adventurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      Adventurer adventurer1 = new Adventurer();
      DomGame domGame0 = new DomGame((-945));
      domGame0.playerCount = (-945);
      adventurer0.play(domGame0, 1, 1);
      Card.Type.values();
      // Undeclared exception!
      try { 
        Card.Type.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant Card.Type.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame(0);
      adventurer0.cost = 546;
      LinkedList<Deck> linkedList0 = new LinkedList<Deck>();
      domGame0.basicCards = (List<Deck>) linkedList0;
      Player player0 = new Player((-2233), domGame0.rand);
      adventurer0.dynamicValue(domGame0, player0);
      // Undeclared exception!
      try { 
        adventurer0.play((DomGame) null, (-2233), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Adventurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      Adventurer adventurer1 = new Adventurer();
      adventurer0.actions = (-1);
      DomGame domGame0 = new DomGame((-2563));
      // Undeclared exception!
      try { 
        adventurer0.dynamicValue(domGame0, (Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Adventurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame(0);
      adventurer0.play(domGame0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      DomGame domGame0 = new DomGame(197);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("Adventurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Adventurer adventurer0 = new Adventurer();
      adventurer0.cost = 0;
      DomGame domGame0 = new DomGame(0);
      Player player0 = domGame0.getWinner();
      adventurer0.dynamicValue(domGame0, player0);
      adventurer0.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 0);
      adventurer0.play(domGame0, 0, 41);
      // Undeclared exception!
      try { 
        adventurer0.play(domGame0, 0, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
