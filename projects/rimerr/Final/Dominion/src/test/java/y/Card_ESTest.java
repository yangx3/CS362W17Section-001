/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 00:56:43 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.GameState;
import dominion.Player;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 138 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.score(Ldominion/Player;)I: root-Branch
   * Goal 3. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 4. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 5. Branch dominion.Card.score(Ldominion/Player;)I: root-Branch in context: dominion.Card:score(Ldominion/Player;)I
   * Goal 6. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 7. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 8. [Output]: dominion.Card.score(Ldominion/Player;)I:Positive
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 12. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 13. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 14. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 15. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 16. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 17. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 18. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 19. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 20. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 21. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 22. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 57. dominion.Card.score(Ldominion/Player;)I: Line 51
   * Goal 58. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 59. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 60. [METHOD] dominion.Card.score(Ldominion/Player;)I
   * Goal 61. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 62. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 63. [METHODNOEX] dominion.Card.score(Ldominion/Player;)I
   * Goal 64. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 65. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 66. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 67. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 68. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 69. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 70. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 71. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 72. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 73. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 74. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 75. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 76. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 77. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 78. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 79. Weak Mutation 21: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 22: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 23: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 83. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 84. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 85. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 86. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 87. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 88. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 89. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 90. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 91. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 92. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 93. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 94. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 95. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 96. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 97. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 98. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 99. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 100. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 101. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 102. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 103. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 104. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 106. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 107. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 108. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 109. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 110. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 111. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 112. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 113. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 114. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 115. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 116. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 117. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 118. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 119. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 120. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 121. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 122. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 123. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 124. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 125. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 126. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 127. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 128. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 129. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 130. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 131. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 132. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 134. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 135. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 136. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 137. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 138. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Village;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 2136, 2136, 2);
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      int int0 = card0.score(player0);
      assertEquals(2136, int0);
  }

  //Test case number: 1
  /*
   * 138 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.score(Ldominion/Player;)I: root-Branch
   * Goal 3. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 4. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 5. Branch dominion.Card.score(Ldominion/Player;)I: root-Branch in context: dominion.Card:score(Ldominion/Player;)I
   * Goal 6. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 7. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 8. [Output]: dominion.Card.score(Ldominion/Player;)I:Negative
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 12. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 13. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 14. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 15. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 16. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 17. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 18. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 19. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 20. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 21. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 22. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 57. dominion.Card.score(Ldominion/Player;)I: Line 51
   * Goal 58. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 59. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 60. [METHOD] dominion.Card.score(Ldominion/Player;)I
   * Goal 61. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 62. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 63. [METHODNOEX] dominion.Card.score(Ldominion/Player;)I
   * Goal 64. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 65. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 66. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 67. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 68. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 69. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 70. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 71. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 72. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 73. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 74. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 75. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 76. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 77. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 78. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 79. Weak Mutation 21: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 22: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 23: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 83. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 84. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 85. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 86. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 87. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 88. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 89. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 90. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 91. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 92. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 93. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 94. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 95. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 96. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 97. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 98. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 99. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 100. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 101. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 102. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 103. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 104. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 106. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 107. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 108. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 109. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 110. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 111. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 112. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 113. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 114. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 115. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 116. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 117. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 118. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 119. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 120. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 121. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 122. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 123. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 124. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 125. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 126. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 127. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 128. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 129. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 130. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 131. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 132. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 134. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 135. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 136. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 137. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 138. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, (-769), (-2817), 0);
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, ",2[Y|c=9J?");
      int int0 = card0.score(player0);
      assertEquals((-2817), int0);
  }

  //Test case number: 2
  /*
   * 25 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.getType()Ldominion/Card$Type;: root-Branch
   * Goal 3. Branch dominion.Card.getType()Ldominion/Card$Type;: root-Branch in context: dominion.Card:getType()Ldominion/Card$Type;
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getType()Ldominion/Card$Type;:NonNull:dominion.Card$Type:ordinal()I:Positive
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getType()Ldominion/Card$Type;: Line 40
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getType()Ldominion/Card$Type;
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getType()Ldominion/Card$Type;
   * Goal 17. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 18. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 19. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 20. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 21. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 22. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 23. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 24. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 25. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 0, 0);
      Card.Type card_Type1 = card0.getType();
      assertEquals("TREASURE", card_Type1.name());
  }

  //Test case number: 3
  /*
   * 32 covered goals:
   * Goal 1. dominion.Card.getTreasureValue()I: root-Branch
   * Goal 2. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 3. Branch dominion.Card.getTreasureValue()I: root-Branch in context: dominion.Card:getTreasureValue()I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getTreasureValue()I:Positive
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getTreasureValue()I: Line 47
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getTreasureValue()I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getTreasureValue()I
   * Goal 17. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 18. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 19. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 20. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 21. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 22. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 23. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 24. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 25. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 26. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 27. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 28. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 29. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 30. Weak Mutation 15: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 16: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 17: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Village;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 2136, 2136, 2);
      int int0 = card0.getTreasureValue();
      assertEquals(2, int0);
  }

  //Test case number: 4
  /*
   * 28 covered goals:
   * Goal 1. dominion.Card.getTreasureValue()I: root-Branch
   * Goal 2. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 3. Branch dominion.Card.getTreasureValue()I: root-Branch in context: dominion.Card:getTreasureValue()I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getTreasureValue()I:Negative
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getTreasureValue()I: Line 47
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getTreasureValue()I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getTreasureValue()I
   * Goal 17. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 18. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 19. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 20. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 21. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 22. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 23. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 24. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 25. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 26. Weak Mutation 15: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 16: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 17: dominion.Card.getTreasureValue()I:47 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.GreatHall;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, (-1343), (-1343), (-1343));
      int int0 = card0.getTreasureValue();
      assertEquals((-1343), int0);
  }

  //Test case number: 5
  /*
   * 34 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.getCost()I: root-Branch
   * Goal 3. Branch dominion.Card.getCost()I: root-Branch in context: dominion.Card:getCost()I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getCost()I:Zero
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getCost()I: Line 49
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getCost()I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getCost()I
   * Goal 17. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 18. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 19. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 20. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 21. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 22. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 23. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 24. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 25. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 26. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 27. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 28. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 29. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 30. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 31. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 32. Weak Mutation 18: dominion.Card.getCost()I:49 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 19: dominion.Card.getCost()I:49 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 20: dominion.Card.getCost()I:49 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 3667, 15);
      int int0 = card0.getCost();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 32 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.getCost()I: root-Branch
   * Goal 3. Branch dominion.Card.getCost()I: root-Branch in context: dominion.Card:getCost()I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getCost()I:Negative
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getCost()I: Line 49
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getCost()I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getCost()I
   * Goal 17. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 18. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 19. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 20. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 21. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 22. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 23. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 24. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 25. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 26. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 27. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 28. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 29. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 30. Weak Mutation 18: dominion.Card.getCost()I:49 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 19: dominion.Card.getCost()I:49 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 20: dominion.Card.getCost()I:49 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Ambassador;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, (-2749), (-2749), 20);
      int int0 = card0.getCost();
      assertEquals((-2749), int0);
  }

  //Test case number: 7
  /*
   * 156 covered goals:
   * Goal 1. dominion.Card.getCardName()Ldominion/Card$CardName;: root-Branch
   * Goal 2. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 3. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 4. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false
   * Goal 5. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false
   * Goal 6. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 7. Branch dominion.Card.getCardName()Ldominion/Card$CardName;: root-Branch in context: dominion.Card:getCardName()Ldominion/Card$CardName;
   * Goal 8. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 9. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 10. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 11. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 12. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 13. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 14. [Output]: dominion.Card.getCardName()Ldominion/Card$CardName;:NonNull:dominion.Card$CardName:ordinal()I:Zero
   * Goal 15. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 16. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 17. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 18. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 19. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 20. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 21. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 22. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 57. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 58. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 59. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 60. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 61. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 62. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 63. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 64. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 104
   * Goal 65. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 105
   * Goal 66. dominion.Card.getCardName()Ldominion/Card$CardName;: Line 44
   * Goal 67. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 68. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 69. [METHOD] dominion.Card.getCardName()Ldominion/Card$CardName;
   * Goal 70. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 71. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 72. [METHODNOEX] dominion.Card.getCardName()Ldominion/Card$CardName;
   * Goal 73. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 74. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 75. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 76. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 77. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 78. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 79. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 80. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 81. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 82. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 83. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 84. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 85. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 86. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 87. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 88. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 89. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 90. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 91. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 92. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 93. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 94. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 95. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 96. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 97. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 98. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 99. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 100. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 101. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 102. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 103. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 104. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 106. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 107. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 108. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 109. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 110. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 111. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 113. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 114. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 115. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 116. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 117. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 118. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 119. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 120. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 121. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 122. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 124. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 125. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 126. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 127. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 128. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 129. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 130. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 131. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 132. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 133. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 134. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 135. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 136. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 137. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 138. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 139. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 140. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 141. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 142. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 143. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 144. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 145. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 146. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 147. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 148. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 149. Weak Mutation 85: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> -1
   * Goal 150. Weak Mutation 88: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp Negation of i
   * Goal 151. Weak Mutation 89: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC 1 i
   * Goal 152. Weak Mutation 90: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC -1 i
   * Goal 153. Weak Mutation 91: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - ReplaceComparisonOperator == -> !=
   * Goal 154. Weak Mutation 92: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp Negation of i
   * Goal 155. Weak Mutation 93: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC 1 i
   * Goal 156. Weak Mutation 94: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Card.getCard(list0, card_CardName0);
  }

  //Test case number: 8
  /*
   * 152 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 3. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false
   * Goal 4. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true
   * Goal 5. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false
   * Goal 6. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 7. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 8. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 9. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 10. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 11. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 12. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getCost()I:Zero
   * Goal 13. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 14. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 15. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 16. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 17. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 18. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 19. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 20. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 21. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 22. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 57. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 58. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 59. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 60. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 61. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 62. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 63. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 104
   * Goal 64. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 105
   * Goal 65. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 66. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 67. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 68. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 69. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 70. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 71. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 72. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 73. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 74. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 75. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 76. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 77. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 78. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 79. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 80. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 81. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 82. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 83. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 84. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 85. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 86. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 87. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 88. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 89. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 90. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 91. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 92. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 93. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 94. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 95. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 96. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 97. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 98. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 99. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 100. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 101. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 102. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 103. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 104. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 105. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 107. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 108. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 109. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 110. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 111. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 112. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 113. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 114. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 115. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 116. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 117. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 118. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 119. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 120. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 121. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 122. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 123. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 124. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 125. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 126. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 127. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 128. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 129. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 130. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 131. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 132. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 133. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 134. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 135. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 136. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 137. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 138. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 139. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 140. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 141. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 142. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 143. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 144. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 145. Weak Mutation 85: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> -1
   * Goal 146. Weak Mutation 88: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp Negation of i
   * Goal 147. Weak Mutation 89: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC 1 i
   * Goal 148. Weak Mutation 90: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC -1 i
   * Goal 149. Weak Mutation 91: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - ReplaceComparisonOperator == -> !=
   * Goal 150. Weak Mutation 92: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp Negation of i
   * Goal 151. Weak Mutation 93: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC 1 i
   * Goal 152. Weak Mutation 94: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Copper;
      Card card0 = Card.getCard(list0, card_CardName0);
      //  // Unstable assertion: assertNull(card0);
  }

  //Test case number: 9
  /*
   * 46 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false
   * Goal 3. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 6. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 7. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getCost()I:Negative
   * Goal 8. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Negative
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 12. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 13. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 14. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 15. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 16. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 104
   * Goal 17. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 105
   * Goal 18. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 19. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 20. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 21. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 22. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 23. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 24. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 25. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 26. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 27. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 28. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 29. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 30. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 31. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 32. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 33. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 34. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 35. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 37. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 38. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 39. Weak Mutation 85: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 88: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp Negation of i
   * Goal 41. Weak Mutation 89: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC 1 i
   * Goal 42. Weak Mutation 90: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC -1 i
   * Goal 43. Weak Mutation 91: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 92: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp Negation of i
   * Goal 45. Weak Mutation 93: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC 1 i
   * Goal 46. Weak Mutation 94: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Vector<Card> vector0 = new Vector<Card>();
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, (-1), (-3275), (-1));
      vector0.add(card0);
      Card card1 = Card.getCard(vector0, card_CardName0);
      assertEquals(Card.Type.TREASURE, card1.getType());
  }

  //Test case number: 10
  /*
   * 10 covered goals:
   * Goal 1. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - true
   * Goal 2. Branch dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - true in context: dominion.Card:filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 3. [Output]: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
   * Goal 4. [Output]: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:NonNull:java.util.List:size()I:Zero
   * Goal 5. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 111
   * Goal 6. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 112
   * Goal 7. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 115
   * Goal 8. [METHOD] dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 9. [METHODNOEX] dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 10. Weak Mutation 95: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:112 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      Card.Type card_Type0 = Card.Type.TREASURE;
      List<Card> list0 = Card.filter(vector0, card_Type0);
      assertEquals(0, list0.size());
  }

  //Test case number: 11
  /*
   * 161 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 3. dominion.Card.compareTo(Ldominion/Card;)I: root-Branch
   * Goal 4. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false
   * Goal 5. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true
   * Goal 6. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false
   * Goal 7. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 8. Branch dominion.Card.compareTo(Ldominion/Card;)I: root-Branch in context: dominion.Card:compareTo(Ldominion/Card;)I
   * Goal 9. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 10. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 11. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 12. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 13. [Output]: dominion.Card.compareTo(Ldominion/Card;)I:Positive
   * Goal 14. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 15. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 16. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 17. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 18. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 19. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 20. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 21. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 22. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 23. dominion.Card.compareTo(Ldominion/Card;)I: Line 143
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 57. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 58. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 59. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 60. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 61. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 62. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 63. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 64. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 65. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 66. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 67. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 104
   * Goal 68. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 105
   * Goal 69. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 70. [METHOD] dominion.Card.compareTo(Ldominion/Card;)I
   * Goal 71. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 72. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 73. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 74. [METHODNOEX] dominion.Card.compareTo(Ldominion/Card;)I
   * Goal 75. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 76. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 77. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 78. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 79. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 80. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 81. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 82. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 83. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 84. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 85. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 86. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 87. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 88. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 89. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 90. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 91. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 92. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 93. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 94. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 95. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 96. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 97. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 99. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 100. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 101. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 102. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 103. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 104. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 105. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 106. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 107. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 108. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 109. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 110. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 111. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 112. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 113. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 115. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 116. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 117. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 118. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 119. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 120. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 121. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 122. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 123. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 124. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 125. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 126. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 127. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 128. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 129. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 130. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 131. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 132. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 133. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 134. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 135. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 136. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 137. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 138. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 139. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 140. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 141. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 142. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 143. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 144. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 145. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 146. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 147. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 148. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 149. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 150. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 151. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 152. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 153. Weak Mutation 85: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> -1
   * Goal 154. Weak Mutation 88: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp Negation of i
   * Goal 155. Weak Mutation 89: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC 1 i
   * Goal 156. Weak Mutation 90: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC -1 i
   * Goal 157. Weak Mutation 91: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - ReplaceComparisonOperator == -> !=
   * Goal 158. Weak Mutation 92: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp Negation of i
   * Goal 159. Weak Mutation 93: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC 1 i
   * Goal 160. Weak Mutation 94: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC -1 i
   * Goal 161. Weak Mutation 120: dominion.Card.compareTo(Ldominion/Card;)I:143 - ReplaceVariable o -> this
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card card0 = Card.getCard(list0, card_CardName0);
      //  // Unstable assertion: assertNotNull(card0);
      
      Card.Type card_Type0 = Card.Type.ACTION;
      Card.CardName card_CardName1 = Card.CardName.Embargo;
      Card card1 = new Card(card_CardName1, card_Type0, 8, (-3066), 13);
      // Undeclared exception!
      try { 
        card1.compareTo(card0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  //Test case number: 12
  /*
   * 32 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.compareTo(Ldominion/Card;)I: root-Branch
   * Goal 3. Branch dominion.Card.compareTo(Ldominion/Card;)I: root-Branch in context: dominion.Card:compareTo(Ldominion/Card;)I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.compareTo(Ldominion/Card;)I:Negative
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.compareTo(Ldominion/Card;)I: Line 143
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.compareTo(Ldominion/Card;)I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.compareTo(Ldominion/Card;)I
   * Goal 17. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 18. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 19. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 20. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 21. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 22. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 23. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 24. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 25. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 26. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 27. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 28. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 29. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 30. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 31. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 32. Weak Mutation 120: dominion.Card.compareTo(Ldominion/Card;)I:143 - ReplaceVariable o -> this
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.SeaHag;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 12, 12, 255);
      Card.CardName card_CardName1 = Card.CardName.Embargo;
      Card card1 = new Card(card_CardName1, card_Type0, (-749), (-5651), (-749));
      int int0 = card1.compareTo(card0);
      assertEquals((-6), int0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * Goal 1. getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 3. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 4. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 5. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 6. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 7. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Province;
      // Undeclared exception!
      try { 
        Card.getCard((List<Card>) null, card_CardName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * Goal 1. filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 111
   * Goal 3. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 112
   * Goal 4. [METHOD] dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card.Type card_Type0 = Card.Type.TREASURE;
      // Undeclared exception!
      try { 
        Card.filter((Iterable<Card>) null, card_Type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  //Test case number: 15
  /*
   * 29 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.compareTo(Ldominion/Card;)I: root-Branch
   * Goal 3. Branch dominion.Card.compareTo(Ldominion/Card;)I: root-Branch in context: dominion.Card:compareTo(Ldominion/Card;)I
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. compareTo(Ldominion/Card;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.compareTo(Ldominion/Card;)I: Line 143
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.compareTo(Ldominion/Card;)I
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 17. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 18. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 19. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 20. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 21. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 22. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 23. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 24. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 25. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 26. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 27. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 28. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 29. Weak Mutation 120: dominion.Card.compareTo(Ldominion/Card;)I:143 - ReplaceVariable o -> this
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Gardens;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 6, (-1946), (-1946));
      // Undeclared exception!
      try { 
        card0.compareTo((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  //Test case number: 16
  /*
   * 25 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.getType()Ldominion/Card$Type;: root-Branch
   * Goal 3. Branch dominion.Card.getType()Ldominion/Card$Type;: root-Branch in context: dominion.Card:getType()Ldominion/Card$Type;
   * Goal 4. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 5. [Output]: dominion.Card.getType()Ldominion/Card$Type;:NonNull:dominion.Card$Type:ordinal()I:Zero
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.getType()Ldominion/Card$Type;: Line 40
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.getType()Ldominion/Card$Type;
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.getType()Ldominion/Card$Type;
   * Goal 17. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 18. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 19. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 20. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 21. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 22. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 23. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 24. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 25. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, 5, 5, 5);
      Card.Type card_Type1 = card0.getType();
      assertEquals("ACTION", card_Type1.name());
  }

  //Test case number: 17
  /*
   * 27 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.equals(Ljava/lang/Object;)Z: I4 Branch 5 IF_ACMPNE L133 - false
   * Goal 3. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 4. Branch dominion.Card.equals(Ljava/lang/Object;)Z: I4 Branch 5 IF_ACMPNE L133 - false in context: dominion.Card:equals(Ljava/lang/Object;)Z
   * Goal 5. [Output]: dominion.Card.equals(Ljava/lang/Object;)Z:True
   * Goal 6. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 7. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 12. dominion.Card.equals(Ljava/lang/Object;)Z: Line 133
   * Goal 13. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 14. [METHOD] dominion.Card.equals(Ljava/lang/Object;)Z
   * Goal 15. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 16. [METHODNOEX] dominion.Card.equals(Ljava/lang/Object;)Z
   * Goal 17. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 18. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 19. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 20. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 21. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 22. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 23. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 24. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 25. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 26. Weak Mutation 114: dominion.Card.equals(Ljava/lang/Object;)Z:133 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 115: dominion.Card.equals(Ljava/lang/Object;)Z:133 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 0, 0);
      boolean boolean0 = card0.equals(card0);
      assertTrue(boolean0);
  }

  //Test case number: 18
  /*
   * 148 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 3. dominion.Card.getType()Ldominion/Card$Type;: root-Branch
   * Goal 4. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - true
   * Goal 5. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - false
   * Goal 6. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I24 Branch 4 IF_ACMPNE L113 - true
   * Goal 7. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I24 Branch 4 IF_ACMPNE L113 - false
   * Goal 8. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 9. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 10. Branch dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - false in context: dominion.Card:filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 11. Branch dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I14 Branch 3 IFEQ L112 - true in context: dominion.Card:filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 12. Branch dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I24 Branch 4 IF_ACMPNE L113 - true in context: dominion.Card:filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 13. Branch dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: I24 Branch 4 IF_ACMPNE L113 - false in context: dominion.Card:filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 14. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 15. [Output]: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:False
   * Goal 16. [Output]: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 17. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 18. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 19. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 20. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 21. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 22. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 57. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 58. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 59. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 60. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 61. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 62. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 63. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 64. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 65. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 111
   * Goal 66. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 112
   * Goal 67. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 113
   * Goal 68. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 114
   * Goal 69. dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;: Line 115
   * Goal 70. dominion.Card.getType()Ldominion/Card$Type;: Line 40
   * Goal 71. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 72. [METHOD] dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 73. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 74. [METHODNOEX] dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;
   * Goal 75. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 76. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 77. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 78. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 79. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 80. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 81. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 82. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 83. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 84. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 85. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 86. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 87. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 88. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 89. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 90. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 91. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 92. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 93. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 94. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 95. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 96. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 97. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 98. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 99. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 100. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 101. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 102. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 103. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 104. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 105. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 106. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 107. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 108. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 109. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 110. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 111. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 112. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 113. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 114. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 115. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 116. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 117. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 118. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 119. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 120. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 121. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 122. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 123. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 124. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 125. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 126. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 127. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 128. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 129. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 130. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 131. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 132. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 133. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 134. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 135. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 136. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 137. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 138. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 139. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 140. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 141. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 142. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 143. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 144. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 145. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 146. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 147. Weak Mutation 95: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:112 - ReplaceComparisonOperator == -> !=
   * Goal 148. Weak Mutation 96: dominion.Card.filter(Ljava/lang/Iterable;Ldominion/Card$Type;)Ljava/util/List;:113 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.Type card_Type0 = Card.Type.ACTION;
      List<Card> list1 = Card.filter(list0, card_Type0);
      //  // Unstable assertion: assertEquals(0, list1.size());
  }

  //Test case number: 19
  /*
   * 12 covered goals:
   * Goal 1. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - true
   * Goal 2. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - true in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 3. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:Null
   * Goal 4. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 5. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 107
   * Goal 6. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 7. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 8. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 9. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 10. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 11. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 12. Weak Mutation 86: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Player player0 = new Player((GameState) null, "");
      List<Card> list0 = player0.playedCards;
      Card card0 = Card.getCard(list0, card_CardName0);
      assertNull(card0);
  }

  //Test case number: 20
  /*
   * 161 covered goals:
   * Goal 1. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 2. dominion.Card.score(Ldominion/Player;)I: root-Branch
   * Goal 3. dominion.Card.createCards()Ljava/util/List;: root-Branch
   * Goal 4. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false
   * Goal 5. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true
   * Goal 6. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false
   * Goal 7. Branch dominion.Card.createCards()Ljava/util/List;: root-Branch in context: 
   * Goal 8. Branch dominion.Card.score(Ldominion/Player;)I: root-Branch in context: dominion.Card:score(Ldominion/Player;)I
   * Goal 9. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 10. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I8 Branch 1 IF_ICMPGE L103 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 11. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - false in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 12. Branch dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: I18 Branch 2 IFEQ L104 - true in context: dominion.Card:getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 13. [Output]: dominion.Card.createCards()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 14. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 15. [Output]: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 16. [Output]: dominion.Card.score(Ldominion/Player;)I:Zero
   * Goal 17. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 18. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 19. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 20. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 21. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 22. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 23. dominion.Card.createCards()Ljava/util/List;: Line 54
   * Goal 24. dominion.Card.createCards()Ljava/util/List;: Line 57
   * Goal 25. dominion.Card.createCards()Ljava/util/List;: Line 58
   * Goal 26. dominion.Card.createCards()Ljava/util/List;: Line 59
   * Goal 27. dominion.Card.createCards()Ljava/util/List;: Line 60
   * Goal 28. dominion.Card.createCards()Ljava/util/List;: Line 61
   * Goal 29. dominion.Card.createCards()Ljava/util/List;: Line 62
   * Goal 30. dominion.Card.createCards()Ljava/util/List;: Line 64
   * Goal 31. dominion.Card.createCards()Ljava/util/List;: Line 65
   * Goal 32. dominion.Card.createCards()Ljava/util/List;: Line 66
   * Goal 33. dominion.Card.createCards()Ljava/util/List;: Line 67
   * Goal 34. dominion.Card.createCards()Ljava/util/List;: Line 68
   * Goal 35. dominion.Card.createCards()Ljava/util/List;: Line 69
   * Goal 36. dominion.Card.createCards()Ljava/util/List;: Line 70
   * Goal 37. dominion.Card.createCards()Ljava/util/List;: Line 71
   * Goal 38. dominion.Card.createCards()Ljava/util/List;: Line 73
   * Goal 39. dominion.Card.createCards()Ljava/util/List;: Line 74
   * Goal 40. dominion.Card.createCards()Ljava/util/List;: Line 75
   * Goal 41. dominion.Card.createCards()Ljava/util/List;: Line 76
   * Goal 42. dominion.Card.createCards()Ljava/util/List;: Line 77
   * Goal 43. dominion.Card.createCards()Ljava/util/List;: Line 78
   * Goal 44. dominion.Card.createCards()Ljava/util/List;: Line 79
   * Goal 45. dominion.Card.createCards()Ljava/util/List;: Line 80
   * Goal 46. dominion.Card.createCards()Ljava/util/List;: Line 81
   * Goal 47. dominion.Card.createCards()Ljava/util/List;: Line 82
   * Goal 48. dominion.Card.createCards()Ljava/util/List;: Line 83
   * Goal 49. dominion.Card.createCards()Ljava/util/List;: Line 84
   * Goal 50. dominion.Card.createCards()Ljava/util/List;: Line 85
   * Goal 51. dominion.Card.createCards()Ljava/util/List;: Line 86
   * Goal 52. dominion.Card.createCards()Ljava/util/List;: Line 87
   * Goal 53. dominion.Card.createCards()Ljava/util/List;: Line 88
   * Goal 54. dominion.Card.createCards()Ljava/util/List;: Line 89
   * Goal 55. dominion.Card.createCards()Ljava/util/List;: Line 90
   * Goal 56. dominion.Card.createCards()Ljava/util/List;: Line 91
   * Goal 57. dominion.Card.createCards()Ljava/util/List;: Line 92
   * Goal 58. dominion.Card.createCards()Ljava/util/List;: Line 93
   * Goal 59. dominion.Card.createCards()Ljava/util/List;: Line 94
   * Goal 60. dominion.Card.createCards()Ljava/util/List;: Line 95
   * Goal 61. dominion.Card.createCards()Ljava/util/List;: Line 96
   * Goal 62. dominion.Card.createCards()Ljava/util/List;: Line 97
   * Goal 63. dominion.Card.createCards()Ljava/util/List;: Line 98
   * Goal 64. dominion.Card.createCards()Ljava/util/List;: Line 99
   * Goal 65. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 103
   * Goal 66. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 104
   * Goal 67. dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;: Line 105
   * Goal 68. dominion.Card.score(Ldominion/Player;)I: Line 51
   * Goal 69. [METHOD] dominion.Card.createCards()Ljava/util/List;
   * Goal 70. [METHOD] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 71. [METHOD] dominion.Card.score(Ldominion/Player;)I
   * Goal 72. [METHODNOEX] dominion.Card.createCards()Ljava/util/List;
   * Goal 73. [METHODNOEX] dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;
   * Goal 74. [METHODNOEX] dominion.Card.score(Ldominion/Player;)I
   * Goal 75. Weak Mutation 0: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> score
   * Goal 76. Weak Mutation 1: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - ReplaceVariable cost -> treasureValue
   * Goal 77. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 78. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 79. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 80. Weak Mutation 5: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> cost
   * Goal 81. Weak Mutation 6: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - ReplaceVariable score -> treasureValue
   * Goal 82. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 83. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 84. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 85. Weak Mutation 10: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> score
   * Goal 86. Weak Mutation 11: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - ReplaceVariable treasureValue -> cost
   * Goal 87. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 88. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 89. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 90. Weak Mutation 21: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 22: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp +1
   * Goal 92. Weak Mutation 23: dominion.Card.score(Ldominion/Player;)I:51 - InsertUnaryOp -1
   * Goal 93. Weak Mutation 24: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 0
   * Goal 94. Weak Mutation 25: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 1
   * Goal 95. Weak Mutation 26: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> -1
   * Goal 96. Weak Mutation 27: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 5
   * Goal 97. Weak Mutation 28: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 6 -> 7
   * Goal 98. Weak Mutation 29: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 0 -> 1
   * Goal 99. Weak Mutation 30: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 0
   * Goal 100. Weak Mutation 31: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 1
   * Goal 101. Weak Mutation 32: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> -1
   * Goal 102. Weak Mutation 33: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 2
   * Goal 103. Weak Mutation 34: dominion.Card.createCards()Ljava/util/List;:57 - ReplaceConstant - 3 -> 4
   * Goal 104. Weak Mutation 35: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 0
   * Goal 105. Weak Mutation 36: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 1
   * Goal 106. Weak Mutation 37: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> -1
   * Goal 107. Weak Mutation 38: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 2
   * Goal 108. Weak Mutation 39: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 3 -> 4
   * Goal 109. Weak Mutation 40: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 0 -> 1
   * Goal 110. Weak Mutation 41: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 0
   * Goal 111. Weak Mutation 42: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 1
   * Goal 112. Weak Mutation 43: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> -1
   * Goal 113. Weak Mutation 44: dominion.Card.createCards()Ljava/util/List;:59 - ReplaceConstant - 2 -> 3
   * Goal 114. Weak Mutation 45: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 115. Weak Mutation 46: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 0 -> 1
   * Goal 116. Weak Mutation 47: dominion.Card.createCards()Ljava/util/List;:61 - ReplaceConstant - 1 -> 0
   * Goal 117. Weak Mutation 48: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 0
   * Goal 118. Weak Mutation 49: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 1
   * Goal 119. Weak Mutation 50: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> -1
   * Goal 120. Weak Mutation 51: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 7
   * Goal 121. Weak Mutation 52: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 8 -> 9
   * Goal 122. Weak Mutation 53: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 0
   * Goal 123. Weak Mutation 54: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 1
   * Goal 124. Weak Mutation 55: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> -1
   * Goal 125. Weak Mutation 56: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 5
   * Goal 126. Weak Mutation 57: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 6 -> 7
   * Goal 127. Weak Mutation 58: dominion.Card.createCards()Ljava/util/List;:64 - ReplaceConstant - 0 -> 1
   * Goal 128. Weak Mutation 59: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 0
   * Goal 129. Weak Mutation 60: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 1
   * Goal 130. Weak Mutation 61: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> -1
   * Goal 131. Weak Mutation 62: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 4
   * Goal 132. Weak Mutation 63: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 5 -> 6
   * Goal 133. Weak Mutation 64: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 0
   * Goal 134. Weak Mutation 65: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 1
   * Goal 135. Weak Mutation 66: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> -1
   * Goal 136. Weak Mutation 67: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 2
   * Goal 137. Weak Mutation 68: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 3 -> 4
   * Goal 138. Weak Mutation 69: dominion.Card.createCards()Ljava/util/List;:66 - ReplaceConstant - 0 -> 1
   * Goal 139. Weak Mutation 70: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 0
   * Goal 140. Weak Mutation 71: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 1
   * Goal 141. Weak Mutation 72: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> -1
   * Goal 142. Weak Mutation 73: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 2 -> 3
   * Goal 143. Weak Mutation 74: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 1 -> 0
   * Goal 144. Weak Mutation 75: dominion.Card.createCards()Ljava/util/List;:68 - ReplaceConstant - 0 -> 1
   * Goal 145. Weak Mutation 76: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 146. Weak Mutation 77: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 0
   * Goal 147. Weak Mutation 78: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> 1
   * Goal 148. Weak Mutation 79: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - -1 -> -2
   * Goal 149. Weak Mutation 80: dominion.Card.createCards()Ljava/util/List;:70 - ReplaceConstant - 0 -> 1
   * Goal 150. Weak Mutation 81: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceConstant - 0 -> 1
   * Goal 151. Weak Mutation 82: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp Negation of i
   * Goal 152. Weak Mutation 83: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC 1 i
   * Goal 153. Weak Mutation 84: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - InsertUnaryOp IINC -1 i
   * Goal 154. Weak Mutation 85: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:103 - ReplaceComparisonOperator >= -> -1
   * Goal 155. Weak Mutation 88: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp Negation of i
   * Goal 156. Weak Mutation 89: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC 1 i
   * Goal 157. Weak Mutation 90: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - InsertUnaryOp IINC -1 i
   * Goal 158. Weak Mutation 91: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:104 - ReplaceComparisonOperator == -> !=
   * Goal 159. Weak Mutation 92: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp Negation of i
   * Goal 160. Weak Mutation 93: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC 1 i
   * Goal 161. Weak Mutation 94: dominion.Card.getCard(Ljava/util/List;Ldominion/Card$CardName;)Ldominion/Card;:105 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "P");
  }

  //Test case number: 21
  /*
   * 52 covered goals:
   * Goal 1. dominion.Card.getCardName()Ldominion/Card$CardName;: root-Branch
   * Goal 2. dominion.Card.toString()Ljava/lang/String;: root-Branch
   * Goal 3. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch
   * Goal 4. dominion.Card.getType()Ldominion/Card$Type;: root-Branch
   * Goal 5. Branch dominion.Card.toString()Ljava/lang/String;: root-Branch in context: dominion.Card:toString()Ljava/lang/String;
   * Goal 6. Branch dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: root-Branch in context: 
   * Goal 7. [Output]: dominion.Card.toString()Ljava/lang/String;:NonEmptyString
   * Goal 8. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 32
   * Goal 9. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 33
   * Goal 10. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 34
   * Goal 11. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 35
   * Goal 12. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 36
   * Goal 13. dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V: Line 37
   * Goal 14. dominion.Card.getCardName()Ldominion/Card$CardName;: Line 44
   * Goal 15. dominion.Card.getType()Ldominion/Card$Type;: Line 40
   * Goal 16. dominion.Card.toString()Ljava/lang/String;: Line 120
   * Goal 17. dominion.Card.toString()Ljava/lang/String;: Line 122
   * Goal 18. dominion.Card.toString()Ljava/lang/String;: Line 123
   * Goal 19. dominion.Card.toString()Ljava/lang/String;: Line 124
   * Goal 20. dominion.Card.toString()Ljava/lang/String;: Line 125
   * Goal 21. dominion.Card.toString()Ljava/lang/String;: Line 126
   * Goal 22. dominion.Card.toString()Ljava/lang/String;: Line 127
   * Goal 23. [METHOD] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 24. [METHOD] dominion.Card.toString()Ljava/lang/String;
   * Goal 25. [METHODNOEX] dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V
   * Goal 26. [METHODNOEX] dominion.Card.toString()Ljava/lang/String;
   * Goal 27. Weak Mutation 2: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp Negation of cost
   * Goal 28. Weak Mutation 3: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC 1 cost
   * Goal 29. Weak Mutation 4: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:32 - InsertUnaryOp IINC -1 cost
   * Goal 30. Weak Mutation 7: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp Negation of score
   * Goal 31. Weak Mutation 8: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC 1 score
   * Goal 32. Weak Mutation 9: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:33 - InsertUnaryOp IINC -1 score
   * Goal 33. Weak Mutation 12: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp Negation of treasureValue
   * Goal 34. Weak Mutation 13: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC 1 treasureValue
   * Goal 35. Weak Mutation 14: dominion.Card.<init>(Ldominion/Card$CardName;Ldominion/Card$Type;III)V:34 - InsertUnaryOp IINC -1 treasureValue
   * Goal 36. Weak Mutation 97: dominion.Card.toString()Ljava/lang/String;:122 - ReplaceConstant -   -> 
   * Goal 37. Weak Mutation 98: dominion.Card.toString()Ljava/lang/String;:123 - ReplaceConstant - - -> 
   * Goal 38. Weak Mutation 99: dominion.Card.toString()Ljava/lang/String;:123 - ReplaceConstant -   -> 
   * Goal 39. Weak Mutation 100: dominion.Card.toString()Ljava/lang/String;:124 - ReplaceConstant - 	Cost:  -> 
   * Goal 40. Weak Mutation 101: dominion.Card.toString()Ljava/lang/String;:124 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 102: dominion.Card.toString()Ljava/lang/String;:124 - InsertUnaryOp +1
   * Goal 42. Weak Mutation 103: dominion.Card.toString()Ljava/lang/String;:124 - InsertUnaryOp -1
   * Goal 43. Weak Mutation 104: dominion.Card.toString()Ljava/lang/String;:124 - ReplaceConstant -   -> 
   * Goal 44. Weak Mutation 105: dominion.Card.toString()Ljava/lang/String;:125 - ReplaceConstant - 	Score:  -> 
   * Goal 45. Weak Mutation 106: dominion.Card.toString()Ljava/lang/String;:125 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 107: dominion.Card.toString()Ljava/lang/String;:125 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 108: dominion.Card.toString()Ljava/lang/String;:125 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 109: dominion.Card.toString()Ljava/lang/String;:125 - ReplaceConstant - 	 -> 
   * Goal 49. Weak Mutation 110: dominion.Card.toString()Ljava/lang/String;:126 - ReplaceConstant - Value:  -> 
   * Goal 50. Weak Mutation 111: dominion.Card.toString()Ljava/lang/String;:126 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 112: dominion.Card.toString()Ljava/lang/String;:126 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 113: dominion.Card.toString()Ljava/lang/String;:126 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, 5, 5, 5);
      String string0 = card0.toString();
      assertEquals(" Curse-ACTION \tCost: 5 \tScore: 5\tValue: 5", string0);
  }
}
