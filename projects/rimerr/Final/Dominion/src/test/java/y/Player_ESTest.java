/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 00:53:11 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.GameState;
import dominion.Player;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 54 covered goals:
   * Goal 1. dominion.Player.toString()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.toString()Ljava/lang/String;: root-Branch in context: dominion.Player:toString()Ljava/lang/String;
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. [Output]: dominion.Player.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.toString()Ljava/lang/String;: Line 167
   * Goal 15. dominion.Player.toString()Ljava/lang/String;: Line 169
   * Goal 16. dominion.Player.toString()Ljava/lang/String;: Line 170
   * Goal 17. dominion.Player.toString()Ljava/lang/String;: Line 172
   * Goal 18. dominion.Player.toString()Ljava/lang/String;: Line 173
   * Goal 19. dominion.Player.toString()Ljava/lang/String;: Line 174
   * Goal 20. dominion.Player.toString()Ljava/lang/String;: Line 175
   * Goal 21. dominion.Player.toString()Ljava/lang/String;: Line 176
   * Goal 22. dominion.Player.toString()Ljava/lang/String;: Line 177
   * Goal 23. dominion.Player.toString()Ljava/lang/String;: Line 178
   * Goal 24. dominion.Player.toString()Ljava/lang/String;: Line 179
   * Goal 25. dominion.Player.toString()Ljava/lang/String;: Line 181
   * Goal 26. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 27. [METHOD] dominion.Player.toString()Ljava/lang/String;
   * Goal 28. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 29. [METHODNOEX] dominion.Player.toString()Ljava/lang/String;
   * Goal 30. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 32. Weak Mutation 209: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 33. Weak Mutation 210: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 34. Weak Mutation 211: dominion.Player.toString()Ljava/lang/String;:170 - ReplaceConstant -  --- --------------------------- ---  -> 
   * Goal 35. Weak Mutation 212: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceConstant - Hand:  -> 
   * Goal 36. Weak Mutation 213: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> discard
   * Goal 37. Weak Mutation 214: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> playedCards
   * Goal 38. Weak Mutation 215: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceConstant - Discard:  -> 
   * Goal 39. Weak Mutation 216: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> playedCards
   * Goal 40. Weak Mutation 217: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> hand
   * Goal 41. Weak Mutation 218: dominion.Player.toString()Ljava/lang/String;:174 - ReplaceConstant - Deck:  -> 
   * Goal 42. Weak Mutation 219: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceConstant - Played Cards:  -> 
   * Goal 43. Weak Mutation 220: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> discard
   * Goal 44. Weak Mutation 221: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> hand
   * Goal 45. Weak Mutation 222: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceConstant - numActions:  -> 
   * Goal 46. Weak Mutation 225: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceVariable numActions -> numBuys
   * Goal 47. Weak Mutation 226: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 227: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 228: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 229: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceConstant - coins:  -> 
   * Goal 51. Weak Mutation 232: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceVariable coins -> numBuys
   * Goal 52. Weak Mutation 233: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 234: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp +1
   * Goal 54. Weak Mutation 235: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, "~Em}edq!j:l");
      player0.numBuys = 2104;
      String string0 = player0.toString();
      assertEquals(" --- ~Em}edq!j:l ---  --- --------------------------- --- Hand: []Discard: []Deck: []Played Cards: []numActions: 0coins: 0numBuys: 2104\n", string0);
  }

  //Test case number: 1
  /*
   * 57 covered goals:
   * Goal 1. dominion.Player.toString()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.toString()Ljava/lang/String;: root-Branch in context: dominion.Player:toString()Ljava/lang/String;
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. [Output]: dominion.Player.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.toString()Ljava/lang/String;: Line 167
   * Goal 15. dominion.Player.toString()Ljava/lang/String;: Line 169
   * Goal 16. dominion.Player.toString()Ljava/lang/String;: Line 170
   * Goal 17. dominion.Player.toString()Ljava/lang/String;: Line 172
   * Goal 18. dominion.Player.toString()Ljava/lang/String;: Line 173
   * Goal 19. dominion.Player.toString()Ljava/lang/String;: Line 174
   * Goal 20. dominion.Player.toString()Ljava/lang/String;: Line 175
   * Goal 21. dominion.Player.toString()Ljava/lang/String;: Line 176
   * Goal 22. dominion.Player.toString()Ljava/lang/String;: Line 177
   * Goal 23. dominion.Player.toString()Ljava/lang/String;: Line 178
   * Goal 24. dominion.Player.toString()Ljava/lang/String;: Line 179
   * Goal 25. dominion.Player.toString()Ljava/lang/String;: Line 181
   * Goal 26. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 27. [METHOD] dominion.Player.toString()Ljava/lang/String;
   * Goal 28. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 29. [METHODNOEX] dominion.Player.toString()Ljava/lang/String;
   * Goal 30. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 32. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 33. Weak Mutation 209: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 34. Weak Mutation 210: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 35. Weak Mutation 211: dominion.Player.toString()Ljava/lang/String;:170 - ReplaceConstant -  --- --------------------------- ---  -> 
   * Goal 36. Weak Mutation 212: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceConstant - Hand:  -> 
   * Goal 37. Weak Mutation 213: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> discard
   * Goal 38. Weak Mutation 214: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> playedCards
   * Goal 39. Weak Mutation 215: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceConstant - Discard:  -> 
   * Goal 40. Weak Mutation 216: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> playedCards
   * Goal 41. Weak Mutation 217: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> hand
   * Goal 42. Weak Mutation 218: dominion.Player.toString()Ljava/lang/String;:174 - ReplaceConstant - Deck:  -> 
   * Goal 43. Weak Mutation 219: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceConstant - Played Cards:  -> 
   * Goal 44. Weak Mutation 220: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> discard
   * Goal 45. Weak Mutation 221: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> hand
   * Goal 46. Weak Mutation 222: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceConstant - numActions:  -> 
   * Goal 47. Weak Mutation 224: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceVariable numActions -> coins
   * Goal 48. Weak Mutation 226: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 227: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp +1
   * Goal 50. Weak Mutation 228: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp -1
   * Goal 51. Weak Mutation 229: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceConstant - coins:  -> 
   * Goal 52. Weak Mutation 230: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceVariable coins -> score
   * Goal 53. Weak Mutation 231: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceVariable coins -> numActions
   * Goal 54. Weak Mutation 232: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceVariable coins -> numBuys
   * Goal 55. Weak Mutation 233: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp Negation
   * Goal 56. Weak Mutation 234: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp +1
   * Goal 57. Weak Mutation 235: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeSet<Card> treeSet0 = new TreeSet<Card>();
      Vector<Card> vector0 = new Vector<Card>((Collection<? extends Card>) treeSet0);
      GameState gameState0 = new GameState((List<Card>) vector0);
      Player player0 = new Player(gameState0, "Discard: ");
      player0.coins = 10;
      String string0 = player0.toString();
      assertEquals(" --- Discard:  ---  --- --------------------------- --- Hand: []Discard: []Deck: []Played Cards: []numActions: 0coins: 10numBuys: 0\n", string0);
  }

  //Test case number: 2
  /*
   * 105 covered goals:
   * Goal 1. dominion.Player.toString()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true
   * Goal 4. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true
   * Goal 5. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - false
   * Goal 6. dominion.Player.scoreFor()I: I69 Branch 7 IF_ACMPNE L100 - true
   * Goal 7. dominion.Player.scoreFor()I: I69 Branch 7 IF_ACMPNE L100 - false
   * Goal 8. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true
   * Goal 9. dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false
   * Goal 10. Branch dominion.Player.toString()Ljava/lang/String;: root-Branch in context: dominion.Player:toString()Ljava/lang/String;
   * Goal 11. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 12. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true in context: 
   * Goal 13. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - false in context: 
   * Goal 14. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true in context: 
   * Goal 15. Branch dominion.Player.scoreFor()I: I69 Branch 7 IF_ACMPNE L100 - false in context: 
   * Goal 16. Branch dominion.Player.scoreFor()I: I69 Branch 7 IF_ACMPNE L100 - true in context: 
   * Goal 17. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true in context: 
   * Goal 18. Branch dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false in context: 
   * Goal 19. [Output]: dominion.Player.scoreFor()I:Positive
   * Goal 20. [Output]: dominion.Player.toString()Ljava/lang/String;:NonEmptyString
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 24. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 25. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 26. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 27. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 28. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 29. dominion.Player.scoreFor()I: Line 89
   * Goal 30. dominion.Player.scoreFor()I: Line 91
   * Goal 31. dominion.Player.scoreFor()I: Line 98
   * Goal 32. dominion.Player.scoreFor()I: Line 99
   * Goal 33. dominion.Player.scoreFor()I: Line 100
   * Goal 34. dominion.Player.scoreFor()I: Line 101
   * Goal 35. dominion.Player.scoreFor()I: Line 103
   * Goal 36. dominion.Player.scoreFor()I: Line 105
   * Goal 37. dominion.Player.scoreFor()I: Line 111
   * Goal 38. dominion.Player.scoreFor()I: Line 112
   * Goal 39. dominion.Player.scoreFor()I: Line 113
   * Goal 40. dominion.Player.scoreFor()I: Line 115
   * Goal 41. dominion.Player.toString()Ljava/lang/String;: Line 167
   * Goal 42. dominion.Player.toString()Ljava/lang/String;: Line 169
   * Goal 43. dominion.Player.toString()Ljava/lang/String;: Line 170
   * Goal 44. dominion.Player.toString()Ljava/lang/String;: Line 172
   * Goal 45. dominion.Player.toString()Ljava/lang/String;: Line 173
   * Goal 46. dominion.Player.toString()Ljava/lang/String;: Line 174
   * Goal 47. dominion.Player.toString()Ljava/lang/String;: Line 175
   * Goal 48. dominion.Player.toString()Ljava/lang/String;: Line 176
   * Goal 49. dominion.Player.toString()Ljava/lang/String;: Line 177
   * Goal 50. dominion.Player.toString()Ljava/lang/String;: Line 178
   * Goal 51. dominion.Player.toString()Ljava/lang/String;: Line 179
   * Goal 52. dominion.Player.toString()Ljava/lang/String;: Line 181
   * Goal 53. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 54. [METHOD] dominion.Player.scoreFor()I
   * Goal 55. [METHOD] dominion.Player.toString()Ljava/lang/String;
   * Goal 56. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 57. [METHODNOEX] dominion.Player.scoreFor()I
   * Goal 58. [METHODNOEX] dominion.Player.toString()Ljava/lang/String;
   * Goal 59. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 61. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 62. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 65: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> discard
   * Goal 64. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 65. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 79: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> playedCards
   * Goal 67. Weak Mutation 80: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> hand
   * Goal 68. Weak Mutation 81: dominion.Player.scoreFor()I:98 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 82: dominion.Player.scoreFor()I:99 - ReplaceVariable score -> numActions
   * Goal 70. Weak Mutation 83: dominion.Player.scoreFor()I:99 - ReplaceVariable score -> coins
   * Goal 71. Weak Mutation 84: dominion.Player.scoreFor()I:99 - ReplaceVariable score -> numBuys
   * Goal 72. Weak Mutation 85: dominion.Player.scoreFor()I:99 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 86: dominion.Player.scoreFor()I:99 - InsertUnaryOp +1
   * Goal 74. Weak Mutation 87: dominion.Player.scoreFor()I:99 - InsertUnaryOp -1
   * Goal 75. Weak Mutation 88: dominion.Player.scoreFor()I:99 - ReplaceArithmeticOperator + -> %
   * Goal 76. Weak Mutation 89: dominion.Player.scoreFor()I:99 - ReplaceArithmeticOperator + -> -
   * Goal 77. Weak Mutation 90: dominion.Player.scoreFor()I:99 - ReplaceArithmeticOperator + -> *
   * Goal 78. Weak Mutation 91: dominion.Player.scoreFor()I:99 - ReplaceArithmeticOperator + -> /
   * Goal 79. Weak Mutation 92: dominion.Player.scoreFor()I:100 - ReplaceComparisonOperator != -> ==
   * Goal 80. Weak Mutation 93: dominion.Player.scoreFor()I:105 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 105: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> discard
   * Goal 82. Weak Mutation 106: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> playedCards
   * Goal 83. Weak Mutation 209: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 84. Weak Mutation 210: dominion.Player.toString()Ljava/lang/String;:169 - ReplaceConstant -  ---  -> 
   * Goal 85. Weak Mutation 211: dominion.Player.toString()Ljava/lang/String;:170 - ReplaceConstant -  --- --------------------------- ---  -> 
   * Goal 86. Weak Mutation 212: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceConstant - Hand:  -> 
   * Goal 87. Weak Mutation 213: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> discard
   * Goal 88. Weak Mutation 214: dominion.Player.toString()Ljava/lang/String;:172 - ReplaceVariable hand -> playedCards
   * Goal 89. Weak Mutation 215: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceConstant - Discard:  -> 
   * Goal 90. Weak Mutation 216: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> playedCards
   * Goal 91. Weak Mutation 217: dominion.Player.toString()Ljava/lang/String;:173 - ReplaceVariable discard -> hand
   * Goal 92. Weak Mutation 218: dominion.Player.toString()Ljava/lang/String;:174 - ReplaceConstant - Deck:  -> 
   * Goal 93. Weak Mutation 219: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceConstant - Played Cards:  -> 
   * Goal 94. Weak Mutation 220: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> discard
   * Goal 95. Weak Mutation 221: dominion.Player.toString()Ljava/lang/String;:175 - ReplaceVariable playedCards -> hand
   * Goal 96. Weak Mutation 222: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceConstant - numActions:  -> 
   * Goal 97. Weak Mutation 223: dominion.Player.toString()Ljava/lang/String;:176 - ReplaceVariable numActions -> score
   * Goal 98. Weak Mutation 226: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp Negation
   * Goal 99. Weak Mutation 227: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp +1
   * Goal 100. Weak Mutation 228: dominion.Player.toString()Ljava/lang/String;:176 - InsertUnaryOp -1
   * Goal 101. Weak Mutation 229: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceConstant - coins:  -> 
   * Goal 102. Weak Mutation 230: dominion.Player.toString()Ljava/lang/String;:177 - ReplaceVariable coins -> score
   * Goal 103. Weak Mutation 233: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp Negation
   * Goal 104. Weak Mutation 234: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp +1
   * Goal 105. Weak Mutation 235: dominion.Player.toString()Ljava/lang/String;:177 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.discard = list0;
      player0.scoreFor();
      String string0 = player0.toString();
      assertNotNull(string0);
  }

  //Test case number: 3
  /*
   * 67 covered goals:
   * Goal 1. dominion.Player.discard(Ldominion/Card;)V: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 5. dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - true
   * Goal 6. dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - false
   * Goal 7. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 8. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 9. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 10. Branch dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - true in context: 
   * Goal 11. Branch dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - false in context: 
   * Goal 12. [Output]: dominion.Player.drawCard()Ldominion/Card;:Null
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 21. dominion.Player.discard(Ldominion/Card;)V: Line 77
   * Goal 22. dominion.Player.discard(Ldominion/Card;)V: Line 78
   * Goal 23. dominion.Player.discard(Ldominion/Card;)V: Line 80
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 25. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 26. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 27. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 28. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 29. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 30. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 31. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 32. dominion.Player.endTurn()V: Line 152
   * Goal 33. dominion.Player.endTurn()V: Line 153
   * Goal 34. dominion.Player.endTurn()V: Line 154
   * Goal 35. dominion.Player.endTurn()V: Line 156
   * Goal 36. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 37. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 38. [METHOD] dominion.Player.endTurn()V
   * Goal 39. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 40. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 41. [METHODNOEX] dominion.Player.endTurn()V
   * Goal 42. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 44. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 45. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 47. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 48. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 49. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 50. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 51. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 52. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 53. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 54. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 55. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 56. Weak Mutation 49: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> discard
   * Goal 57. Weak Mutation 50: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> playedCards
   * Goal 58. Weak Mutation 51: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> playedCards
   * Goal 59. Weak Mutation 52: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> hand
   * Goal 60. Weak Mutation 196: dominion.Player.endTurn()V:152 - ReplaceConstant - endturn -> 
   * Goal 61. Weak Mutation 197: dominion.Player.endTurn()V:153 - ReplaceVariable hand -> discard
   * Goal 62. Weak Mutation 198: dominion.Player.endTurn()V:153 - ReplaceVariable hand -> playedCards
   * Goal 63. Weak Mutation 199: dominion.Player.endTurn()V:153 - ReplaceComparisonOperator <= -> -1
   * Goal 64. Weak Mutation 201: dominion.Player.endTurn()V:153 - ReplaceComparisonOperator <= -> <
   * Goal 65. Weak Mutation 202: dominion.Player.endTurn()V:154 - ReplaceVariable hand -> discard
   * Goal 66. Weak Mutation 203: dominion.Player.endTurn()V:154 - ReplaceVariable hand -> playedCards
   * Goal 67. Weak Mutation 204: dominion.Player.endTurn()V:154 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "Kdl=");
      player0.drawCard();
      player0.endTurn();
      assertEquals("Kdl=", player0.getName());
  }

  //Test case number: 4
  /*
   * 72 covered goals:
   * Goal 1. dominion.Player.gain(Ldominion/Card;)Z: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false
   * Goal 4. dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - false
   * Goal 5. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 6. Branch dominion.Player.gain(Ldominion/Card;)Z: root-Branch in context: 
   * Goal 7. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 8. Branch dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 9. [Output]: dominion.Player.buyCard(Ldominion/Card;)I:Positive
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 18. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 19. dominion.Player.buyCard(Ldominion/Card;)I: Line 141
   * Goal 20. dominion.Player.buyCard(Ldominion/Card;)I: Line 142
   * Goal 21. dominion.Player.buyCard(Ldominion/Card;)I: Line 143
   * Goal 22. dominion.Player.buyCard(Ldominion/Card;)I: Line 144
   * Goal 23. dominion.Player.buyCard(Ldominion/Card;)I: Line 145
   * Goal 24. dominion.Player.buyCard(Ldominion/Card;)I: Line 146
   * Goal 25. dominion.Player.gain(Ldominion/Card;)Z: Line 72
   * Goal 26. dominion.Player.gain(Ldominion/Card;)Z: Line 73
   * Goal 27. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 28. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 29. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 30. [METHODNOEX] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 31. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 33. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 34. Weak Mutation 46: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> playedCards
   * Goal 35. Weak Mutation 47: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> hand
   * Goal 36. Weak Mutation 48: dominion.Player.gain(Ldominion/Card;)Z:73 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 154: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> score
   * Goal 38. Weak Mutation 155: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> numActions
   * Goal 39. Weak Mutation 156: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> coins
   * Goal 40. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 42. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 43. Weak Mutation 160: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> -1
   * Goal 44. Weak Mutation 163: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> score
   * Goal 45. Weak Mutation 164: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> numActions
   * Goal 46. Weak Mutation 165: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> numBuys
   * Goal 47. Weak Mutation 166: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 167: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 168: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 171: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceComparisonOperator > -> >=
   * Goal 51. Weak Mutation 172: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> score
   * Goal 52. Weak Mutation 173: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> numActions
   * Goal 53. Weak Mutation 174: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> numBuys
   * Goal 54. Weak Mutation 175: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 176: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 177: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 178: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> +
   * Goal 58. Weak Mutation 180: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 181: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 182: dominion.Player.buyCard(Ldominion/Card;)I:144 - ReplaceConstant - BUY:  -> 
   * Goal 61. Weak Mutation 183: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> score
   * Goal 62. Weak Mutation 184: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> numActions
   * Goal 63. Weak Mutation 185: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> coins
   * Goal 64. Weak Mutation 186: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 187: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp +1
   * Goal 66. Weak Mutation 188: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp -1
   * Goal 67. Weak Mutation 189: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 190: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> +
   * Goal 69. Weak Mutation 191: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> %
   * Goal 70. Weak Mutation 192: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> *
   * Goal 71. Weak Mutation 193: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> /
   * Goal 72. Weak Mutation 194: dominion.Player.buyCard(Ldominion/Card;)I:146 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "7.xlS]8eg&:");
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.Type card_Type0 = Card.Type.ACTION;
      player0.coins = (-404);
      player0.numBuys = 3662;
      Card card0 = new Card(card_CardName0, card_Type0, (-404), (-404), (-404));
      int int0 = player0.buyCard(card0);
      assertEquals(1, int0);
  }

  //Test case number: 5
  /*
   * 73 covered goals:
   * Goal 1. dominion.Player.gain(Ldominion/Card;)Z: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false
   * Goal 4. dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - false
   * Goal 5. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 6. Branch dominion.Player.gain(Ldominion/Card;)Z: root-Branch in context: 
   * Goal 7. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 8. Branch dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 9. [Output]: dominion.Player.buyCard(Ldominion/Card;)I:Positive
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 18. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 19. dominion.Player.buyCard(Ldominion/Card;)I: Line 141
   * Goal 20. dominion.Player.buyCard(Ldominion/Card;)I: Line 142
   * Goal 21. dominion.Player.buyCard(Ldominion/Card;)I: Line 143
   * Goal 22. dominion.Player.buyCard(Ldominion/Card;)I: Line 144
   * Goal 23. dominion.Player.buyCard(Ldominion/Card;)I: Line 145
   * Goal 24. dominion.Player.buyCard(Ldominion/Card;)I: Line 146
   * Goal 25. dominion.Player.gain(Ldominion/Card;)Z: Line 72
   * Goal 26. dominion.Player.gain(Ldominion/Card;)Z: Line 73
   * Goal 27. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 28. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 29. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 30. [METHODNOEX] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 31. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 33. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 34. Weak Mutation 46: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> playedCards
   * Goal 35. Weak Mutation 47: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> hand
   * Goal 36. Weak Mutation 48: dominion.Player.gain(Ldominion/Card;)Z:73 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 154: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> score
   * Goal 38. Weak Mutation 155: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> numActions
   * Goal 39. Weak Mutation 156: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> coins
   * Goal 40. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 42. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 43. Weak Mutation 160: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> -1
   * Goal 44. Weak Mutation 163: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> score
   * Goal 45. Weak Mutation 164: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> numActions
   * Goal 46. Weak Mutation 165: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> numBuys
   * Goal 47. Weak Mutation 166: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 167: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 168: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 169: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceComparisonOperator > -> !=
   * Goal 51. Weak Mutation 172: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> score
   * Goal 52. Weak Mutation 173: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> numActions
   * Goal 53. Weak Mutation 174: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceVariable coins -> numBuys
   * Goal 54. Weak Mutation 175: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 176: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 177: dominion.Player.buyCard(Ldominion/Card;)I:143 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 178: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> +
   * Goal 58. Weak Mutation 179: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> %
   * Goal 59. Weak Mutation 180: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> *
   * Goal 60. Weak Mutation 181: dominion.Player.buyCard(Ldominion/Card;)I:143 - ReplaceArithmeticOperator - -> /
   * Goal 61. Weak Mutation 182: dominion.Player.buyCard(Ldominion/Card;)I:144 - ReplaceConstant - BUY:  -> 
   * Goal 62. Weak Mutation 183: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> score
   * Goal 63. Weak Mutation 184: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> numActions
   * Goal 64. Weak Mutation 185: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceVariable numBuys -> coins
   * Goal 65. Weak Mutation 186: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 187: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp +1
   * Goal 67. Weak Mutation 188: dominion.Player.buyCard(Ldominion/Card;)I:145 - InsertUnaryOp -1
   * Goal 68. Weak Mutation 189: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 190: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> +
   * Goal 70. Weak Mutation 191: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> %
   * Goal 71. Weak Mutation 192: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> *
   * Goal 72. Weak Mutation 193: dominion.Player.buyCard(Ldominion/Card;)I:145 - ReplaceArithmeticOperator - -> /
   * Goal 73. Weak Mutation 194: dominion.Player.buyCard(Ldominion/Card;)I:146 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "7.xlS]8eg&:");
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.Type card_Type0 = Card.Type.ACTION;
      player0.coins = (-199);
      player0.numBuys = 3662;
      Card card0 = new Card(card_CardName0, card_Type0, (-516), (-516), (-516));
      int int0 = player0.buyCard(card0);
      assertEquals(1, int0);
  }

  //Test case number: 6
  /*
   * 30 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - true
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - true in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 5. [Output]: dominion.Player.buyCard(Ldominion/Card;)I:Zero
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 15. dominion.Player.buyCard(Ldominion/Card;)I: Line 149
   * Goal 16. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 17. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 18. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHODNOEX] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 20. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 22. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 23. Weak Mutation 154: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> score
   * Goal 24. Weak Mutation 155: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> numActions
   * Goal 25. Weak Mutation 156: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> coins
   * Goal 26. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 161: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 195: dominion.Player.buyCard(Ldominion/Card;)I:149 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "Hand: ");
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.VICTORY;
      player0.numBuys = (-2792);
      Card card0 = new Card(card_CardName0, card_Type0, 395, (-2792), 1574);
      int int0 = player0.buyCard(card0);
      assertEquals(0, int0);
  }

  //Test case number: 7
  /*
   * 125 covered goals:
   * Goal 1. dominion.Player.discard(Ldominion/Card;)V: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 5. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 6. dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - true
   * Goal 7. dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - true
   * Goal 8. dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - false
   * Goal 9. dominion.Player.playTreasureCard()V: I38 Branch 13 IFNONNULL L127 - true
   * Goal 10. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 11. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 12. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 13. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 14. Branch dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - true in context: dominion.Player:playTreasureCard()V
   * Goal 15. Branch dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - true in context: dominion.Player:playTreasureCard()V
   * Goal 16. Branch dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - false in context: dominion.Player:playTreasureCard()V
   * Goal 17. Branch dominion.Player.playTreasureCard()V: I38 Branch 13 IFNONNULL L127 - true in context: dominion.Player:playTreasureCard()V
   * Goal 18. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Zero
   * Goal 19. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 24. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 25. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 26. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 27. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 28. dominion.Player.discard(Ldominion/Card;)V: Line 77
   * Goal 29. dominion.Player.discard(Ldominion/Card;)V: Line 78
   * Goal 30. dominion.Player.discard(Ldominion/Card;)V: Line 80
   * Goal 31. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 32. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 33. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 34. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 35. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 36. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 37. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 38. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 39. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 40. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 41. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 42. dominion.Player.playTreasureCard()V: Line 120
   * Goal 43. dominion.Player.playTreasureCard()V: Line 121
   * Goal 44. dominion.Player.playTreasureCard()V: Line 122
   * Goal 45. dominion.Player.playTreasureCard()V: Line 124
   * Goal 46. dominion.Player.playTreasureCard()V: Line 125
   * Goal 47. dominion.Player.playTreasureCard()V: Line 126
   * Goal 48. dominion.Player.playTreasureCard()V: Line 127
   * Goal 49. dominion.Player.playTreasureCard()V: Line 131
   * Goal 50. dominion.Player.playTreasureCard()V: Line 132
   * Goal 51. dominion.Player.playTreasureCard()V: Line 133
   * Goal 52. dominion.Player.playTreasureCard()V: Line 134
   * Goal 53. dominion.Player.playTreasureCard()V: Line 135
   * Goal 54. dominion.Player.playTreasureCard()V: Line 137
   * Goal 55. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 56. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 57. [METHOD] dominion.Player.playTreasureCard()V
   * Goal 58. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 59. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 60. [METHODNOEX] dominion.Player.playTreasureCard()V
   * Goal 61. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 62. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 63. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 64. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 66. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 67. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 68. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 69. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 71. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 72. Weak Mutation 12: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> hand
   * Goal 73. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 74. Weak Mutation 14: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> hand
   * Goal 75. Weak Mutation 17: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> coins
   * Goal 76. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 77. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 78. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 79. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 80. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 81. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 82. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 83. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 84. Weak Mutation 49: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> discard
   * Goal 85. Weak Mutation 50: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> playedCards
   * Goal 86. Weak Mutation 51: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> playedCards
   * Goal 87. Weak Mutation 52: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> hand
   * Goal 88. Weak Mutation 107: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> discard
   * Goal 89. Weak Mutation 108: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> playedCards
   * Goal 90. Weak Mutation 109: dominion.Player.playTreasureCard()V:121 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 110: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> discard
   * Goal 92. Weak Mutation 111: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> playedCards
   * Goal 93. Weak Mutation 112: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> hand
   * Goal 94. Weak Mutation 114: dominion.Player.playTreasureCard()V:122 - ReplaceComparisonOperator != -> <
   * Goal 95. Weak Mutation 116: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> discard
   * Goal 96. Weak Mutation 117: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> playedCards
   * Goal 97. Weak Mutation 118: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> hand
   * Goal 98. Weak Mutation 119: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> score
   * Goal 99. Weak Mutation 120: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> numActions
   * Goal 100. Weak Mutation 121: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> coins
   * Goal 101. Weak Mutation 122: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> numBuys
   * Goal 102. Weak Mutation 123: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp Negation of i
   * Goal 103. Weak Mutation 124: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp IINC 1 i
   * Goal 104. Weak Mutation 125: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp IINC -1 i
   * Goal 105. Weak Mutation 126: dominion.Player.playTreasureCard()V:124 - ReplaceComparisonOperator <= -> -1
   * Goal 106. Weak Mutation 127: dominion.Player.playTreasureCard()V:124 - ReplaceComparisonOperator <= -> <
   * Goal 107. Weak Mutation 129: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> discard
   * Goal 108. Weak Mutation 130: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> playedCards
   * Goal 109. Weak Mutation 131: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> hand
   * Goal 110. Weak Mutation 134: dominion.Player.playTreasureCard()V:125 - ReplaceVariable i -> coins
   * Goal 111. Weak Mutation 136: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp Negation of i
   * Goal 112. Weak Mutation 137: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp IINC 1 i
   * Goal 113. Weak Mutation 138: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp IINC -1 i
   * Goal 114. Weak Mutation 139: dominion.Player.playTreasureCard()V:127 - ReplaceComparisonOperator != null -> = null
   * Goal 115. Weak Mutation 141: dominion.Player.playTreasureCard()V:131 - ReplaceConstant - SPEND:  -> 
   * Goal 116. Weak Mutation 142: dominion.Player.playTreasureCard()V:132 - ReplaceVariable playedCards -> discard
   * Goal 117. Weak Mutation 143: dominion.Player.playTreasureCard()V:132 - ReplaceVariable playedCards -> hand
   * Goal 118. Weak Mutation 144: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> score
   * Goal 119. Weak Mutation 145: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> numActions
   * Goal 120. Weak Mutation 146: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> numBuys
   * Goal 121. Weak Mutation 147: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp Negation
   * Goal 122. Weak Mutation 148: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp +1
   * Goal 123. Weak Mutation 149: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp -1
   * Goal 124. Weak Mutation 150: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> %
   * Goal 125. Weak Mutation 153: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Card.CardName card_CardName0 = Card.CardName.GreatHall;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, (-1477), 0);
      stack0.add(card0);
      Player player0 = new Player(gameState0, "");
      player0.coins = (-1477);
      player0.hand = (List<Card>) stack0;
      player0.playTreasureCard();
      // Undeclared exception!
      try { 
        player0.drawCard();
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ComparableTimSort", e);
      }
  }

  //Test case number: 8
  /*
   * 80 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 5. dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false
   * Goal 6. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 7. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 8. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 9. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 10. Branch dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false in context: 
   * Goal 11. initializePlayerTurn()V_java.lang.NullPointerException_IMPLICIT
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 20. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 21. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 22. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 23. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 25. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 26. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 27. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 28. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 29. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 30. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 31. dominion.Player.initializePlayerTurn()V: Line 63
   * Goal 32. dominion.Player.initializePlayerTurn()V: Line 64
   * Goal 33. dominion.Player.initializePlayerTurn()V: Line 65
   * Goal 34. dominion.Player.initializePlayerTurn()V: Line 66
   * Goal 35. dominion.Player.initializePlayerTurn()V: Line 67
   * Goal 36. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 37. [METHOD] dominion.Player.initializePlayerTurn()V
   * Goal 38. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 39. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 41. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 42. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 44. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 45. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 46. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 47. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 48. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 49. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 50. Weak Mutation 12: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> hand
   * Goal 51. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 52. Weak Mutation 14: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> hand
   * Goal 53. Weak Mutation 15: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> score
   * Goal 54. Weak Mutation 16: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numActions
   * Goal 55. Weak Mutation 18: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numBuys
   * Goal 56. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 57. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 58. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 59. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 60. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 61. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 62. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 63. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 64. Weak Mutation 27: dominion.Player.initializePlayerTurn()V:63 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 28: dominion.Player.initializePlayerTurn()V:64 - ReplaceConstant - 0 -> 1
   * Goal 66. Weak Mutation 29: dominion.Player.initializePlayerTurn()V:65 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 30: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 31: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> score
   * Goal 69. Weak Mutation 32: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numActions
   * Goal 70. Weak Mutation 33: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> coins
   * Goal 71. Weak Mutation 34: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numBuys
   * Goal 72. Weak Mutation 35: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp Negation of i
   * Goal 73. Weak Mutation 36: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC 1 i
   * Goal 74. Weak Mutation 37: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC -1 i
   * Goal 75. Weak Mutation 38: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 0
   * Goal 76. Weak Mutation 39: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 1
   * Goal 77. Weak Mutation 40: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> -1
   * Goal 78. Weak Mutation 41: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 4
   * Goal 79. Weak Mutation 42: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 6
   * Goal 80. Weak Mutation 43: dominion.Player.initializePlayerTurn()V:66 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Player player0 = new Player(gameState0, "WdZ>N<Ee|DX");
      player0.score = 5;
      player0.discard = (List<Card>) linkedList0;
      linkedList0.add((Card) null);
      // Undeclared exception!
      try { 
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ComparableTimSort", e);
      }
  }

  //Test case number: 9
  /*
   * 42 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true
   * Goal 3. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true
   * Goal 4. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true
   * Goal 5. dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - true
   * Goal 6. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 7. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true in context: 
   * Goal 8. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true in context: 
   * Goal 9. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true in context: 
   * Goal 10. Branch dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - true in context: 
   * Goal 11. [Output]: dominion.Player.scoreFor()I:Negative
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 20. dominion.Player.scoreFor()I: Line 89
   * Goal 21. dominion.Player.scoreFor()I: Line 91
   * Goal 22. dominion.Player.scoreFor()I: Line 98
   * Goal 23. dominion.Player.scoreFor()I: Line 105
   * Goal 24. dominion.Player.scoreFor()I: Line 111
   * Goal 25. dominion.Player.scoreFor()I: Line 112
   * Goal 26. dominion.Player.scoreFor()I: Line 115
   * Goal 27. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 28. [METHOD] dominion.Player.scoreFor()I
   * Goal 29. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 30. [METHODNOEX] dominion.Player.scoreFor()I
   * Goal 31. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 33. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 65: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> discard
   * Goal 35. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 36. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 79: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> playedCards
   * Goal 38. Weak Mutation 80: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> hand
   * Goal 39. Weak Mutation 81: dominion.Player.scoreFor()I:98 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 93: dominion.Player.scoreFor()I:105 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 105: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> discard
   * Goal 42. Weak Mutation 106: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((GameState) null, "g4ule(W`(YRe=mcB~{a");
      player0.score = (-3583);
      int int0 = player0.scoreFor();
      assertEquals((-3583), int0);
  }

  //Test case number: 10
  /*
   * 91 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 5. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 6. dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - true
   * Goal 7. dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false
   * Goal 8. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 9. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 10. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 11. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 12. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 13. Branch dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - true in context: 
   * Goal 14. Branch dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false in context: 
   * Goal 15. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:Null
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 25. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 26. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 27. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 28. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 29. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 30. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 31. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 32. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 33. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 34. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 35. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 36. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 37. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 38. dominion.Player.initializePlayerTurn()V: Line 63
   * Goal 39. dominion.Player.initializePlayerTurn()V: Line 64
   * Goal 40. dominion.Player.initializePlayerTurn()V: Line 65
   * Goal 41. dominion.Player.initializePlayerTurn()V: Line 66
   * Goal 42. dominion.Player.initializePlayerTurn()V: Line 67
   * Goal 43. dominion.Player.initializePlayerTurn()V: Line 69
   * Goal 44. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 45. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 46. [METHOD] dominion.Player.initializePlayerTurn()V
   * Goal 47. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 48. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 49. [METHODNOEX] dominion.Player.initializePlayerTurn()V
   * Goal 50. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 53. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 54. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 55. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 57. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 58. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 59. Weak Mutation 16: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numActions
   * Goal 60. Weak Mutation 18: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numBuys
   * Goal 61. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 62. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 63. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 64. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 65. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 66. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 67. Weak Mutation 27: dominion.Player.initializePlayerTurn()V:63 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 28: dominion.Player.initializePlayerTurn()V:64 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 29: dominion.Player.initializePlayerTurn()V:65 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 30: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 31: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> score
   * Goal 72. Weak Mutation 32: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numActions
   * Goal 73. Weak Mutation 33: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> coins
   * Goal 74. Weak Mutation 34: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numBuys
   * Goal 75. Weak Mutation 35: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp Negation of i
   * Goal 76. Weak Mutation 36: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC 1 i
   * Goal 77. Weak Mutation 37: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC -1 i
   * Goal 78. Weak Mutation 38: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 0
   * Goal 79. Weak Mutation 39: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 1
   * Goal 80. Weak Mutation 40: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> -1
   * Goal 81. Weak Mutation 41: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 4
   * Goal 82. Weak Mutation 42: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 6
   * Goal 83. Weak Mutation 43: dominion.Player.initializePlayerTurn()V:66 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 44: dominion.Player.initializePlayerTurn()V:66 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 86. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 87. Weak Mutation 58: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable random -> numActions
   * Goal 88. Weak Mutation 60: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable random -> numBuys
   * Goal 89. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 90. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 91. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      List<Card> list0 = player0.discard;
      player0.hand = list0;
      player0.initializePlayerTurn();
      Card card0 = player0.getRandHandCard();
      assertNull(card0);
  }

  //Test case number: 11
  /*
   * 31 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 5. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 6. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 15. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 16. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 17. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 18. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 20. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 22. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 24. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 25. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 26. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 27. Weak Mutation 55: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> discard
   * Goal 28. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 29. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 30. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 31. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.hand = list0;
      Card card0 = player0.getRandHandCard();
      assertEquals(Card.CardName.Gold, card0.getCardName());
  }

  //Test case number: 12
  /*
   * 31 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 5. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Negative
   * Goal 6. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 15. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 16. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 17. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 18. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 20. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 22. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 24. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 25. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 26. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 27. Weak Mutation 55: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> discard
   * Goal 28. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 29. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 30. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 31. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Card.CardName card_CardName0 = Card.CardName.Mine;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, (-2572), (-667), 19);
      arrayList0.add(card0);
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "f+\"E");
      player0.hand = (List<Card>) arrayList0;
      Card card1 = player0.getRandHandCard();
      assertEquals(Card.Type.ACTION, card1.getType());
  }

  //Test case number: 13
  /*
   * 21 covered goals:
   * Goal 1. dominion.Player.getName()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.getName()Ljava/lang/String;: root-Branch in context: dominion.Player:getName()Ljava/lang/String;
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. [Output]: dominion.Player.getName()Ljava/lang/String;:Null
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.getName()Ljava/lang/String;: Line 34
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.getName()Ljava/lang/String;
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. [METHODNOEX] dominion.Player.getName()Ljava/lang/String;
   * Goal 19. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 21. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "i7&cR5`*|\"_/");
      player0.player_username = null;
      String string0 = player0.getName();
      assertNull(string0);
  }

  //Test case number: 14
  /*
   * 21 covered goals:
   * Goal 1. dominion.Player.getName()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.getName()Ljava/lang/String;: root-Branch in context: dominion.Player:getName()Ljava/lang/String;
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. [Output]: dominion.Player.getName()Ljava/lang/String;:EmptyString
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.getName()Ljava/lang/String;: Line 34
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.getName()Ljava/lang/String;
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. [METHODNOEX] dominion.Player.getName()Ljava/lang/String;
   * Goal 19. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 21. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      String string0 = player0.getName();
      assertEquals("", string0);
  }

  //Test case number: 15
  /*
   * 25 covered goals:
   * Goal 1. dominion.Player.gain(Ldominion/Card;)Z: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.gain(Ldominion/Card;)Z: root-Branch in context: 
   * Goal 5. [Output]: dominion.Player.gain(Ldominion/Card;)Z:True
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.gain(Ldominion/Card;)Z: Line 72
   * Goal 15. dominion.Player.gain(Ldominion/Card;)Z: Line 73
   * Goal 16. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 17. [METHOD] dominion.Player.gain(Ldominion/Card;)Z
   * Goal 18. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHODNOEX] dominion.Player.gain(Ldominion/Card;)Z
   * Goal 20. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 22. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 23. Weak Mutation 46: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> playedCards
   * Goal 24. Weak Mutation 47: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> hand
   * Goal 25. Weak Mutation 48: dominion.Player.gain(Ldominion/Card;)Z:73 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Card.CardName card_CardName0 = Card.CardName.GreatHall;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 0, (-1473), 0);
      Player player0 = new Player(gameState0, "");
      boolean boolean0 = player0.gain(card0);
      assertTrue(boolean0);
  }

  //Test case number: 16
  /*
   * 24 covered goals:
   * Goal 1. dominion.Player.printStateGame()V: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.printStateGame()V: root-Branch in context: dominion.Player:printStateGame()V
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. printStateGame()V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.printStateGame()V: Line 160
   * Goal 15. dominion.Player.printStateGame()V: Line 161
   * Goal 16. dominion.Player.printStateGame()V: Line 162
   * Goal 17. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. [METHOD] dominion.Player.printStateGame()V
   * Goal 19. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 20. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 22. Weak Mutation 205: dominion.Player.printStateGame()V:160 - ReplaceConstant -  ---  -> 
   * Goal 23. Weak Mutation 206: dominion.Player.printStateGame()V:160 - ReplaceConstant -  ---  -> 
   * Goal 24. Weak Mutation 207: dominion.Player.printStateGame()V:161 - ReplaceConstant -  --- --------------------------- ---  -> 
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((GameState) null, "ZLO4zX3~F5|cT7xe");
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 17
  /*
   * 46 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 6. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 7. playTreasureCard()V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. [Output]: dominion.Player.drawCard()Ldominion/Card;:Null
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 17. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 18. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 19. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 20. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 21. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 22. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 23. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 25. dominion.Player.playTreasureCard()V: Line 120
   * Goal 26. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 27. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 28. [METHOD] dominion.Player.playTreasureCard()V
   * Goal 29. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 30. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 31. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 33. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 34. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 36. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 37. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 38. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 39. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 40. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 41. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 42. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 43. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 44. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 45. Weak Mutation 107: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> discard
   * Goal 46. Weak Mutation 108: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "Gold");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.playTreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Card", e);
      }
  }

  //Test case number: 18
  /*
   * 22 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 5. getRandHandCard()Ldominion/Card;_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 20. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 21. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 22. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "~");
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.getRandHandCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 19
  /*
   * 22 covered goals:
   * Goal 1. dominion.Player.gain(Ldominion/Card;)Z: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.gain(Ldominion/Card;)Z: root-Branch in context: 
   * Goal 5. gain(Ldominion/Card;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.gain(Ldominion/Card;)Z: Line 72
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.gain(Ldominion/Card;)Z
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 20. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 21. Weak Mutation 46: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> playedCards
   * Goal 22. Weak Mutation 47: dominion.Player.gain(Ldominion/Card;)Z:72 - ReplaceVariable discard -> hand
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Player player0 = new Player(gameState0, "2zKVtB07LJzhc ?");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.gain((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 20
  /*
   * 21 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 3. endTurn()V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 5. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 12. dominion.Player.endTurn()V: Line 152
   * Goal 13. dominion.Player.endTurn()V: Line 153
   * Goal 14. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 15. [METHOD] dominion.Player.endTurn()V
   * Goal 16. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 17. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 19. Weak Mutation 196: dominion.Player.endTurn()V:152 - ReplaceConstant - endturn -> 
   * Goal 20. Weak Mutation 197: dominion.Player.endTurn()V:153 - ReplaceVariable hand -> discard
   * Goal 21. Weak Mutation 198: dominion.Player.endTurn()V:153 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, (String) null);
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 21
  /*
   * 42 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 6. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 7. drawCard()Ldominion/Card;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. [Output]: dominion.Player.drawCard()Ldominion/Card;:Null
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 17. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 18. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 19. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 20. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 21. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 22. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 23. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 25. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 26. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 27. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 28. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 29. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 31. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 32. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 34. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 35. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 36. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 37. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 38. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 39. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 40. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 41. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 42. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "dominion.Card$CardName");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.ComparableTimSort", e);
      }
  }

  //Test case number: 22
  /*
   * 28 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 5. buyCard(Ldominion/Card;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 15. dominion.Player.buyCard(Ldominion/Card;)I: Line 141
   * Goal 16. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 17. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 18. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 21. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 22. Weak Mutation 154: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> score
   * Goal 23. Weak Mutation 155: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> numActions
   * Goal 24. Weak Mutation 156: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> coins
   * Goal 25. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 26. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 27. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 28. Weak Mutation 160: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, " --- ");
      player0.numBuys = 7;
      // Undeclared exception!
      try { 
        player0.buyCard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 23
  /*
   * 38 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false
   * Goal 3. dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - true
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - false in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 6. Branch dominion.Player.buyCard(Ldominion/Card;)I: I11 Branch 15 IF_ICMPGT L141 - true in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 7. [Output]: dominion.Player.buyCard(Ldominion/Card;)I:Zero
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 16. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 17. dominion.Player.buyCard(Ldominion/Card;)I: Line 141
   * Goal 18. dominion.Player.buyCard(Ldominion/Card;)I: Line 149
   * Goal 19. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 20. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 21. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 22. [METHODNOEX] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 23. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 25. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 26. Weak Mutation 154: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> score
   * Goal 27. Weak Mutation 155: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> numActions
   * Goal 28. Weak Mutation 156: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceVariable numBuys -> coins
   * Goal 29. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 160: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> -1
   * Goal 33. Weak Mutation 165: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceVariable coins -> numBuys
   * Goal 34. Weak Mutation 166: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 167: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp +1
   * Goal 36. Weak Mutation 168: dominion.Player.buyCard(Ldominion/Card;)I:141 - InsertUnaryOp -1
   * Goal 37. Weak Mutation 170: dominion.Player.buyCard(Ldominion/Card;)I:141 - ReplaceComparisonOperator > -> -2
   * Goal 38. Weak Mutation 195: dominion.Player.buyCard(Ldominion/Card;)I:149 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "7.xlS]8eg&:");
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.Type card_Type0 = Card.Type.ACTION;
      player0.numBuys = 15;
      Card card0 = new Card(card_CardName0, card_Type0, 15, 15, 15);
      int int0 = player0.buyCard(card0);
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 27 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - true
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.buyCard(Ldominion/Card;)I: I4 Branch 14 IFLE L140 - true in context: dominion.Player:buyCard(Ldominion/Card;)I
   * Goal 5. [Output]: dominion.Player.buyCard(Ldominion/Card;)I:Zero
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.buyCard(Ldominion/Card;)I: Line 140
   * Goal 15. dominion.Player.buyCard(Ldominion/Card;)I: Line 149
   * Goal 16. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 17. [METHOD] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 18. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHODNOEX] dominion.Player.buyCard(Ldominion/Card;)I
   * Goal 20. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 22. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 23. Weak Mutation 157: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp Negation
   * Goal 24. Weak Mutation 158: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp +1
   * Goal 25. Weak Mutation 159: dominion.Player.buyCard(Ldominion/Card;)I:140 - InsertUnaryOp -1
   * Goal 26. Weak Mutation 162: dominion.Player.buyCard(Ldominion/Card;)I:140 - ReplaceComparisonOperator <= -> <
   * Goal 27. Weak Mutation 195: dominion.Player.buyCard(Ldominion/Card;)I:149 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "Hand: ");
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 395, (-2792), 1574);
      int int0 = player0.buyCard(card0);
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 30 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - false
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - false in context: dominion.Player:playTreasureCard()V
   * Goal 5. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 13. dominion.Player.playTreasureCard()V: Line 120
   * Goal 14. dominion.Player.playTreasureCard()V: Line 121
   * Goal 15. dominion.Player.playTreasureCard()V: Line 122
   * Goal 16. dominion.Player.playTreasureCard()V: Line 123
   * Goal 17. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. [METHOD] dominion.Player.playTreasureCard()V
   * Goal 19. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 20. [METHODNOEX] dominion.Player.playTreasureCard()V
   * Goal 21. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 23. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 24. Weak Mutation 107: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> discard
   * Goal 25. Weak Mutation 108: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> playedCards
   * Goal 26. Weak Mutation 109: dominion.Player.playTreasureCard()V:121 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 110: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> discard
   * Goal 28. Weak Mutation 111: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> playedCards
   * Goal 29. Weak Mutation 112: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> hand
   * Goal 30. Weak Mutation 113: dominion.Player.playTreasureCard()V:122 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      player0.playTreasureCard();
      assertEquals("", player0.getName());
  }

  //Test case number: 26
  /*
   * 106 covered goals:
   * Goal 1. dominion.Player.discard(Ldominion/Card;)V: root-Branch
   * Goal 2. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 3. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 4. dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - true
   * Goal 5. dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - true
   * Goal 6. dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - false
   * Goal 7. dominion.Player.playTreasureCard()V: I38 Branch 13 IFNONNULL L127 - true
   * Goal 8. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 9. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 10. Branch dominion.Player.playTreasureCard()V: I15 Branch 11 IFNE L122 - true in context: dominion.Player:playTreasureCard()V
   * Goal 11. Branch dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - true in context: dominion.Player:playTreasureCard()V
   * Goal 12. Branch dominion.Player.playTreasureCard()V: I24 Branch 12 IF_ICMPLE L124 - false in context: dominion.Player:playTreasureCard()V
   * Goal 13. Branch dominion.Player.playTreasureCard()V: I38 Branch 13 IFNONNULL L127 - true in context: dominion.Player:playTreasureCard()V
   * Goal 14. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 15. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 24. dominion.Player.discard(Ldominion/Card;)V: Line 77
   * Goal 25. dominion.Player.discard(Ldominion/Card;)V: Line 78
   * Goal 26. dominion.Player.discard(Ldominion/Card;)V: Line 80
   * Goal 27. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 28. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 29. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 30. dominion.Player.playTreasureCard()V: Line 120
   * Goal 31. dominion.Player.playTreasureCard()V: Line 121
   * Goal 32. dominion.Player.playTreasureCard()V: Line 122
   * Goal 33. dominion.Player.playTreasureCard()V: Line 124
   * Goal 34. dominion.Player.playTreasureCard()V: Line 125
   * Goal 35. dominion.Player.playTreasureCard()V: Line 126
   * Goal 36. dominion.Player.playTreasureCard()V: Line 127
   * Goal 37. dominion.Player.playTreasureCard()V: Line 131
   * Goal 38. dominion.Player.playTreasureCard()V: Line 132
   * Goal 39. dominion.Player.playTreasureCard()V: Line 133
   * Goal 40. dominion.Player.playTreasureCard()V: Line 134
   * Goal 41. dominion.Player.playTreasureCard()V: Line 135
   * Goal 42. dominion.Player.playTreasureCard()V: Line 137
   * Goal 43. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 44. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 45. [METHOD] dominion.Player.playTreasureCard()V
   * Goal 46. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 47. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 48. [METHODNOEX] dominion.Player.playTreasureCard()V
   * Goal 49. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 51. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 52. Weak Mutation 49: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> discard
   * Goal 53. Weak Mutation 50: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> playedCards
   * Goal 54. Weak Mutation 51: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> playedCards
   * Goal 55. Weak Mutation 52: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> hand
   * Goal 56. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 57. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 58. Weak Mutation 55: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> discard
   * Goal 59. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 60. Weak Mutation 59: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable random -> coins
   * Goal 61. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 62. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 63. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   * Goal 64. Weak Mutation 107: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> discard
   * Goal 65. Weak Mutation 108: dominion.Player.playTreasureCard()V:120 - ReplaceVariable hand -> playedCards
   * Goal 66. Weak Mutation 109: dominion.Player.playTreasureCard()V:121 - ReplaceConstant - 0 -> 1
   * Goal 67. Weak Mutation 110: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> discard
   * Goal 68. Weak Mutation 111: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> playedCards
   * Goal 69. Weak Mutation 112: dominion.Player.playTreasureCard()V:122 - ReplaceVariable treasureCards -> hand
   * Goal 70. Weak Mutation 114: dominion.Player.playTreasureCard()V:122 - ReplaceComparisonOperator != -> <
   * Goal 71. Weak Mutation 116: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> discard
   * Goal 72. Weak Mutation 117: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> playedCards
   * Goal 73. Weak Mutation 118: dominion.Player.playTreasureCard()V:124 - ReplaceVariable treasureCards -> hand
   * Goal 74. Weak Mutation 119: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> score
   * Goal 75. Weak Mutation 120: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> numActions
   * Goal 76. Weak Mutation 121: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> coins
   * Goal 77. Weak Mutation 122: dominion.Player.playTreasureCard()V:124 - ReplaceVariable i -> numBuys
   * Goal 78. Weak Mutation 123: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp Negation of i
   * Goal 79. Weak Mutation 124: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp IINC 1 i
   * Goal 80. Weak Mutation 125: dominion.Player.playTreasureCard()V:124 - InsertUnaryOp IINC -1 i
   * Goal 81. Weak Mutation 126: dominion.Player.playTreasureCard()V:124 - ReplaceComparisonOperator <= -> -1
   * Goal 82. Weak Mutation 127: dominion.Player.playTreasureCard()V:124 - ReplaceComparisonOperator <= -> <
   * Goal 83. Weak Mutation 129: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> discard
   * Goal 84. Weak Mutation 130: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> playedCards
   * Goal 85. Weak Mutation 131: dominion.Player.playTreasureCard()V:125 - ReplaceVariable treasureCards -> hand
   * Goal 86. Weak Mutation 132: dominion.Player.playTreasureCard()V:125 - ReplaceVariable i -> score
   * Goal 87. Weak Mutation 133: dominion.Player.playTreasureCard()V:125 - ReplaceVariable i -> numActions
   * Goal 88. Weak Mutation 134: dominion.Player.playTreasureCard()V:125 - ReplaceVariable i -> coins
   * Goal 89. Weak Mutation 135: dominion.Player.playTreasureCard()V:125 - ReplaceVariable i -> numBuys
   * Goal 90. Weak Mutation 136: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp Negation of i
   * Goal 91. Weak Mutation 137: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp IINC 1 i
   * Goal 92. Weak Mutation 138: dominion.Player.playTreasureCard()V:125 - InsertUnaryOp IINC -1 i
   * Goal 93. Weak Mutation 139: dominion.Player.playTreasureCard()V:127 - ReplaceComparisonOperator != null -> = null
   * Goal 94. Weak Mutation 141: dominion.Player.playTreasureCard()V:131 - ReplaceConstant - SPEND:  -> 
   * Goal 95. Weak Mutation 142: dominion.Player.playTreasureCard()V:132 - ReplaceVariable playedCards -> discard
   * Goal 96. Weak Mutation 143: dominion.Player.playTreasureCard()V:132 - ReplaceVariable playedCards -> hand
   * Goal 97. Weak Mutation 144: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> score
   * Goal 98. Weak Mutation 145: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> numActions
   * Goal 99. Weak Mutation 146: dominion.Player.playTreasureCard()V:133 - ReplaceVariable coins -> numBuys
   * Goal 100. Weak Mutation 147: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp Negation
   * Goal 101. Weak Mutation 148: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp +1
   * Goal 102. Weak Mutation 149: dominion.Player.playTreasureCard()V:133 - InsertUnaryOp -1
   * Goal 103. Weak Mutation 150: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> %
   * Goal 104. Weak Mutation 151: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> -
   * Goal 105. Weak Mutation 152: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> *
   * Goal 106. Weak Mutation 153: dominion.Player.playTreasureCard()V:133 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.hand = list0;
      player0.playTreasureCard();
      player0.getRandHandCard();
      assertEquals(17, list0.size());
  }

  //Test case number: 27
  /*
   * 118 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 5. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true
   * Goal 6. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false
   * Goal 7. dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - true
   * Goal 8. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true
   * Goal 9. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true
   * Goal 10. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - false
   * Goal 11. dominion.Player.scoreFor()I: I105 Branch 9 IF_ACMPNE L107 - true
   * Goal 12. dominion.Player.scoreFor()I: I105 Branch 9 IF_ACMPNE L107 - false
   * Goal 13. dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false
   * Goal 14. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 15. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 16. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 17. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 18. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false in context: 
   * Goal 19. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true in context: 
   * Goal 20. Branch dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - true in context: 
   * Goal 21. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true in context: 
   * Goal 22. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - false in context: 
   * Goal 23. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true in context: 
   * Goal 24. Branch dominion.Player.scoreFor()I: I105 Branch 9 IF_ACMPNE L107 - true in context: 
   * Goal 25. Branch dominion.Player.scoreFor()I: I105 Branch 9 IF_ACMPNE L107 - false in context: 
   * Goal 26. Branch dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false in context: 
   * Goal 27. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 28. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 29. [Output]: dominion.Player.scoreFor()I:Positive
   * Goal 30. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 31. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 32. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 33. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 34. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 35. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 36. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 37. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 38. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 39. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 40. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 41. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 42. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 43. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 44. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 45. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 46. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 47. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 48. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 49. dominion.Player.scoreFor()I: Line 89
   * Goal 50. dominion.Player.scoreFor()I: Line 91
   * Goal 51. dominion.Player.scoreFor()I: Line 92
   * Goal 52. dominion.Player.scoreFor()I: Line 93
   * Goal 53. dominion.Player.scoreFor()I: Line 96
   * Goal 54. dominion.Player.scoreFor()I: Line 98
   * Goal 55. dominion.Player.scoreFor()I: Line 105
   * Goal 56. dominion.Player.scoreFor()I: Line 106
   * Goal 57. dominion.Player.scoreFor()I: Line 107
   * Goal 58. dominion.Player.scoreFor()I: Line 108
   * Goal 59. dominion.Player.scoreFor()I: Line 110
   * Goal 60. dominion.Player.scoreFor()I: Line 111
   * Goal 61. dominion.Player.scoreFor()I: Line 112
   * Goal 62. dominion.Player.scoreFor()I: Line 113
   * Goal 63. dominion.Player.scoreFor()I: Line 115
   * Goal 64. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 65. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 66. [METHOD] dominion.Player.scoreFor()I
   * Goal 67. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 68. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 69. [METHODNOEX] dominion.Player.scoreFor()I
   * Goal 70. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 72. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 73. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 75. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 76. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 77. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 78. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 79. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 80. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 81. Weak Mutation 12: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> hand
   * Goal 82. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 83. Weak Mutation 14: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> hand
   * Goal 84. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 85. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 86. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 87. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 88. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 89. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 90. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 91. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 92. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 93. Weak Mutation 65: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> discard
   * Goal 94. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 95. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 96. Weak Mutation 71: dominion.Player.scoreFor()I:92 - InsertUnaryOp Negation
   * Goal 97. Weak Mutation 72: dominion.Player.scoreFor()I:92 - InsertUnaryOp +1
   * Goal 98. Weak Mutation 73: dominion.Player.scoreFor()I:92 - InsertUnaryOp -1
   * Goal 99. Weak Mutation 74: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> %
   * Goal 100. Weak Mutation 77: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> /
   * Goal 101. Weak Mutation 78: dominion.Player.scoreFor()I:93 - ReplaceComparisonOperator != -> ==
   * Goal 102. Weak Mutation 79: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> playedCards
   * Goal 103. Weak Mutation 80: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> hand
   * Goal 104. Weak Mutation 81: dominion.Player.scoreFor()I:98 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 93: dominion.Player.scoreFor()I:105 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 94: dominion.Player.scoreFor()I:106 - ReplaceVariable score -> numActions
   * Goal 107. Weak Mutation 95: dominion.Player.scoreFor()I:106 - ReplaceVariable score -> coins
   * Goal 108. Weak Mutation 96: dominion.Player.scoreFor()I:106 - ReplaceVariable score -> numBuys
   * Goal 109. Weak Mutation 97: dominion.Player.scoreFor()I:106 - InsertUnaryOp Negation
   * Goal 110. Weak Mutation 98: dominion.Player.scoreFor()I:106 - InsertUnaryOp +1
   * Goal 111. Weak Mutation 99: dominion.Player.scoreFor()I:106 - InsertUnaryOp -1
   * Goal 112. Weak Mutation 100: dominion.Player.scoreFor()I:106 - ReplaceArithmeticOperator + -> %
   * Goal 113. Weak Mutation 101: dominion.Player.scoreFor()I:106 - ReplaceArithmeticOperator + -> -
   * Goal 114. Weak Mutation 102: dominion.Player.scoreFor()I:106 - ReplaceArithmeticOperator + -> *
   * Goal 115. Weak Mutation 103: dominion.Player.scoreFor()I:106 - ReplaceArithmeticOperator + -> /
   * Goal 116. Weak Mutation 104: dominion.Player.scoreFor()I:107 - ReplaceComparisonOperator != -> ==
   * Goal 117. Weak Mutation 105: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> discard
   * Goal 118. Weak Mutation 106: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.discard = list0;
      player0.drawCard();
      assertEquals(0, list0.size());
      
      int int0 = player0.scoreFor();
      assertEquals(11, int0);
  }

  //Test case number: 28
  /*
   * 82 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true
   * Goal 4. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false
   * Goal 5. dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - true
   * Goal 6. dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - false
   * Goal 7. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true
   * Goal 8. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true
   * Goal 9. dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false
   * Goal 10. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 11. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 12. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false in context: 
   * Goal 13. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true in context: 
   * Goal 14. Branch dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - false in context: 
   * Goal 15. Branch dominion.Player.scoreFor()I: I33 Branch 5 IF_ACMPNE L93 - true in context: 
   * Goal 16. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true in context: 
   * Goal 17. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true in context: 
   * Goal 18. Branch dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - false in context: 
   * Goal 19. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Positive
   * Goal 20. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Positive
   * Goal 21. [Output]: dominion.Player.scoreFor()I:Positive
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 24. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 25. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 26. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 27. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 28. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 29. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 30. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 31. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 32. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 33. dominion.Player.scoreFor()I: Line 89
   * Goal 34. dominion.Player.scoreFor()I: Line 91
   * Goal 35. dominion.Player.scoreFor()I: Line 92
   * Goal 36. dominion.Player.scoreFor()I: Line 93
   * Goal 37. dominion.Player.scoreFor()I: Line 94
   * Goal 38. dominion.Player.scoreFor()I: Line 96
   * Goal 39. dominion.Player.scoreFor()I: Line 98
   * Goal 40. dominion.Player.scoreFor()I: Line 105
   * Goal 41. dominion.Player.scoreFor()I: Line 111
   * Goal 42. dominion.Player.scoreFor()I: Line 112
   * Goal 43. dominion.Player.scoreFor()I: Line 113
   * Goal 44. dominion.Player.scoreFor()I: Line 115
   * Goal 45. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 46. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 47. [METHOD] dominion.Player.scoreFor()I
   * Goal 48. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 50. [METHODNOEX] dominion.Player.scoreFor()I
   * Goal 51. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 53. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 54. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 55. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 56. Weak Mutation 55: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> discard
   * Goal 57. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 58. Weak Mutation 57: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable random -> score
   * Goal 59. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 60. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 61. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   * Goal 62. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 65: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> discard
   * Goal 64. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 65. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 68: dominion.Player.scoreFor()I:92 - ReplaceVariable score -> numActions
   * Goal 67. Weak Mutation 69: dominion.Player.scoreFor()I:92 - ReplaceVariable score -> coins
   * Goal 68. Weak Mutation 70: dominion.Player.scoreFor()I:92 - ReplaceVariable score -> numBuys
   * Goal 69. Weak Mutation 71: dominion.Player.scoreFor()I:92 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 72: dominion.Player.scoreFor()I:92 - InsertUnaryOp +1
   * Goal 71. Weak Mutation 73: dominion.Player.scoreFor()I:92 - InsertUnaryOp -1
   * Goal 72. Weak Mutation 74: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 75: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> -
   * Goal 74. Weak Mutation 76: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> *
   * Goal 75. Weak Mutation 77: dominion.Player.scoreFor()I:92 - ReplaceArithmeticOperator + -> /
   * Goal 76. Weak Mutation 78: dominion.Player.scoreFor()I:93 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 79: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> playedCards
   * Goal 78. Weak Mutation 80: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> hand
   * Goal 79. Weak Mutation 81: dominion.Player.scoreFor()I:98 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 93: dominion.Player.scoreFor()I:105 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 105: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> discard
   * Goal 82. Weak Mutation 106: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.hand = list0;
      int int0 = player0.scoreFor();
      assertEquals(11, int0);
      
      Card card0 = player0.getRandHandCard();
      assertEquals(3, card0.getTreasureValue());
  }

  //Test case number: 29
  /*
   * 43 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true
   * Goal 3. dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true
   * Goal 4. dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true
   * Goal 5. dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - true
   * Goal 6. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 7. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - true in context: 
   * Goal 8. Branch dominion.Player.scoreFor()I: I49 Branch 6 IFEQ L98 - true in context: 
   * Goal 9. Branch dominion.Player.scoreFor()I: I85 Branch 8 IFEQ L105 - true in context: 
   * Goal 10. Branch dominion.Player.scoreFor()I: I129 Branch 10 IFEQ L112 - true in context: 
   * Goal 11. [Output]: dominion.Player.scoreFor()I:Zero
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 15. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 20. dominion.Player.scoreFor()I: Line 89
   * Goal 21. dominion.Player.scoreFor()I: Line 91
   * Goal 22. dominion.Player.scoreFor()I: Line 98
   * Goal 23. dominion.Player.scoreFor()I: Line 105
   * Goal 24. dominion.Player.scoreFor()I: Line 111
   * Goal 25. dominion.Player.scoreFor()I: Line 112
   * Goal 26. dominion.Player.scoreFor()I: Line 115
   * Goal 27. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 28. [METHOD] dominion.Player.scoreFor()I
   * Goal 29. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 30. [METHODNOEX] dominion.Player.scoreFor()I
   * Goal 31. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 33. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 34. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 65: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> discard
   * Goal 36. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 37. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 79: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> playedCards
   * Goal 39. Weak Mutation 80: dominion.Player.scoreFor()I:98 - ReplaceVariable discard -> hand
   * Goal 40. Weak Mutation 81: dominion.Player.scoreFor()I:98 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 93: dominion.Player.scoreFor()I:105 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 105: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> discard
   * Goal 43. Weak Mutation 106: dominion.Player.scoreFor()I:111 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      int int0 = player0.scoreFor();
      assertEquals(0, int0);
  }

  //Test case number: 30
  /*
   * 91 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 3. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 5. dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - true
   * Goal 6. dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false
   * Goal 7. dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false
   * Goal 8. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 9. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 10. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 11. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 12. Branch dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - true in context: 
   * Goal 13. Branch dominion.Player.initializePlayerTurn()V: I22 Branch 3 IF_ICMPGE L66 - false in context: 
   * Goal 14. Branch dominion.Player.scoreFor()I: I13 Branch 4 IFEQ L91 - false in context: 
   * Goal 15. scoreFor()I_java.lang.NullPointerException_IMPLICIT
   * Goal 16. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 24. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 25. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 26. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 27. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 28. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 29. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 30. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 31. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 32. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 33. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 34. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 35. dominion.Player.initializePlayerTurn()V: Line 63
   * Goal 36. dominion.Player.initializePlayerTurn()V: Line 64
   * Goal 37. dominion.Player.initializePlayerTurn()V: Line 65
   * Goal 38. dominion.Player.initializePlayerTurn()V: Line 66
   * Goal 39. dominion.Player.initializePlayerTurn()V: Line 67
   * Goal 40. dominion.Player.initializePlayerTurn()V: Line 69
   * Goal 41. dominion.Player.scoreFor()I: Line 89
   * Goal 42. dominion.Player.scoreFor()I: Line 91
   * Goal 43. dominion.Player.scoreFor()I: Line 92
   * Goal 44. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 45. [METHOD] dominion.Player.initializePlayerTurn()V
   * Goal 46. [METHOD] dominion.Player.scoreFor()I
   * Goal 47. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 48. [METHODNOEX] dominion.Player.initializePlayerTurn()V
   * Goal 49. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 52. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 53. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 54. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 55. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 56. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 57. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 58. Weak Mutation 16: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numActions
   * Goal 59. Weak Mutation 18: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable ndx -> numBuys
   * Goal 60. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 61. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 62. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 63. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 64. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 65. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 66. Weak Mutation 27: dominion.Player.initializePlayerTurn()V:63 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 28: dominion.Player.initializePlayerTurn()V:64 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 29: dominion.Player.initializePlayerTurn()V:65 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 30: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 0 -> 1
   * Goal 70. Weak Mutation 31: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> score
   * Goal 71. Weak Mutation 32: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numActions
   * Goal 72. Weak Mutation 33: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> coins
   * Goal 73. Weak Mutation 34: dominion.Player.initializePlayerTurn()V:66 - ReplaceVariable i -> numBuys
   * Goal 74. Weak Mutation 35: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp Negation of i
   * Goal 75. Weak Mutation 36: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC 1 i
   * Goal 76. Weak Mutation 37: dominion.Player.initializePlayerTurn()V:66 - InsertUnaryOp IINC -1 i
   * Goal 77. Weak Mutation 38: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 0
   * Goal 78. Weak Mutation 39: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 1
   * Goal 79. Weak Mutation 40: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> -1
   * Goal 80. Weak Mutation 41: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 4
   * Goal 81. Weak Mutation 42: dominion.Player.initializePlayerTurn()V:66 - ReplaceConstant - 5 -> 6
   * Goal 82. Weak Mutation 43: dominion.Player.initializePlayerTurn()V:66 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 44: dominion.Player.initializePlayerTurn()V:66 - ReplaceComparisonOperator >= -> >
   * Goal 84. Weak Mutation 64: dominion.Player.scoreFor()I:89 - ReplaceConstant - 0 -> 1
   * Goal 85. Weak Mutation 66: dominion.Player.scoreFor()I:91 - ReplaceVariable hand -> playedCards
   * Goal 86. Weak Mutation 67: dominion.Player.scoreFor()I:91 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 68: dominion.Player.scoreFor()I:92 - ReplaceVariable score -> numActions
   * Goal 88. Weak Mutation 70: dominion.Player.scoreFor()I:92 - ReplaceVariable score -> numBuys
   * Goal 89. Weak Mutation 71: dominion.Player.scoreFor()I:92 - InsertUnaryOp Negation
   * Goal 90. Weak Mutation 72: dominion.Player.scoreFor()I:92 - InsertUnaryOp +1
   * Goal 91. Weak Mutation 73: dominion.Player.scoreFor()I:92 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      List<Card> list0 = player0.discard;
      player0.hand = list0;
      player0.initializePlayerTurn();
      // Undeclared exception!
      try { 
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  //Test case number: 31
  /*
   * 82 covered goals:
   * Goal 1. dominion.Player.discard(Ldominion/Card;)V: root-Branch
   * Goal 2. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 3. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 4. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false
   * Goal 5. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true
   * Goal 6. dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false
   * Goal 7. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 8. Branch dominion.Player.discard(Ldominion/Card;)V: root-Branch in context: dominion.Player:discard(Ldominion/Card;)V
   * Goal 9. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 10. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - false in context: 
   * Goal 11. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - true in context: 
   * Goal 12. Branch dominion.Player.drawCard()Ldominion/Card;: I26 Branch 2 IFLE L47 - false in context: 
   * Goal 13. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Zero
   * Goal 14. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 15. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Zero
   * Goal 16. [Output]: dominion.Player.getRandHandCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Zero
   * Goal 17. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 18. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 19. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 20. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 21. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 22. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 23. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 24. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 25. dominion.Player.discard(Ldominion/Card;)V: Line 77
   * Goal 26. dominion.Player.discard(Ldominion/Card;)V: Line 78
   * Goal 27. dominion.Player.discard(Ldominion/Card;)V: Line 80
   * Goal 28. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 29. dominion.Player.drawCard()Ldominion/Card;: Line 45
   * Goal 30. dominion.Player.drawCard()Ldominion/Card;: Line 47
   * Goal 31. dominion.Player.drawCard()Ldominion/Card;: Line 48
   * Goal 32. dominion.Player.drawCard()Ldominion/Card;: Line 50
   * Goal 33. dominion.Player.drawCard()Ldominion/Card;: Line 51
   * Goal 34. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 35. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 36. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 37. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 38. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 39. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 40. dominion.Player.getRandHandCard()Ldominion/Card;: Line 84
   * Goal 41. dominion.Player.getRandHandCard()Ldominion/Card;: Line 85
   * Goal 42. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 43. [METHOD] dominion.Player.discard(Ldominion/Card;)V
   * Goal 44. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 45. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 46. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 47. [METHODNOEX] dominion.Player.discard(Ldominion/Card;)V
   * Goal 48. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 49. [METHODNOEX] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 50. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 52. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 53. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 4: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant - reshuffle the deck of the player  -> 
   * Goal 55. Weak Mutation 5: dominion.Player.drawCard()Ldominion/Card;:45 - ReplaceConstant -  to draw FIVE cards -> 
   * Goal 56. Weak Mutation 6: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> playedCards
   * Goal 57. Weak Mutation 7: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceVariable discard -> hand
   * Goal 58. Weak Mutation 8: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> -1
   * Goal 59. Weak Mutation 10: dominion.Player.drawCard()Ldominion/Card;:47 - ReplaceComparisonOperator <= -> <
   * Goal 60. Weak Mutation 11: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> playedCards
   * Goal 61. Weak Mutation 12: dominion.Player.drawCard()Ldominion/Card;:48 - ReplaceVariable discard -> hand
   * Goal 62. Weak Mutation 13: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> playedCards
   * Goal 63. Weak Mutation 14: dominion.Player.drawCard()Ldominion/Card;:50 - ReplaceVariable discard -> hand
   * Goal 64. Weak Mutation 19: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp Negation of ndx
   * Goal 65. Weak Mutation 20: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC 1 ndx
   * Goal 66. Weak Mutation 21: dominion.Player.drawCard()Ldominion/Card;:50 - InsertUnaryOp IINC -1 ndx
   * Goal 67. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 68. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 69. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 70. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 71. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   * Goal 72. Weak Mutation 49: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> discard
   * Goal 73. Weak Mutation 50: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> playedCards
   * Goal 74. Weak Mutation 51: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> playedCards
   * Goal 75. Weak Mutation 52: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> hand
   * Goal 76. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 77. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   * Goal 78. Weak Mutation 55: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> discard
   * Goal 79. Weak Mutation 56: dominion.Player.getRandHandCard()Ldominion/Card;:84 - ReplaceVariable hand -> playedCards
   * Goal 80. Weak Mutation 61: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp Negation of random
   * Goal 81. Weak Mutation 62: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC 1 random
   * Goal 82. Weak Mutation 63: dominion.Player.getRandHandCard()Ldominion/Card;:84 - InsertUnaryOp IINC -1 random
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Card.CardName card_CardName0 = Card.CardName.GreatHall;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 0, (-1473), 0);
      Player player0 = new Player(gameState0, "");
      player0.discard(card0);
      player0.drawCard();
      Card card1 = player0.getRandHandCard();
      assertEquals(0, card1.getCost());
  }

  //Test case number: 32
  /*
   * 32 covered goals:
   * Goal 1. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 2. dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - true
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.drawCard()Ldominion/Card;: I5 Branch 1 IFEQ L43 - true in context: 
   * Goal 5. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getCost()I:Negative
   * Goal 6. [Output]: dominion.Player.drawCard()Ldominion/Card;:NonNull:dominion.Card:getTreasureValue()I:Negative
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 15. dominion.Player.drawCard()Ldominion/Card;: Line 43
   * Goal 16. dominion.Player.drawCard()Ldominion/Card;: Line 54
   * Goal 17. dominion.Player.drawCard()Ldominion/Card;: Line 55
   * Goal 18. dominion.Player.drawCard()Ldominion/Card;: Line 57
   * Goal 19. dominion.Player.drawCard()Ldominion/Card;: Line 58
   * Goal 20. dominion.Player.drawCard()Ldominion/Card;: Line 59
   * Goal 21. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 22. [METHOD] dominion.Player.drawCard()Ldominion/Card;
   * Goal 23. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] dominion.Player.drawCard()Ldominion/Card;
   * Goal 25. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 27. Weak Mutation 3: dominion.Player.drawCard()Ldominion/Card;:43 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 22: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> discard
   * Goal 29. Weak Mutation 23: dominion.Player.drawCard()Ldominion/Card;:55 - ReplaceVariable hand -> playedCards
   * Goal 30. Weak Mutation 24: dominion.Player.drawCard()Ldominion/Card;:57 - ReplaceConstant - DRAW:  -> 
   * Goal 31. Weak Mutation 25: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> discard
   * Goal 32. Weak Mutation 26: dominion.Player.drawCard()Ldominion/Card;:58 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((GameState) null, "j$js;c'[<KQU`}\"5");
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      Card.CardName card_CardName0 = Card.CardName.Village;
      Card.Type card_Type0 = Card.Type.ACTION;
      player0.deck = linkedList0;
      Card card0 = new Card(card_CardName0, card_Type0, (-866), (-866), (-68));
      linkedList0.add(card0);
      Card card1 = player0.drawCard();
      assertEquals(Card.Type.ACTION, card1.getType());
  }

  //Test case number: 33
  /*
   * 21 covered goals:
   * Goal 1. dominion.Player.getName()Ljava/lang/String;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.getName()Ljava/lang/String;: root-Branch in context: dominion.Player:getName()Ljava/lang/String;
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. [Output]: dominion.Player.getName()Ljava/lang/String;:NonEmptyString
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.getName()Ljava/lang/String;: Line 34
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.getName()Ljava/lang/String;
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. [METHODNOEX] dominion.Player.getName()Ljava/lang/String;
   * Goal 19. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 21. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "uk2");
      String string0 = player0.getName();
      assertEquals("uk2", string0);
  }

  //Test case number: 34
  /*
   * 22 covered goals:
   * Goal 1. dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 4. Branch dominion.Player.getRandHandCard()Ldominion/Card;: root-Branch in context: dominion.Player:getRandHandCard()Ldominion/Card;
   * Goal 5. getRandHandCard()Ldominion/Card;_java.lang.ArithmeticException_IMPLICIT
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 14. dominion.Player.getRandHandCard()Ldominion/Card;: Line 83
   * Goal 15. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 16. [METHOD] dominion.Player.getRandHandCard()Ldominion/Card;
   * Goal 17. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 20. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 21. Weak Mutation 53: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> discard
   * Goal 22. Weak Mutation 54: dominion.Player.getRandHandCard()Ldominion/Card;:83 - ReplaceVariable hand -> playedCards
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      // Undeclared exception!
      try { 
        player0.getRandHandCard();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 35
  /*
   * 28 covered goals:
   * Goal 1. dominion.Player.printStateGame()V: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch dominion.Player.printStateGame()V: root-Branch in context: dominion.Player:printStateGame()V
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 6. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 13. dominion.Player.printStateGame()V: Line 160
   * Goal 14. dominion.Player.printStateGame()V: Line 161
   * Goal 15. dominion.Player.printStateGame()V: Line 162
   * Goal 16. dominion.Player.printStateGame()V: Line 163
   * Goal 17. dominion.Player.printStateGame()V: Line 164
   * Goal 18. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 19. [METHOD] dominion.Player.printStateGame()V
   * Goal 20. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] dominion.Player.printStateGame()V
   * Goal 22. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 24. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 25. Weak Mutation 205: dominion.Player.printStateGame()V:160 - ReplaceConstant -  ---  -> 
   * Goal 26. Weak Mutation 206: dominion.Player.printStateGame()V:160 - ReplaceConstant -  ---  -> 
   * Goal 27. Weak Mutation 207: dominion.Player.printStateGame()V:161 - ReplaceConstant -  --- --------------------------- ---  -> 
   * Goal 28. Weak Mutation 208: dominion.Player.printStateGame()V:163 - ReplaceConstant -  --- --------------------------- ---  -> 
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.printStateGame();
      assertEquals("", player0.getName());
  }

  //Test case number: 36
  /*
   * 33 covered goals:
   * Goal 1. dominion.Player.discard(Ldominion/Card;)V: root-Branch
   * Goal 2. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch
   * Goal 3. dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - false
   * Goal 4. Branch dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: root-Branch in context: dominion.Player:<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 5. Branch dominion.Player.endTurn()V: I10 Branch 16 IFLE L153 - false in context: 
   * Goal 6. endTurn()V_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 7. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 17
   * Goal 8. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 18
   * Goal 9. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 20
   * Goal 10. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 22
   * Goal 11. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 26
   * Goal 12. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 38
   * Goal 13. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 39
   * Goal 14. dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V: Line 40
   * Goal 15. dominion.Player.discard(Ldominion/Card;)V: Line 77
   * Goal 16. dominion.Player.discard(Ldominion/Card;)V: Line 78
   * Goal 17. dominion.Player.discard(Ldominion/Card;)V: Line 80
   * Goal 18. dominion.Player.endTurn()V: Line 152
   * Goal 19. dominion.Player.endTurn()V: Line 153
   * Goal 20. dominion.Player.endTurn()V: Line 154
   * Goal 21. [METHOD] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 22. [METHOD] dominion.Player.endTurn()V
   * Goal 23. [METHODNOEX] dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:26 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 1: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:38 - ReplaceVariable player_username -> player_username
   * Goal 26. Weak Mutation 2: dominion.Player.<init>(Ldominion/GameState;Ljava/lang/String;)V:39 - ReplaceVariable gameState -> gameState
   * Goal 27. Weak Mutation 50: dominion.Player.discard(Ldominion/Card;)V:77 - ReplaceVariable hand -> playedCards
   * Goal 28. Weak Mutation 51: dominion.Player.discard(Ldominion/Card;)V:78 - ReplaceVariable discard -> playedCards
   * Goal 29. Weak Mutation 196: dominion.Player.endTurn()V:152 - ReplaceConstant - endturn -> 
   * Goal 30. Weak Mutation 198: dominion.Player.endTurn()V:153 - ReplaceVariable hand -> playedCards
   * Goal 31. Weak Mutation 199: dominion.Player.endTurn()V:153 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 203: dominion.Player.endTurn()V:154 - ReplaceVariable hand -> playedCards
   * Goal 33. Weak Mutation 204: dominion.Player.endTurn()V:154 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
      player0.discard = list0;
      player0.hand = player0.discard;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
