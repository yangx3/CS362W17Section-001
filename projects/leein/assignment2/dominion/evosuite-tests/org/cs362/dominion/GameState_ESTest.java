/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 01 03:16:14 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.cs362.dominion.Card;
import org.cs362.dominion.GameState;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GameState_ESTest extends GameState_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 44 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true
   * Goal 4. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - false
   * Goal 5. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 6. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 7. Branch org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - false in context: org.cs362.dominion.GameState:getWinners()Ljava/util/HashMap;
   * Goal 8. Branch org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true in context: org.cs362.dominion.GameState:getWinners()Ljava/util/HashMap;
   * Goal 9. [Output]: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:NonNull:java.util.HashMap:isEmpty()Z:False
   * Goal 10. [Output]: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:NonNull:java.util.HashMap:size()I:Positive
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 19. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 20. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 21. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 155
   * Goal 22. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 158
   * Goal 23. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 159
   * Goal 24. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 160
   * Goal 25. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 161
   * Goal 26. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 163
   * Goal 27. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 28. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 29. [METHOD] org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;
   * Goal 30. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 31. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 32. [METHODNOEX] org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;
   * Goal 33. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 35. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 36. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 37. Weak Mutation 122: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceVariable players -> cards
   * Goal 38. Weak Mutation 123: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 124: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - ReplaceVariable playerScore -> gameBoard
   * Goal 40. Weak Mutation 125: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - ReplaceVariable score -> embargoCoin
   * Goal 41. Weak Mutation 126: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp Negation of score
   * Goal 42. Weak Mutation 127: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp IINC 1 score
   * Goal 43. Weak Mutation 128: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp IINC -1 score
   * Goal 44. Weak Mutation 129: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:163 - ReplaceVariable playerScore -> gameBoard
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, "MMsd*V(rUAer");
      List<Card> list0 = Card.createCards();
      player0.discard = list0;
      GameState gameState0 = new GameState(list0);
      gameState0.addPlayer(player0);
      gameState0.getWinners();
  }

  //Test case number: 1
  /*
   * 65 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false
   * Goal 4. org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true
   * Goal 5. org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false
   * Goal 6. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 7. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 8. Branch org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 9. Branch org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 10. Branch org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 11. initializeGame()V_java.lang.ArithmeticException_IMPLICIT
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 20. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 21. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 22. org.cs362.dominion.GameState.initializeGame()V: Line 59
   * Goal 23. org.cs362.dominion.GameState.initializeGame()V: Line 65
   * Goal 24. org.cs362.dominion.GameState.initializeGame()V: Line 66
   * Goal 25. org.cs362.dominion.GameState.initializeGame()V: Line 69
   * Goal 26. org.cs362.dominion.GameState.initializeGame()V: Line 70
   * Goal 27. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 28. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 29. [METHOD] org.cs362.dominion.GameState.initializeGame()V
   * Goal 30. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 31. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 32. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 34. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 35. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 36. Weak Mutation 4: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 37. Weak Mutation 5: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 0
   * Goal 38. Weak Mutation 6: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 1
   * Goal 39. Weak Mutation 7: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> -1
   * Goal 40. Weak Mutation 8: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 3
   * Goal 41. Weak Mutation 9: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 5
   * Goal 42. Weak Mutation 12: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator > -> >=
   * Goal 43. Weak Mutation 13: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 44. Weak Mutation 14: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 0
   * Goal 45. Weak Mutation 15: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 1
   * Goal 46. Weak Mutation 16: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> -1
   * Goal 47. Weak Mutation 17: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 3
   * Goal 48. Weak Mutation 20: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator >= -> ==
   * Goal 49. Weak Mutation 22: org.cs362.dominion.GameState.initializeGame()V:65 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 23: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 0
   * Goal 51. Weak Mutation 24: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 1
   * Goal 52. Weak Mutation 25: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> -1
   * Goal 53. Weak Mutation 26: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 9
   * Goal 54. Weak Mutation 27: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 11
   * Goal 55. Weak Mutation 28: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable selectedKindom -> Kingdom_Cards_Selected
   * Goal 56. Weak Mutation 30: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of selectedKindom
   * Goal 57. Weak Mutation 31: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 selectedKindom
   * Goal 58. Weak Mutation 32: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 selectedKindom
   * Goal 59. Weak Mutation 33: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> selectedKindom
   * Goal 60. Weak Mutation 34: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> embargoCoin
   * Goal 61. Weak Mutation 35: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of Kingdom_Cards_Selected
   * Goal 62. Weak Mutation 36: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 Kingdom_Cards_Selected
   * Goal 63. Weak Mutation 37: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 Kingdom_Cards_Selected
   * Goal 64. Weak Mutation 38: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceComparisonOperator >= -> -1
   * Goal 65. Weak Mutation 41: org.cs362.dominion.GameState.initializeGame()V:70 - ReplaceVariable cards -> players
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      gameState0.players = (List<Player>) arrayList0;
      arrayList0.add((Player) null);
      arrayList0.add(player0);
      arrayList0.add(player0);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 58 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - true
   * Goal 4. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - true
   * Goal 5. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true
   * Goal 6. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - false
   * Goal 7. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 8. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 9. Branch org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - true in context: org.cs362.dominion.GameState:play()Ljava/util/HashMap;
   * Goal 10. [Output]: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:NonNull:java.util.HashMap:isEmpty()Z:False
   * Goal 11. [Output]: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:NonNull:java.util.HashMap:size()I:Positive
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 20. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 21. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 22. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 155
   * Goal 23. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 158
   * Goal 24. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 159
   * Goal 25. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 160
   * Goal 26. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 161
   * Goal 27. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 163
   * Goal 28. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 29. org.cs362.dominion.GameState.isGameOver()Z: Line 134
   * Goal 30. org.cs362.dominion.GameState.isGameOver()Z: Line 135
   * Goal 31. org.cs362.dominion.GameState.isGameOver()Z: Line 136
   * Goal 32. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 112
   * Goal 33. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 113
   * Goal 34. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 129
   * Goal 35. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 36. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 37. [METHOD] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 38. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 39. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 40. [METHODNOEX] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 41. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 43. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 44. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 45. Weak Mutation 76: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:112 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 77: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:113 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 48. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 91: org.cs362.dominion.GameState.isGameOver()Z:134 - ReplaceConstant - Province cards ran out! -> 
   * Goal 50. Weak Mutation 92: org.cs362.dominion.GameState.isGameOver()Z:135 - ReplaceConstant - End game! -> 
   * Goal 51. Weak Mutation 93: org.cs362.dominion.GameState.isGameOver()Z:136 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 122: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceVariable players -> cards
   * Goal 53. Weak Mutation 123: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 124: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - ReplaceVariable playerScore -> gameBoard
   * Goal 55. Weak Mutation 126: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp Negation of score
   * Goal 56. Weak Mutation 127: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp IINC 1 score
   * Goal 57. Weak Mutation 128: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:160 - InsertUnaryOp IINC -1 score
   * Goal 58. Weak Mutation 129: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:163 - ReplaceVariable playerScore -> gameBoard
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "hE*Yct");
      gameState0.addPlayer(player0);
      gameState0.play();
  }

  //Test case number: 3
  /*
   * 27 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true
   * Goal 3. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 4. Branch org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true in context: org.cs362.dominion.GameState:getWinners()Ljava/util/HashMap;
   * Goal 5. [Output]: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:NonNull:java.util.HashMap:isEmpty()Z:True
   * Goal 6. [Output]: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:NonNull:java.util.HashMap:size()I:Zero
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 15. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 155
   * Goal 16. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 158
   * Goal 17. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 163
   * Goal 18. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 19. [METHOD] org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;
   * Goal 20. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 21. [METHODNOEX] org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;
   * Goal 22. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 24. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 25. Weak Mutation 122: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceVariable players -> cards
   * Goal 26. Weak Mutation 123: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 129: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:163 - ReplaceVariable playerScore -> gameBoard
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      gameState0.getWinners();
  }

  //Test case number: 4
  /*
   * 22 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 3. play()Ljava/util/HashMap;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 5. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 6. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 12. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 13. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 112
   * Goal 14. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 113
   * Goal 15. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 16. [METHOD] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 17. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 18. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 20. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 21. Weak Mutation 76: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:112 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      stack0.add((Card) null);
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 3. isGameOver()Z_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 5. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 6. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 12. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 13. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 14. [METHOD] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 15. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 16. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 18. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      // Undeclared exception!
      try { 
        gameState0.isGameOver();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Card", e);
      }
  }

  //Test case number: 6
  /*
   * 65 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false
   * Goal 3. org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true
   * Goal 4. org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false
   * Goal 5. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 6. Branch org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 7. Branch org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 8. Branch org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 9. initializeGame()V_java.lang.NullPointerException_IMPLICIT
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 18. org.cs362.dominion.GameState.initializeGame()V: Line 59
   * Goal 19. org.cs362.dominion.GameState.initializeGame()V: Line 65
   * Goal 20. org.cs362.dominion.GameState.initializeGame()V: Line 66
   * Goal 21. org.cs362.dominion.GameState.initializeGame()V: Line 69
   * Goal 22. org.cs362.dominion.GameState.initializeGame()V: Line 70
   * Goal 23. org.cs362.dominion.GameState.initializeGame()V: Line 71
   * Goal 24. org.cs362.dominion.GameState.initializeGame()V: Line 72
   * Goal 25. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 26. [METHOD] org.cs362.dominion.GameState.initializeGame()V
   * Goal 27. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 28. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 30. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 31. Weak Mutation 4: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 32. Weak Mutation 5: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 0
   * Goal 33. Weak Mutation 6: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 1
   * Goal 34. Weak Mutation 7: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> -1
   * Goal 35. Weak Mutation 8: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 3
   * Goal 36. Weak Mutation 9: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 5
   * Goal 37. Weak Mutation 10: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator > -> !=
   * Goal 38. Weak Mutation 13: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 39. Weak Mutation 14: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 0
   * Goal 40. Weak Mutation 15: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 1
   * Goal 41. Weak Mutation 16: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> -1
   * Goal 42. Weak Mutation 17: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 3
   * Goal 43. Weak Mutation 19: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 22: org.cs362.dominion.GameState.initializeGame()V:65 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 23: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 0
   * Goal 46. Weak Mutation 24: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 1
   * Goal 47. Weak Mutation 25: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> -1
   * Goal 48. Weak Mutation 26: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 9
   * Goal 49. Weak Mutation 27: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 11
   * Goal 50. Weak Mutation 28: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable selectedKindom -> Kingdom_Cards_Selected
   * Goal 51. Weak Mutation 30: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of selectedKindom
   * Goal 52. Weak Mutation 31: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 selectedKindom
   * Goal 53. Weak Mutation 32: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 selectedKindom
   * Goal 54. Weak Mutation 33: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> selectedKindom
   * Goal 55. Weak Mutation 34: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> embargoCoin
   * Goal 56. Weak Mutation 35: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of Kingdom_Cards_Selected
   * Goal 57. Weak Mutation 36: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 Kingdom_Cards_Selected
   * Goal 58. Weak Mutation 37: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 Kingdom_Cards_Selected
   * Goal 59. Weak Mutation 38: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceComparisonOperator >= -> -1
   * Goal 60. Weak Mutation 41: org.cs362.dominion.GameState.initializeGame()V:70 - ReplaceVariable cards -> players
   * Goal 61. Weak Mutation 42: org.cs362.dominion.GameState.initializeGame()V:71 - ReplaceVariable cards -> players
   * Goal 62. Weak Mutation 43: org.cs362.dominion.GameState.initializeGame()V:71 - ReplaceVariable random -> Kingdom_Cards_Selected
   * Goal 63. Weak Mutation 46: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp Negation of random
   * Goal 64. Weak Mutation 47: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp IINC 1 random
   * Goal 65. Weak Mutation 48: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp IINC -1 random
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, "");
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      gameState0.players = (List<Player>) arrayList0;
      stack0.add((Card) null);
      arrayList0.add((Player) null);
      arrayList0.add(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 31 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - false
   * Goal 4. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 5. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 6. Branch org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - false in context: org.cs362.dominion.GameState:getWinners()Ljava/util/HashMap;
   * Goal 7. getWinners()Ljava/util/HashMap;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 16. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 17. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 18. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 155
   * Goal 19. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 158
   * Goal 20. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 159
   * Goal 21. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 22. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 23. [METHOD] org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;
   * Goal 24. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 25. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 26. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 28. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 29. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 30. Weak Mutation 122: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceVariable players -> cards
   * Goal 31. Weak Mutation 123: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "");
      player0.drawCard();
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.getWinners();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Player", e);
      }
  }

  //Test case number: 8
  /*
   * 21 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 4. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 5. addPlayer(Lorg/cs362/dominion/Player;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 14. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 15. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 16. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 17. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 18. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 20. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 21. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "numActions: ");
      gameState0.players = null;
      // Undeclared exception!
      try { 
        gameState0.addPlayer(player0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  //Test case number: 9
  /*
   * 29 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - true
   * Goal 3. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 4. Branch org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - true in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 5. [Output]: org.cs362.dominion.GameState.isGameOver()Z:True
   * Goal 6. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 14. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 15. org.cs362.dominion.GameState.isGameOver()Z: Line 134
   * Goal 16. org.cs362.dominion.GameState.isGameOver()Z: Line 135
   * Goal 17. org.cs362.dominion.GameState.isGameOver()Z: Line 136
   * Goal 18. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 19. [METHOD] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 20. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 21. [METHODNOEX] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 22. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 24. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 25. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 26. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 91: org.cs362.dominion.GameState.isGameOver()Z:134 - ReplaceConstant - Province cards ran out! -> 
   * Goal 28. Weak Mutation 92: org.cs362.dominion.GameState.isGameOver()Z:135 - ReplaceConstant - End game! -> 
   * Goal 29. Weak Mutation 93: org.cs362.dominion.GameState.isGameOver()Z:136 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      gameState0.isGameOver();
  }

  //Test case number: 10
  /*
   * 60 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - false
   * Goal 3. org.cs362.dominion.GameState.isGameOver()Z: I19 Branch 13 IFNE L133 - true
   * Goal 4. org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - true
   * Goal 5. org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - false
   * Goal 6. org.cs362.dominion.GameState.isGameOver()Z: I57 Branch 15 IFNE L141 - true
   * Goal 7. org.cs362.dominion.GameState.isGameOver()Z: I65 Branch 16 IF_ICMPLT L143 - true
   * Goal 8. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 9. Branch org.cs362.dominion.GameState.isGameOver()Z: I19 Branch 13 IFNE L133 - true in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 10. Branch org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - false in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 11. Branch org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - true in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 12. Branch org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - false in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 13. Branch org.cs362.dominion.GameState.isGameOver()Z: I57 Branch 15 IFNE L141 - true in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 14. Branch org.cs362.dominion.GameState.isGameOver()Z: I65 Branch 16 IF_ICMPLT L143 - true in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 15. [Output]: org.cs362.dominion.GameState.isGameOver()Z:False
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 20. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 21. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 22. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 23. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 24. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 25. org.cs362.dominion.GameState.isGameOver()Z: Line 139
   * Goal 26. org.cs362.dominion.GameState.isGameOver()Z: Line 140
   * Goal 27. org.cs362.dominion.GameState.isGameOver()Z: Line 141
   * Goal 28. org.cs362.dominion.GameState.isGameOver()Z: Line 143
   * Goal 29. org.cs362.dominion.GameState.isGameOver()Z: Line 149
   * Goal 30. org.cs362.dominion.GameState.isGameOver()Z: Line 150
   * Goal 31. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 32. [METHOD] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 33. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 34. [METHODNOEX] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 35. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 37. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 38. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 39. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 87: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 41. Weak Mutation 89: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator != -> <
   * Goal 42. Weak Mutation 94: org.cs362.dominion.GameState.isGameOver()Z:139 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 95: org.cs362.dominion.GameState.isGameOver()Z:140 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 96: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceVariable i -> emptySupplyPile
   * Goal 45. Weak Mutation 97: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceVariable i -> embargoCoin
   * Goal 46. Weak Mutation 98: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 99: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 100: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 102: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 105: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceVariable emptySupplyPile -> i
   * Goal 51. Weak Mutation 107: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp Negation of emptySupplyPile
   * Goal 52. Weak Mutation 108: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp IINC 1 emptySupplyPile
   * Goal 53. Weak Mutation 109: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp IINC -1 emptySupplyPile
   * Goal 54. Weak Mutation 110: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 0
   * Goal 55. Weak Mutation 111: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 1
   * Goal 56. Weak Mutation 112: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> -1
   * Goal 57. Weak Mutation 113: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 2
   * Goal 58. Weak Mutation 114: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 4
   * Goal 59. Weak Mutation 116: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceComparisonOperator < -> -2
   * Goal 60. Weak Mutation 121: org.cs362.dominion.GameState.isGameOver()Z:150 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      Integer integer0 = new Integer(8);
      gameState0.gameBoard.put((Card) null, integer0);
      gameState0.isGameOver();
  }

  //Test case number: 11
  /*
   * 36 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - true
   * Goal 3. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - true
   * Goal 4. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I75 Branch 23 IFEQ L202 - false
   * Goal 5. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 6. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - true in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 7. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - true in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 8. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I75 Branch 23 IFEQ L202 - false in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 9. clone()Lorg/cs362/dominion/GameState;_java.lang.NullPointerException_IMPLICIT
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 18. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 194
   * Goal 19. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 195
   * Goal 20. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 196
   * Goal 21. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 198
   * Goal 22. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 200
   * Goal 23. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 202
   * Goal 24. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 203
   * Goal 25. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 26. [METHOD] org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;
   * Goal 27. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 28. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 30. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 31. Weak Mutation 149: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:198 - ReplaceVariable players -> cards
   * Goal 32. Weak Mutation 150: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:198 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 154: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:200 - ReplaceVariable cards -> players
   * Goal 34. Weak Mutation 155: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:200 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 159: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:202 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 160: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:203 - ReplaceVariable cloneGmeBoard -> gameBoard
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      gameState0.gameBoard.put((Card) null, (Integer) gameState0.embargoCoin);
      // Undeclared exception!
      try { 
        gameState0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.GameState", e);
      }
  }

  //Test case number: 12
  /*
   * 74 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - true
   * Goal 4. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - false
   * Goal 5. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - true
   * Goal 6. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - false
   * Goal 7. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I75 Branch 23 IFEQ L202 - true
   * Goal 8. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 9. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 10. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - false in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 11. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I27 Branch 21 IFEQ L198 - true in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 12. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - false in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 13. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I50 Branch 22 IFEQ L200 - true in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 14. Branch org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: I75 Branch 23 IFEQ L202 - true in context: org.cs362.dominion.GameState:clone()Lorg/cs362/dominion/GameState;
   * Goal 15. [Output]: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:NonNull
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 20. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 21. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 22. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 23. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 24. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 187
   * Goal 25. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 188
   * Goal 26. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 189
   * Goal 27. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 191
   * Goal 28. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 29. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 30. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 194
   * Goal 31. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 195
   * Goal 32. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 196
   * Goal 33. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 198
   * Goal 34. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 199
   * Goal 35. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 200
   * Goal 36. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 201
   * Goal 37. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 202
   * Goal 38. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 205
   * Goal 39. org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;: Line 206
   * Goal 40. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 41. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 42. [METHOD] org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;
   * Goal 43. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 44. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 45. [METHODNOEX] org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;
   * Goal 46. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 143: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 49. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 50. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 51. Weak Mutation 144: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:187 - ReplaceVariable cards -> players
   * Goal 52. Weak Mutation 145: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:187 - ReplaceVariable cards -> cards
   * Goal 53. Weak Mutation 146: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:188 - ReplaceVariable players -> players
   * Goal 54. Weak Mutation 147: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:188 - ReplaceVariable players -> cards
   * Goal 55. Weak Mutation 148: org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V:189 - ReplaceVariable gameBoard -> gameBoard
   * Goal 56. Weak Mutation 149: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:198 - ReplaceVariable players -> cards
   * Goal 57. Weak Mutation 150: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:198 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 151: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:199 - ReplaceVariable clonePlayers -> cloneCards
   * Goal 59. Weak Mutation 152: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:199 - ReplaceVariable clonePlayers -> players
   * Goal 60. Weak Mutation 153: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:199 - ReplaceVariable clonePlayers -> cards
   * Goal 61. Weak Mutation 154: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:200 - ReplaceVariable cards -> players
   * Goal 62. Weak Mutation 155: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:200 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 156: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:201 - ReplaceVariable cloneCards -> players
   * Goal 64. Weak Mutation 157: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:201 - ReplaceVariable cloneCards -> clonePlayers
   * Goal 65. Weak Mutation 158: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:201 - ReplaceVariable cloneCards -> cards
   * Goal 66. Weak Mutation 159: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:202 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 161: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable cloneCards -> players
   * Goal 68. Weak Mutation 162: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable cloneCards -> clonePlayers
   * Goal 69. Weak Mutation 163: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable cloneCards -> cards
   * Goal 70. Weak Mutation 164: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable clonePlayers -> cloneCards
   * Goal 71. Weak Mutation 165: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable clonePlayers -> players
   * Goal 72. Weak Mutation 166: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable clonePlayers -> cards
   * Goal 73. Weak Mutation 167: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:205 - ReplaceVariable cloneGmeBoard -> gameBoard
   * Goal 74. Weak Mutation 168: org.cs362.dominion.GameState.clone()Lorg/cs362/dominion/GameState;:206 - ReplaceVariable cloneState -> this
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "4");
      gameState0.addPlayer(player0);
      gameState0.clone();
  }

  //Test case number: 13
  /*
   * 26 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.toString()Ljava/lang/String;: I11 Branch 18 IFEQ L170 - false
   * Goal 3. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 4. Branch org.cs362.dominion.GameState.toString()Ljava/lang/String;: I11 Branch 18 IFEQ L170 - false in context: org.cs362.dominion.GameState:toString()Ljava/lang/String;
   * Goal 5. [Output]: org.cs362.dominion.GameState.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 14. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 169
   * Goal 15. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 170
   * Goal 16. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 171
   * Goal 17. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 183
   * Goal 18. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 19. [METHOD] org.cs362.dominion.GameState.toString()Ljava/lang/String;
   * Goal 20. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 21. [METHODNOEX] org.cs362.dominion.GameState.toString()Ljava/lang/String;
   * Goal 22. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 24. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 25. Weak Mutation 130: org.cs362.dominion.GameState.toString()Ljava/lang/String;:170 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 131: org.cs362.dominion.GameState.toString()Ljava/lang/String;:171 - ReplaceConstant - The board game is embty you need to intialize the game!!!! -> 
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      gameState0.toString();
  }

  //Test case number: 14
  /*
   * 34 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.toString()Ljava/lang/String;: I11 Branch 18 IFEQ L170 - true
   * Goal 3. org.cs362.dominion.GameState.toString()Ljava/lang/String;: I28 Branch 19 IFEQ L173 - true
   * Goal 4. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 5. Branch org.cs362.dominion.GameState.toString()Ljava/lang/String;: I11 Branch 18 IFEQ L170 - true in context: org.cs362.dominion.GameState:toString()Ljava/lang/String;
   * Goal 6. Branch org.cs362.dominion.GameState.toString()Ljava/lang/String;: I28 Branch 19 IFEQ L173 - true in context: org.cs362.dominion.GameState:toString()Ljava/lang/String;
   * Goal 7. toString()Ljava/lang/String;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 16. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 169
   * Goal 17. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 170
   * Goal 18. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 173
   * Goal 19. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 175
   * Goal 20. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 176
   * Goal 21. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 177
   * Goal 22. org.cs362.dominion.GameState.toString()Ljava/lang/String;: Line 178
   * Goal 23. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 24. [METHOD] org.cs362.dominion.GameState.toString()Ljava/lang/String;
   * Goal 25. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 26. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 28. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 29. Weak Mutation 130: org.cs362.dominion.GameState.toString()Ljava/lang/String;:170 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 132: org.cs362.dominion.GameState.toString()Ljava/lang/String;:173 - ReplaceVariable players -> cards
   * Goal 31. Weak Mutation 133: org.cs362.dominion.GameState.toString()Ljava/lang/String;:173 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 136: org.cs362.dominion.GameState.toString()Ljava/lang/String;:175 - ReplaceConstant -  --- gameBoard --- 
 -> 
   * Goal 33. Weak Mutation 137: org.cs362.dominion.GameState.toString()Ljava/lang/String;:176 - ReplaceConstant - Cards on the table: 
 -> 
   * Goal 34. Weak Mutation 138: org.cs362.dominion.GameState.toString()Ljava/lang/String;:177 - ReplaceConstant - Card Name 		 NumberCards: 
 -> 
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((GameState) null, "H?O");
      GameState gameState0 = new GameState(player0.playedCards);
      gameState0.gameBoard.put((Card) null, (Integer) 0);
      // Undeclared exception!
      try { 
        gameState0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.TreeMap", e);
      }
  }

  //Test case number: 15
  /*
   * 33 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - false
   * Goal 3. org.cs362.dominion.GameState.isGameOver()Z: I19 Branch 13 IFNE L133 - false
   * Goal 4. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 5. Branch org.cs362.dominion.GameState.isGameOver()Z: I19 Branch 13 IFNE L133 - false in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 6. Branch org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - false in context: org.cs362.dominion.GameState:isGameOver()Z
   * Goal 7. [Output]: org.cs362.dominion.GameState.isGameOver()Z:True
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 16. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 17. org.cs362.dominion.GameState.isGameOver()Z: Line 134
   * Goal 18. org.cs362.dominion.GameState.isGameOver()Z: Line 135
   * Goal 19. org.cs362.dominion.GameState.isGameOver()Z: Line 136
   * Goal 20. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 21. [METHOD] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 22. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 23. [METHODNOEX] org.cs362.dominion.GameState.isGameOver()Z
   * Goal 24. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 26. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 27. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 28. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 87: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 30. Weak Mutation 88: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator != -> -1
   * Goal 31. Weak Mutation 91: org.cs362.dominion.GameState.isGameOver()Z:134 - ReplaceConstant - Province cards ran out! -> 
   * Goal 32. Weak Mutation 92: org.cs362.dominion.GameState.isGameOver()Z:135 - ReplaceConstant - End game! -> 
   * Goal 33. Weak Mutation 93: org.cs362.dominion.GameState.isGameOver()Z:136 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      gameState0.gameBoard.put((Card) null, (Integer) 0);
      gameState0.isGameOver();
  }

  //Test case number: 16
  /*
   * 65 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - false
   * Goal 3. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I21 Branch 11 IFEQ L115 - true
   * Goal 4. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - false
   * Goal 5. org.cs362.dominion.GameState.isGameOver()Z: I19 Branch 13 IFNE L133 - true
   * Goal 6. org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - true
   * Goal 7. org.cs362.dominion.GameState.isGameOver()Z: I48 Branch 14 IFEQ L140 - false
   * Goal 8. org.cs362.dominion.GameState.isGameOver()Z: I57 Branch 15 IFNE L141 - true
   * Goal 9. org.cs362.dominion.GameState.isGameOver()Z: I65 Branch 16 IF_ICMPLT L143 - true
   * Goal 10. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 11. Branch org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - false in context: org.cs362.dominion.GameState:play()Ljava/util/HashMap;
   * Goal 12. Branch org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I21 Branch 11 IFEQ L115 - true in context: org.cs362.dominion.GameState:play()Ljava/util/HashMap;
   * Goal 13. play()Ljava/util/HashMap;_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 20. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 21. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 22. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 23. org.cs362.dominion.GameState.isGameOver()Z: Line 139
   * Goal 24. org.cs362.dominion.GameState.isGameOver()Z: Line 140
   * Goal 25. org.cs362.dominion.GameState.isGameOver()Z: Line 141
   * Goal 26. org.cs362.dominion.GameState.isGameOver()Z: Line 143
   * Goal 27. org.cs362.dominion.GameState.isGameOver()Z: Line 149
   * Goal 28. org.cs362.dominion.GameState.isGameOver()Z: Line 150
   * Goal 29. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 112
   * Goal 30. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 113
   * Goal 31. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 114
   * Goal 32. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 115
   * Goal 33. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 34. [METHOD] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 35. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 36. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 38. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 39. Weak Mutation 76: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:112 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 77: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:113 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 78: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:115 - ReplaceVariable players -> cards
   * Goal 42. Weak Mutation 79: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:115 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 44. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 87: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 46. Weak Mutation 90: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator != -> >
   * Goal 47. Weak Mutation 94: org.cs362.dominion.GameState.isGameOver()Z:139 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 95: org.cs362.dominion.GameState.isGameOver()Z:140 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 96: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceVariable i -> emptySupplyPile
   * Goal 50. Weak Mutation 97: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceVariable i -> embargoCoin
   * Goal 51. Weak Mutation 98: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 99: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 100: org.cs362.dominion.GameState.isGameOver()Z:141 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 103: org.cs362.dominion.GameState.isGameOver()Z:141 - ReplaceComparisonOperator != -> >
   * Goal 55. Weak Mutation 105: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceVariable emptySupplyPile -> i
   * Goal 56. Weak Mutation 107: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp Negation of emptySupplyPile
   * Goal 57. Weak Mutation 108: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp IINC 1 emptySupplyPile
   * Goal 58. Weak Mutation 109: org.cs362.dominion.GameState.isGameOver()Z:143 - InsertUnaryOp IINC -1 emptySupplyPile
   * Goal 59. Weak Mutation 110: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 0
   * Goal 60. Weak Mutation 111: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 1
   * Goal 61. Weak Mutation 112: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> -1
   * Goal 62. Weak Mutation 113: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 2
   * Goal 63. Weak Mutation 114: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceConstant - 3 -> 4
   * Goal 64. Weak Mutation 116: org.cs362.dominion.GameState.isGameOver()Z:143 - ReplaceComparisonOperator < -> -2
   * Goal 65. Weak Mutation 121: org.cs362.dominion.GameState.isGameOver()Z:150 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((GameState) null, "H?O");
      GameState gameState0 = new GameState(player0.playedCards);
      Integer integer0 = new Integer((-4));
      gameState0.gameBoard.put((Card) null, integer0);
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 17
  /*
   * 43 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - true
   * Goal 3. org.cs362.dominion.GameState.isGameOver()Z: I9 Branch 12 IFNULL L133 - true
   * Goal 4. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: I15 Branch 17 IFEQ L158 - true
   * Goal 5. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 6. Branch org.cs362.dominion.GameState.play()Ljava/util/HashMap;: I8 Branch 10 IFNE L113 - true in context: org.cs362.dominion.GameState:play()Ljava/util/HashMap;
   * Goal 7. [Output]: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:NonNull:java.util.HashMap:isEmpty()Z:True
   * Goal 8. [Output]: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:NonNull:java.util.HashMap:size()I:Zero
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 17. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 155
   * Goal 18. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 158
   * Goal 19. org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;: Line 163
   * Goal 20. org.cs362.dominion.GameState.isGameOver()Z: Line 133
   * Goal 21. org.cs362.dominion.GameState.isGameOver()Z: Line 134
   * Goal 22. org.cs362.dominion.GameState.isGameOver()Z: Line 135
   * Goal 23. org.cs362.dominion.GameState.isGameOver()Z: Line 136
   * Goal 24. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 112
   * Goal 25. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 113
   * Goal 26. org.cs362.dominion.GameState.play()Ljava/util/HashMap;: Line 129
   * Goal 27. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 28. [METHOD] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 29. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 30. [METHODNOEX] org.cs362.dominion.GameState.play()Ljava/util/HashMap;
   * Goal 31. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 33. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 34. Weak Mutation 76: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:112 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 77: org.cs362.dominion.GameState.play()Ljava/util/HashMap;:113 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 85: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceVariable cards -> players
   * Goal 37. Weak Mutation 86: org.cs362.dominion.GameState.isGameOver()Z:133 - ReplaceComparisonOperator = null -> != null
   * Goal 38. Weak Mutation 91: org.cs362.dominion.GameState.isGameOver()Z:134 - ReplaceConstant - Province cards ran out! -> 
   * Goal 39. Weak Mutation 92: org.cs362.dominion.GameState.isGameOver()Z:135 - ReplaceConstant - End game! -> 
   * Goal 40. Weak Mutation 93: org.cs362.dominion.GameState.isGameOver()Z:136 - ReplaceConstant - 1 -> 0
   * Goal 41. Weak Mutation 122: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceVariable players -> cards
   * Goal 42. Weak Mutation 123: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:158 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 129: org.cs362.dominion.GameState.getWinners()Ljava/util/HashMap;:163 - ReplaceVariable playerScore -> gameBoard
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      GameState gameState0 = new GameState((List<Card>) stack0);
      gameState0.play();
      assertEquals(0, gameState0.embargoCoin);
  }

  //Test case number: 18
  /*
   * 38 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false
   * Goal 3. org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - false
   * Goal 4. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 5. Branch org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 6. Branch org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 7. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 8. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 9. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 10. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 11. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 12. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 13. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 15. org.cs362.dominion.GameState.initializeGame()V: Line 59
   * Goal 16. org.cs362.dominion.GameState.initializeGame()V: Line 61
   * Goal 17. org.cs362.dominion.GameState.initializeGame()V: Line 62
   * Goal 18. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 19. [METHOD] org.cs362.dominion.GameState.initializeGame()V
   * Goal 20. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 21. [METHODNOEX] org.cs362.dominion.GameState.initializeGame()V
   * Goal 22. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 24. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 25. Weak Mutation 4: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 26. Weak Mutation 5: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 0
   * Goal 27. Weak Mutation 6: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 1
   * Goal 28. Weak Mutation 7: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> -1
   * Goal 29. Weak Mutation 8: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 3
   * Goal 30. Weak Mutation 9: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 5
   * Goal 31. Weak Mutation 10: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator > -> !=
   * Goal 32. Weak Mutation 13: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 33. Weak Mutation 14: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 0
   * Goal 34. Weak Mutation 15: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 1
   * Goal 35. Weak Mutation 16: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> -1
   * Goal 36. Weak Mutation 17: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 3
   * Goal 37. Weak Mutation 18: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 21: org.cs362.dominion.GameState.initializeGame()V:61 - ReplaceConstant - the number of players mus be between 2 and 4  -> 
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.initializeGame();
      assertEquals(0, gameState0.embargoCoin);
  }

  //Test case number: 19
  /*
   * 75 covered goals:
   * Goal 1. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch
   * Goal 2. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch
   * Goal 3. org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false
   * Goal 4. org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true
   * Goal 5. org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false
   * Goal 6. org.cs362.dominion.GameState.initializeGame()V: I54 Branch 4 IF_ACMPEQ L72 - false
   * Goal 7. Branch org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: root-Branch in context: org.cs362.dominion.GameState:<init>(Ljava/util/List;)V
   * Goal 8. Branch org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: root-Branch in context: org.cs362.dominion.GameState:addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 9. Branch org.cs362.dominion.GameState.initializeGame()V: I11 Branch 2 IF_ICMPGE L59 - true in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 10. Branch org.cs362.dominion.GameState.initializeGame()V: I6 Branch 1 IF_ICMPGT L59 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 11. Branch org.cs362.dominion.GameState.initializeGame()V: I32 Branch 3 IF_ICMPGE L69 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 12. Branch org.cs362.dominion.GameState.initializeGame()V: I54 Branch 4 IF_ACMPEQ L72 - false in context: org.cs362.dominion.GameState:initializeGame()V
   * Goal 13. initializeGame()V_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 14. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 36
   * Goal 15. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 38
   * Goal 16. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 39
   * Goal 17. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 42
   * Goal 18. org.cs362.dominion.GameState.<init>(Ljava/util/List;)V: Line 44
   * Goal 19. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 36
   * Goal 20. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 38
   * Goal 21. org.cs362.dominion.GameState.<init>(Ljava/util/List;Ljava/util/List;Ljava/util/HashMap;)V: Line 39
   * Goal 22. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 46
   * Goal 23. org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V: Line 47
   * Goal 24. org.cs362.dominion.GameState.initializeGame()V: Line 59
   * Goal 25. org.cs362.dominion.GameState.initializeGame()V: Line 65
   * Goal 26. org.cs362.dominion.GameState.initializeGame()V: Line 66
   * Goal 27. org.cs362.dominion.GameState.initializeGame()V: Line 69
   * Goal 28. org.cs362.dominion.GameState.initializeGame()V: Line 70
   * Goal 29. org.cs362.dominion.GameState.initializeGame()V: Line 71
   * Goal 30. org.cs362.dominion.GameState.initializeGame()V: Line 72
   * Goal 31. [METHOD] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 32. [METHOD] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 33. [METHOD] org.cs362.dominion.GameState.initializeGame()V
   * Goal 34. [METHODNOEX] org.cs362.dominion.GameState.<init>(Ljava/util/List;)V
   * Goal 35. [METHODNOEX] org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V
   * Goal 36. Weak Mutation 0: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:39 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 1: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> players
   * Goal 38. Weak Mutation 2: org.cs362.dominion.GameState.<init>(Ljava/util/List;)V:42 - ReplaceVariable cards -> cards
   * Goal 39. Weak Mutation 3: org.cs362.dominion.GameState.addPlayer(Lorg/cs362/dominion/Player;)V:46 - ReplaceVariable players -> cards
   * Goal 40. Weak Mutation 4: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 41. Weak Mutation 5: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 0
   * Goal 42. Weak Mutation 6: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 1
   * Goal 43. Weak Mutation 7: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> -1
   * Goal 44. Weak Mutation 8: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 3
   * Goal 45. Weak Mutation 9: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 4 -> 5
   * Goal 46. Weak Mutation 10: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator > -> !=
   * Goal 47. Weak Mutation 13: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceVariable players -> cards
   * Goal 48. Weak Mutation 14: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 0
   * Goal 49. Weak Mutation 15: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 1
   * Goal 50. Weak Mutation 16: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> -1
   * Goal 51. Weak Mutation 17: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceConstant - 2 -> 3
   * Goal 52. Weak Mutation 19: org.cs362.dominion.GameState.initializeGame()V:59 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 22: org.cs362.dominion.GameState.initializeGame()V:65 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 23: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 0
   * Goal 55. Weak Mutation 24: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 1
   * Goal 56. Weak Mutation 25: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> -1
   * Goal 57. Weak Mutation 26: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 9
   * Goal 58. Weak Mutation 27: org.cs362.dominion.GameState.initializeGame()V:66 - ReplaceConstant - 10 -> 11
   * Goal 59. Weak Mutation 28: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable selectedKindom -> Kingdom_Cards_Selected
   * Goal 60. Weak Mutation 30: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of selectedKindom
   * Goal 61. Weak Mutation 31: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 selectedKindom
   * Goal 62. Weak Mutation 32: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 selectedKindom
   * Goal 63. Weak Mutation 33: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> selectedKindom
   * Goal 64. Weak Mutation 34: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceVariable Kingdom_Cards_Selected -> embargoCoin
   * Goal 65. Weak Mutation 35: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp Negation of Kingdom_Cards_Selected
   * Goal 66. Weak Mutation 36: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC 1 Kingdom_Cards_Selected
   * Goal 67. Weak Mutation 37: org.cs362.dominion.GameState.initializeGame()V:69 - InsertUnaryOp IINC -1 Kingdom_Cards_Selected
   * Goal 68. Weak Mutation 38: org.cs362.dominion.GameState.initializeGame()V:69 - ReplaceComparisonOperator >= -> -1
   * Goal 69. Weak Mutation 41: org.cs362.dominion.GameState.initializeGame()V:70 - ReplaceVariable cards -> players
   * Goal 70. Weak Mutation 42: org.cs362.dominion.GameState.initializeGame()V:71 - ReplaceVariable cards -> players
   * Goal 71. Weak Mutation 43: org.cs362.dominion.GameState.initializeGame()V:71 - ReplaceVariable random -> Kingdom_Cards_Selected
   * Goal 72. Weak Mutation 46: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp Negation of random
   * Goal 73. Weak Mutation 47: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp IINC 1 random
   * Goal 74. Weak Mutation 48: org.cs362.dominion.GameState.initializeGame()V:71 - InsertUnaryOp IINC -1 random
   * Goal 75. Weak Mutation 49: org.cs362.dominion.GameState.initializeGame()V:72 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "4");
      gameState0.addPlayer(player0);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
