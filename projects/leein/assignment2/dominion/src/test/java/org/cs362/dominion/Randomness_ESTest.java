/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 01 03:22:11 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.cs362.dominion.Randomness;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Randomness_ESTest extends Randomness_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 48 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - true
   * Goal 3. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - false
   * Goal 4. Branch org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch in context: org.cs362.dominion.Randomness:nextRandomInt(I)I
   * Goal 5. Branch org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - true in context: org.cs362.dominion.Randomness:main([Ljava/lang/String;)V
   * Goal 6. Branch org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - false in context: org.cs362.dominion.Randomness:main([Ljava/lang/String;)V
   * Goal 7. main([Ljava/lang/String;)V_org.evosuite.runtime.System$SystemExitException_IMPLICIT
   * Goal 8. [Output]: org.cs362.dominion.Randomness.nextRandomInt(I)I:Zero
   * Goal 9. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: Line 45
   * Goal 10. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: Line 46
   * Goal 11. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: Line 48
   * Goal 12. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 13. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 14. [METHOD] org.cs362.dominion.Randomness.main([Ljava/lang/String;)V
   * Goal 15. [METHOD] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 16. [METHODNOEX] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 17. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 21. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 22. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 23. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 24. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 11: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - ReplaceVariable i -> totalCallsToRandom
   * Goal 26. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 24: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 25: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceVariable i -> totalCallsToRandom
   * Goal 31. Weak Mutation 26: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp Negation of i
   * Goal 32. Weak Mutation 27: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp IINC 1 i
   * Goal 33. Weak Mutation 28: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp IINC -1 i
   * Goal 34. Weak Mutation 29: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 0
   * Goal 35. Weak Mutation 30: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 1
   * Goal 36. Weak Mutation 31: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> -1
   * Goal 37. Weak Mutation 32: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 9
   * Goal 38. Weak Mutation 33: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 11
   * Goal 39. Weak Mutation 34: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 35: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 37: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - value=:  -> 
   * Goal 42. Weak Mutation 38: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 0
   * Goal 43. Weak Mutation 39: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 1
   * Goal 44. Weak Mutation 40: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> -1
   * Goal 45. Weak Mutation 41: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 9
   * Goal 46. Weak Mutation 42: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 11
   * Goal 47. Weak Mutation 43: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:48 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 44: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:48 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Randomness.nextRandomInt(1132);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        Randomness.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.evosuite.runtime.System", e);
      }
  }

  //Test case number: 1
  /*
   * 29 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false
   * Goal 3. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true
   * Goal 4. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true
   * Goal 5. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 6. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 7. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 8. [Output]: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:Null
   * Goal 9. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 10. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 11. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 36
   * Goal 12. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 38
   * Goal 13. [METHOD] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 15. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 17. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 18. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 19. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 20. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 21. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 22. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 23. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 15: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 17: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator <= -> ==
   * Goal 28. Weak Mutation 20: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 21: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      String string0 = Randomness.randomMember((List<String>) linkedList0);
      assertNull(string0);
  }

  //Test case number: 2
  /*
   * 19 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. Branch org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch in context: org.cs362.dominion.Randomness:nextRandomInt(I)I
   * Goal 3. [Output]: org.cs362.dominion.Randomness.nextRandomInt(I)I:Positive
   * Goal 4. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 5. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 6. [METHOD] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 7. [METHODNOEX] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 8. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 9. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 10. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 11. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 12. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 13. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 14. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 15. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 16. Weak Mutation 11: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - ReplaceVariable i -> totalCallsToRandom
   * Goal 17. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 18. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 19. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      int int0 = Randomness.nextRandomInt(1757);
      assertEquals(1, int0);
  }

  //Test case number: 3
  /*
   * 28 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false
   * Goal 3. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true
   * Goal 4. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true
   * Goal 5. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 6. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 7. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 8. randomMember(Ljava/util/List;)Ljava/lang/Object;_java.lang.NullPointerException_IMPLICIT
   * Goal 9. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 10. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 11. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 36
   * Goal 12. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 38
   * Goal 13. [METHOD] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 14. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 15. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 16. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 17. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 19. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 20. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 21. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 22. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 23. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 24. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   * Goal 25. Weak Mutation 15: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 17: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator <= -> ==
   * Goal 27. Weak Mutation 20: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 21: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Randomness.random = null;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1);
      linkedList0.push(integer0);
      // Undeclared exception!
      try { 
        Randomness.randomMember((List<Integer>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Randomness", e);
      }
  }

  //Test case number: 4
  /*
   * 18 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. Branch org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch in context: org.cs362.dominion.Randomness:nextRandomInt(I)I
   * Goal 3. nextRandomInt(I)I_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 5. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 6. [METHOD] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 7. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 8. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 9. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 10. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 11. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 12. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 13. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 14. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 11: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - ReplaceVariable i -> totalCallsToRandom
   * Goal 16. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 17. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 18. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Randomness.random = null;
      // Undeclared exception!
      try { 
        Randomness.nextRandomInt(2096);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Randomness", e);
      }
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. Branch org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch in context: org.cs362.dominion.Randomness:nextRandomInt(I)I
   * Goal 3. nextRandomInt(I)I_java.lang.ArithmeticException_IMPLICIT
   * Goal 4. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 5. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 6. [METHOD] org.cs362.dominion.Randomness.nextRandomInt(I)I
   * Goal 7. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 8. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 9. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 10. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 11. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 12. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 13. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 14. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 11: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - ReplaceVariable i -> totalCallsToRandom
   * Goal 16. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 17. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 18. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Randomness.nextRandomInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 37 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - false
   * Goal 3. Branch org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: I7 Branch 4 IF_ICMPGE L45 - false in context: org.cs362.dominion.Randomness:main([Ljava/lang/String;)V
   * Goal 4. main([Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 5. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: Line 45
   * Goal 6. org.cs362.dominion.Randomness.main([Ljava/lang/String;)V: Line 46
   * Goal 7. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 8. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 9. [METHOD] org.cs362.dominion.Randomness.main([Ljava/lang/String;)V
   * Goal 10. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 11. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 12. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 13. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 14. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 15. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 16. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 17. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 18. Weak Mutation 11: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - ReplaceVariable i -> totalCallsToRandom
   * Goal 19. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 20. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 21. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   * Goal 22. Weak Mutation 24: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 26: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 27: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 28: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 29: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 0
   * Goal 27. Weak Mutation 30: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 1
   * Goal 28. Weak Mutation 31: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> -1
   * Goal 29. Weak Mutation 32: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 9
   * Goal 30. Weak Mutation 33: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceConstant - 10 -> 11
   * Goal 31. Weak Mutation 34: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:45 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 37: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - value=:  -> 
   * Goal 33. Weak Mutation 38: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 0
   * Goal 34. Weak Mutation 39: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 1
   * Goal 35. Weak Mutation 40: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> -1
   * Goal 36. Weak Mutation 41: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 9
   * Goal 37. Weak Mutation 42: org.cs362.dominion.Randomness.main([Ljava/lang/String;)V:46 - ReplaceConstant - 10 -> 11
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Randomness.random = null;
      // Undeclared exception!
      try { 
        Randomness.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Randomness", e);
      }
  }

  //Test case number: 7
  /*
   * 29 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.nextRandomInt(I)I: root-Branch
   * Goal 2. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false
   * Goal 3. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true
   * Goal 4. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true
   * Goal 5. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 6. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 7. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 8. [Output]: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:NonNull
   * Goal 9. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 32
   * Goal 10. org.cs362.dominion.Randomness.nextRandomInt(I)I: Line 33
   * Goal 11. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 36
   * Goal 12. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 38
   * Goal 13. [METHOD] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 15. Weak Mutation 3: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 4: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp +1
   * Goal 17. Weak Mutation 5: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - InsertUnaryOp -1
   * Goal 18. Weak Mutation 6: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceConstant - 1 -> 0
   * Goal 19. Weak Mutation 7: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> %
   * Goal 20. Weak Mutation 8: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> -
   * Goal 21. Weak Mutation 9: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> *
   * Goal 22. Weak Mutation 10: org.cs362.dominion.Randomness.nextRandomInt(I)I:32 - ReplaceArithmeticOperator + -> /
   * Goal 23. Weak Mutation 12: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 13: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 14: org.cs362.dominion.Randomness.nextRandomInt(I)I:33 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 15: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 17: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator <= -> ==
   * Goal 28. Weak Mutation 20: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 21: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1);
      linkedList0.push(integer0);
      Integer integer1 = Randomness.randomMember((List<Integer>) linkedList0);
      assertEquals(1, (int)integer1);
  }

  //Test case number: 8
  /*
   * 16 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false
   * Goal 2. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - false
   * Goal 3. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - false
   * Goal 4. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I6 Branch 2 IFLE L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 5. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I12 Branch 3 IFEQ L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 6. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - false in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 7. randomMember(Ljava/util/List;)Ljava/lang/Object;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 8. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 36
   * Goal 9. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 37
   * Goal 10. [METHOD] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 11. Weak Mutation 15: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator = null -> != null
   * Goal 12. Weak Mutation 16: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator <= -> -1
   * Goal 13. Weak Mutation 19: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceConstant - 1 -> 0
   * Goal 14. Weak Mutation 21: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 22: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:37 - ReplaceConstant - Expected non-empty list -> 
   * Goal 16. Weak Mutation 23: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:37 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        Randomness.randomMember((List<Integer>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected non-empty list
         //
         assertThrownBy("org.cs362.dominion.Randomness", e);
      }
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - true
   * Goal 2. Branch org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: I3 Branch 1 IFNULL L36 - true in context: org.cs362.dominion.Randomness:randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 3. randomMember(Ljava/util/List;)Ljava/lang/Object;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 36
   * Goal 5. org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;: Line 37
   * Goal 6. [METHOD] org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;
   * Goal 7. Weak Mutation 15: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:36 - ReplaceComparisonOperator = null -> != null
   * Goal 8. Weak Mutation 22: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:37 - ReplaceConstant - Expected non-empty list -> 
   * Goal 9. Weak Mutation 23: org.cs362.dominion.Randomness.randomMember(Ljava/util/List;)Ljava/lang/Object;:37 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Randomness.randomMember((List<Object>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected non-empty list
         //
         assertThrownBy("org.cs362.dominion.Randomness", e);
      }
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * Goal 1. org.cs362.dominion.Randomness.reset(J)V: root-Branch
   * Goal 2. Branch org.cs362.dominion.Randomness.reset(J)V: root-Branch in context: org.cs362.dominion.Randomness:reset(J)V
   * Goal 3. org.cs362.dominion.Randomness.reset(J)V: Line 22
   * Goal 4. org.cs362.dominion.Randomness.reset(J)V: Line 23
   * Goal 5. [METHOD] org.cs362.dominion.Randomness.reset(J)V
   * Goal 6. [METHODNOEX] org.cs362.dominion.Randomness.reset(J)V
   * Goal 7. Weak Mutation 0: org.cs362.dominion.Randomness.reset(J)V:22 - ReplaceVariable newSeed -> SEED
   * Goal 8. Weak Mutation 1: org.cs362.dominion.Randomness.reset(J)V:22 - InsertUnaryOp Negation of newSeed
   * Goal 9. Weak Mutation 2: org.cs362.dominion.Randomness.reset(J)V:22 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Randomness.reset(1730L);
  }
}
