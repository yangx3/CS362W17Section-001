/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 05:54:09 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      ActionCard actionCard0 = new ActionCard("", "", 795, 0);
      arrayList0.add((Card) actionCard0);
      player0.deck = arrayList0;
      player0.draw_from_board_to_deck(board0, 32);
      assertEquals(2, arrayList0.size());
      
      int int0 = player0.calculate_victory();
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player("mrcOi`i");
      player0.draw_from_deck();
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      player0.buy_phase(board0);
      player0.clean_up_phase();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player("");
      Random.setNextRandom(193);
      ArrayList<Card> arrayList0 = player0.deck;
      player0.hand = arrayList0;
      Board board0 = new Board(player0.hand);
      player0.buy_phase(board0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player("]@|_*dXGhkcXkcM");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      ActionCard actionCard0 = new ActionCard("x&QlA}z\"4Lw^}22", "x&QlA}z\"4Lw^}22", 1266, 369);
      actionCard0.bureaucrat(player0, player0, board0);
      // Undeclared exception!
      try { 
        actionCard0.council_room(player0, (Player) null, board0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ActionCard", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(")Ycp%]!nUx~r+NZ");
      player0.draw_from_deck();
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Board board0 = new Board(arrayList0);
      ActionCard actionCard0 = new ActionCard(")Ycp%]!nUx~r+NZ", ")Ycp%]!nUx~r+NZ", (-234), (-234));
      actionCard0.village(player0, player0, board0);
      // Undeclared exception!
      try { 
        player0.draw_from_deck();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.discard;
      Board board0 = new Board(arrayList0);
      player0.draw_from_board_to_in_play(board0, 0);
      player0.print_in_play();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((String) null);
      ActionCard actionCard0 = new ActionCard((String) null, (String) null, 0, 0);
      ArrayList<Card> arrayList0 = player0.discard;
      Board board0 = new Board(arrayList0);
      actionCard0.council_room(player0, player0, board0);
      player0.print_discard();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player("");
      player0.shuffle_in_play();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player("");
      player0.shuffle_discard();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player("'V8&eYX7vU(k-z(.+");
      player0.draw_from_deck_to_hand();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(")Ycp%]!Ux~r+NZ");
      player0.draw_from_deck();
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      player0.draw_from_hand_to_trash(board0, 0);
      assertEquals(5, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.discard;
      Board board0 = new Board(arrayList0);
      player0.draw_from_board_to_hand(board0, 0);
      player0.draw_from_hand_to_deck(0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = Player.random_range(0, 207);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = Player.random_range(4238, (-1625));
      assertEquals(4238, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = Player.random_range((-1625), 0);
      assertEquals((-1625), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Integer> arrayList0 = player0.in_hand("");
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      player0.hand = arrayList0;
      Card card0 = new Card();
      arrayList0.add(card0);
      ArrayList<Integer> arrayList1 = player0.in_hand((String) null);
      assertFalse(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      player0.deck = arrayList0;
      assertEquals(0, player0.deck.size());
      
      int int0 = player0.calculate_victory();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player("");
      player0.in_play = null;
      // Undeclared exception!
      try { 
        player0.shuffle_in_play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player("M_&5mf8%s//Iy*R3;LW");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.shuffle_discard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player("~?^Of");
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.print_hand();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player("\nPlaying council_room card.\n");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.print_discard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      arrayList0.add((Card) null);
      player0.deck = arrayList0;
      // Undeclared exception!
      try { 
        player0.print_deck();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player("Gt0uV|n'$LU_");
      player0.in_play = null;
      // Undeclared exception!
      try { 
        player0.in_play_by_name("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player("\nPlaying cellar card.\n");
      ArrayList<Card> arrayList0 = player0.in_play;
      arrayList0.add((Card) null);
      player0.hand = arrayList0;
      // Undeclared exception!
      try { 
        player0.in_hand("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player("2gUVYm/.940");
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_in_play_to_trash(board0, 7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 7, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player("upUDs+94z");
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_in_play_to_trash(board0, (-951));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player("f80#");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_hand_to_trash(board0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_hand_to_trash(board0, (-3730));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((String) null);
      // Undeclared exception!
      try { 
        player0.draw_from_hand_to_deck(1482);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1482, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player("");
      player0.deck = null;
      // Undeclared exception!
      try { 
        player0.draw_from_deck_to_hand();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player("");
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.draw_from_deck();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player("");
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_in_play((Board) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player("estate");
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_in_play(board0, 588);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 588, Size: 150
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player("\n cost:  ");
      Board board0 = new Board(player0.discard);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_in_play(board0, (-1625));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1625
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player("dCev|@f");
      ArrayList<Card> arrayList0 = player0.hand;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_hand(board0, 721);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 721, Size: 150
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player("!>isT&KTqj");
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_hand(board0, (-2891));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player("");
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_discard((Board) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_discard(board0, 732);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 732, Size: 244
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player("vow's$u]9&%8a#j-");
      Board board0 = new Board(player0.deck);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_discard(board0, (-202));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -202
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player("w2otU/Lr7]iM'>sV");
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_deck((Board) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player("silver");
      ArrayList<Card> arrayList0 = player0.hand;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_deck(board0, 331);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 331, Size: 150
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player("\nPlaying festival card.\n");
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_deck(board0, (-2664));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2664
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((String) null);
      player0.in_play = null;
      // Undeclared exception!
      try { 
        player0.clean_up_phase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.hand;
      Board board0 = new Board(arrayList0);
      arrayList0.add((Card) null);
      // Undeclared exception!
      try { 
        player0.action_phase(board0, player0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      player0.deck = arrayList0;
      player0.draw_from_board_to_deck(board0, 32);
      assertEquals(1, arrayList0.size());
      
      player0.clean_up_phase();
      int int0 = player0.calculate_victory();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player("treasure");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      player0.draw_from_board_to_discard(board0, 18);
      assertEquals(0, arrayList0.size());
      
      int int0 = player0.calculate_victory();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      player0.deck = arrayList0;
      player0.draw_from_board_to_deck(board0, 32);
      player0.hand = arrayList0;
      assertEquals(1, arrayList0.size());
      
      int int0 = player0.calculate_victory();
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((String) null);
      ActionCard actionCard0 = new ActionCard((String) null, (String) null, 0, 0);
      ArrayList<Card> arrayList0 = player0.discard;
      Board board0 = new Board(arrayList0);
      actionCard0.council_room(player0, player0, board0);
      assertFalse(arrayList0.isEmpty());
      
      int int0 = player0.calculate_victory();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      arrayList0.add(0, (Card) null);
      // Undeclared exception!
      try { 
        player0.calculate_victory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player("2");
      player0.draw_from_deck();
      player0.draw_from_deck();
      // Undeclared exception!
      try { 
        player0.draw_from_deck_to_hand();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player("mrcOi`i");
      player0.draw_from_deck();
      ArrayList<Card> arrayList0 = player0.deck;
      Board board0 = new Board(arrayList0);
      board0.on_board.clear();
      player0.buy_phase(board0);
      assertEquals(5, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      player0.buy_phase(board0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      player0.action_phase(board0, player0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      board0.in_trash = arrayList0;
      ActionCard actionCard0 = new ActionCard((String) null, (String) null, 0, 0);
      board0.in_trash.add((Card) actionCard0);
      assertEquals(1, arrayList0.size());
      
      ArrayList<Integer> arrayList1 = player0.in_play_by_name("eJ)^5^eEYt");
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.in_play;
      Board board0 = new Board(arrayList0);
      board0.in_trash = arrayList0;
      ActionCard actionCard0 = new ActionCard((String) null, (String) null, 0, 0);
      board0.in_trash.add((Card) actionCard0);
      assertEquals(1, arrayList0.size());
      
      ArrayList<Integer> arrayList1 = player0.in_play_by_name((String) null);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player("");
      ArrayList<Card> arrayList0 = player0.in_play;
      arrayList0.add((Card) null);
      ActionCard actionCard0 = new ActionCard("", "TE{s$/y-\"N~FSZZV@jA", 795, 0);
      arrayList0.add((Card) actionCard0);
      player0.deck = arrayList0;
      player0.clean_up_phase();
      player0.hand = arrayList0;
      player0.draw_from_deck();
      player0.draw_from_deck();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player((String) null);
      ActionCard actionCard0 = new ActionCard((String) null, (String) null, 0, 0);
      ArrayList<Card> arrayList0 = player0.discard;
      Board board0 = new Board(arrayList0);
      actionCard0.council_room(player0, player0, board0);
      player0.print_hand();
      player0.draw_from_in_play_to_trash(board0, 0);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player((String) null);
      ArrayList<Card> arrayList0 = player0.in_play;
      arrayList0.add((Card) null);
      // Undeclared exception!
      try { 
        player0.print_in_play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player("");
      player0.print_deck();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player("");
      // Undeclared exception!
      try { 
        player0.draw_from_in_play_to_trash((Board) null, 35);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player(" '&pjXaM>f/@Sl-0=");
      player0.shuffle_hand();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Player player0 = new Player("\nPlaying festival card.\n");
      // Undeclared exception!
      try { 
        player0.draw_from_hand_to_trash((Board) null, (-3144));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Player player0 = new Player("AVX%`6|<");
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      Board board0 = new Board(arrayList0);
      player0.draw_from_board_to_in_play(board0, 7);
      int int0 = player0.calculate_victory();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Player player0 = new Player("");
      // Undeclared exception!
      try { 
        player0.draw_from_board_to_hand((Board) null, (-1065));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Player player0 = new Player("]@|_*dXGhkcXkcM");
      player0.shuffle_deck();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Player player0 = new Player("estate");
      // Undeclared exception!
      try { 
        player0.draw_from_hand_to_deck((-5232));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Player player0 = new Player(" '&pjXaM>f/@Sl-0=");
      ArrayList<Card> arrayList0 = player0.deck;
      player0.hand = arrayList0;
      // Undeclared exception!
      try { 
        player0.buy_phase((Board) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Player", e);
      }
  }
}
