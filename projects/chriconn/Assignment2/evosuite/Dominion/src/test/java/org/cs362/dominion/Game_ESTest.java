/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 00:24:46 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.cs362.dominion.Card;
import org.cs362.dominion.Deck;
import org.cs362.dominion.Game;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Game_ESTest extends Game_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.draw(0);
      Game game0 = new Game();
      Card card0 = new Card("embargo");
      card0.setCards((-310));
      // Undeclared exception!
      try {
        game0.applyCardActions(player0, 0, card0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vicZory";
      stringArray0[1] = "vicZory";
      stringArray0[2] = "baron";
      stringArray0[3] = "B6M";
      stringArray0[4] = "]@gN(wjScOq.";
      stringArray0[5] = "(h,qL1bSKFd[P[uo";
      stringArray0[6] = "zV*nk3Y59gtq";
      Game game0 = new Game(stringArray0);
      game0.yesNo();
      game0.tallyPoints();
      game0.randomKingdomCard();
      Player player0 = new Player();
      game0.numPlayers();
      game0.win();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      game0.players = null;
      game0.cardsInGame = arrayList0;
      arrayList0.containsAll(game0.cardsInGame);
      game0.getDeck("@Yz1;");
      game0.win();
      // Undeclared exception!
      try {
        game0.getPlayer(7);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "-e(RCMB";
      Game game0 = new Game(stringArray0);
      ArrayList<String> arrayList0 = game0.cardsInGame;
      game0.cardsInGame = arrayList0;
      arrayList0.listIterator();
      arrayList0.iterator();
      game0.showHand(0);
      game0.randomCard();
      game0.getPlayer(0);
      arrayList0.add(0, "\n\n\n\nNUMBER OF GARDENS: %d\n\n");
      game0.playerTurn(0);
      game0.playCard(0, "village");
      game0.players = null;
      // Undeclared exception!
      try {
        game0.playCard((-702), "-e(RCMB");
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      game0.bank = arrayList0;
      // Undeclared exception!
      try {
        game0.win();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "victory";
      stringArray0[1] = "victory";
      stringArray0[2] = "victory";
      stringArray0[3] = "B6M";
      stringArray0[4] = "ra6R,//(W0:5";
      stringArray0[5] = "(h,qL1bSKFd[P[uo";
      stringArray0[6] = "zV*nk3Y59gtq";
      Game game0 = new Game(stringArray0);
      game0.yesNo();
      game0.tallyPoints();
      game0.randomKingdomCard();
      game0.cardsInGame.toString();
      game0.numPlayers();
      game0.win();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      game0.players = null;
      game0.cardsInGame = arrayList0;
      // Undeclared exception!
      try {
        game0.tallyPoints();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      player0.printHandType("curse");
      arrayList0.add(player0.hand);
      arrayList0.clear();
      arrayList0.listIterator();
      Game game0 = new Game();
      ArrayList<Player> arrayList1 = game0.players;
      ArrayList<Deck> arrayList2 = game0.bank;
      game0.randomKingdomCard();
      Random.setNextRandom(1000000000);
      // Undeclared exception!
      try {
        game0.randomKingdomCard();
        fail("Expecting exception: TooManyResourcesException");

      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "silver";
      stringArray0[1] = "province";
      stringArray0[2] = ",piXj]v";
      stringArray0[3] = "estate";
      stringArray0[4] = "A0#wV.qC1.v/BYV}";
      stringArray0[5] = "Df_^jbBx|`)";
      Game game0 = new Game(stringArray0);
      game0.yesNo();
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      arrayList0.clear();
      arrayList0.add(game0.trash);
      game0.bank = arrayList0;
      // Undeclared exception!
      try {
        game0.getDeck("silver");
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<Deck> arrayList0 = game0.bank;
      game0.bank = arrayList0;
      game0.win();
      ArrayList<Deck> arrayList1 = game0.bank;
      game0.cardsInGame = null;
      // Undeclared exception!
      try {
        game0.randomKingdomCard();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "-e(RCMB";
      Game game0 = new Game(stringArray0);
      ArrayList<String> arrayList0 = game0.cardsInGame;
      game0.cardsInGame = arrayList0;
      arrayList0.add("-e(RCMB");
      game0.tallyPoints();
      arrayList0.listIterator();
      arrayList0.iterator();
      game0.showHand(0);
      game0.randomCard();
      game0.getPlayer(0);
      arrayList0.add(0, "\n\n\n\nNUMBER OF GARDENS: %d\n\n");
      game0.playerTurn(0);
      game0.playCard(0, "village");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Random.setNextRandom((-1726675200));
      Game game0 = new Game();
      // Undeclared exception!
      try {
        game0.calculateVictoryPoints((Player) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "curse";
      stringArray0[1] = "'s hand:";
      stringArray0[2] = "Sn@roq]<uL";
      stringArray0[3] = "S_";
      stringArray0[4] = "Minute";
      stringArray0[5] = "lK*o?PvRkyuOg^<<l";
      stringArray0[6] = "feast";
      stringArray0[7] = "9`$W/\"vB9](XRk|iE!l";
      Game game0 = new Game(stringArray0);
      game0.players = null;
      game0.randomKingdomCard();
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      game0.printBank(60);
      game0.bank = arrayList0;
      // Undeclared exception!
      try {
        game0.playerTurn(60);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Sn@roq]<uL";
      stringArray0[1] = "dutchy";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "\"kR";
      Game game0 = new Game(stringArray0);
      game0.playerTurn(2);
      Player player0 = game0.getPlayer(2);
      game0.randomKingdomCard();
      game0.trash = player0.drawDeck;
      game0.printBank(1918);
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      arrayList0.stream();
      game0.bank = arrayList0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "7DE`:B@o!S]'zjZF}[=";
      stringArray0[1] = "Playing %s\n";
      Game game0 = new Game(stringArray0);
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      arrayList0.add(game0.trash);
      game0.bank = arrayList0;
      ArrayList<Player> arrayList1 = game0.players;
      game0.players = arrayList1;
      // Undeclared exception!
      try {
        game0.printBank(0);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "'Sk}h`d/XZ*\";kVwS";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "^T+x\"*z.7Pz";
      stringArray0[4] = "";
      stringArray0[5] = "";
      Game game0 = new Game(stringArray0);
      game0.players = null;
      // Undeclared exception!
      try {
        game0.printAllDecks(0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Game game0 = new Game();
      game0.randomKingdomCard();
      Player player0 = new Player();
      player0.modifyBuys((-2444));
      player0.modifyActions(7);
      player0.hasActions();
      player0.discard("village");
      player0.drawDeck = game0.trash;
      game0.calculateVictoryPoints(player0);
      game0.addPlayer("village");
      game0.addPlayer("village");
      game0.printBank(0);
      game0.yesNo();
      ArrayList<String> arrayList0 = game0.cardsInGame;
      // Undeclared exception!
      try {
        game0.getPlayer((-2444));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Game game0 = new Game(stringArray0);
      ArrayList<String> arrayList0 = game0.cardsInGame;
      game0.cardsInGame = arrayList0;
      arrayList0.listIterator();
      Player player0 = new Player();
      Deck deck0 = player0.hand;
      game0.trash = deck0;
      Player player1 = new Player();
      Card card0 = new Card();
      player1.hand = game0.trash;
      card0.setBuys((-900));
      game0.applyCardActions(player1, 2507, card0);
      game0.randomTreasure();
      // Undeclared exception!
      try {
        game0.printAllDecks((-891));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "xiDg[*%T|wyc";
      stringArray0[1] = "";
      stringArray0[2] = "action";
      stringArray0[3] = "Day";
      stringArray0[4] = "6|Vt/,F";
      stringArray0[5] = "";
      Game game0 = new Game(stringArray0);
      game0.printAllDecks(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      game0.cardsInGame = arrayList0;
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      Player player0 = new Player("5,3J_TrDV\"qSj]I.");
      player0.printHandType("5,3J_TrDV\"qSj]I.");
      arrayList1.add(player0);
      game0.players = arrayList1;
      // Undeclared exception!
      try {
        game0.randomCard();
        fail("Expecting exception: ArithmeticException");

      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RT>|yp.";
      Game game0 = new Game(stringArray0);
      game0.numPlayers();
      game0.addPlayer("RT>|yp.");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Game game0 = null;
      try {
        game0 = new Game((String[]) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<Deck> arrayList0 = game0.bank;
      arrayList0.add(game0.trash);
      game0.bank = arrayList0;
      game0.numPlayers();
      game0.randomTreasure();
      game0.randomKingdomCard();
      game0.getDeck("gold");
      // Undeclared exception!
      try {
        game0.printBank();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Game game0 = new Game();
      game0.printBank((-1601));
      // Undeclared exception!
      try {
        game0.getPlayer((-1601));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Game game0 = new Game();
      game0.printBank(0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Game game0 = new Game();
      game0.getDeck("");
      Game game1 = new Game();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try {
        game0.playCard((-1472), (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Game game0 = new Game(stringArray0);
      game0.numPlayers();
      // Undeclared exception!
      try {
        game0.playCard(0, "A?*J*n");
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Game game0 = new Game();
      game0.printBank((-5115));
      // Undeclared exception!
      try {
        game0.showHand((-5115));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Game game0 = new Game();
      game0.numPlayers = (-310);
      Player player0 = new Player();
      player0.draw(0);
      game0.calculateVictoryPoints(player0);
      game0.numPlayers();
      // Undeclared exception!
      try {
        game0.playerTurn(1918);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1918, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      Game game0 = new Game(stringArray0);
      ArrayList<Deck> arrayList0 = game0.bank;
      game0.bank = arrayList0;
      arrayList0.add(game0.trash);
      arrayList0.trimToSize();
      game0.randomTreasure();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<Deck> arrayList0 = game0.bank;
      game0.bank = arrayList0;
      arrayList0.add(game0.trash);
      game0.randomTreasure();
      ArrayList<String> arrayList1 = game0.cardsInGame;
      game0.addToBank("gold");
      game0.randomKingdomCard();
      game0.win();
      ArrayList<Player> arrayList2 = new ArrayList<Player>();
      arrayList2.retainAll(game0.cardsInGame);
      int int0 = 0;
      // Undeclared exception!
      try {
        game0.getPlayer(0);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Game game0 = new Game();
      Deck deck0 = new Deck();
      game0.printBank();
      game0.printBank();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Game game0 = new Game();
      game0.printBank();
      game0.printBank();
      game0.randomTreasure();
      game0.numPlayers = 1487;
      game0.printBank(200);
      game0.yesNo();
      Random.setNextRandom(2663);
      Player player0 = new Player("'s draw deckN: ");
      Card card0 = new Card("'s draw deckN: ");
      player0.hand = game0.trash;
      card0.setDescription("'s draw deckN: ");
      card0.setCards(2663);
      game0.applyCardActions(player0, (-1511), card0);
      Deck deck0 = player0.drawDeck;
      deck0.printType("gold");
      game0.trash = deck0;
      // Undeclared exception!
      try {
        game0.randomKingdomCard();
        fail("Expecting exception: TooManyResourcesException");

      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Game game0 = new Game(stringArray0);
      game0.tallyPoints();
      game0.playCard(0, "]q>.fI5");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "victory";
      stringArray0[1] = "r?'~nc>7";
      stringArray0[2] = "baron";
      stringArray0[3] = "BuM";
      stringArray0[4] = "]@gN(wjScOq.";
      stringArray0[5] = "(h,qL1bSKFd[P[uo";
      stringArray0[6] = "zV*nk3Y59gtq";
      Game game0 = new Game(stringArray0);
      game0.yesNo();
      game0.tallyPoints();
      game0.randomKingdomCard();
      game0.cardsInGame.toString();
      Player player0 = new Player();
      // Undeclared exception!
      try {
        game0.applyCardActions(player0, 200, (Card) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[1] = "dutchy";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "\"kR";
      Game game0 = new Game(stringArray0);
      game0.playerTurn(2);
      Player player0 = new Player();
      // Undeclared exception!
      try {
        game0.addToBank("");
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Sn@roq]<uL";
      stringArray0[1] = "dutchy";
      stringArray0[2] = "dutchy";
      stringArray0[3] = "";
      stringArray0[4] = "\"kR";
      Game game0 = new Game(stringArray0);
      game0.playerTurn(2);
      Player player0 = new Player();
      // Undeclared exception!
      try {
        game0.buy(player0, "Sn@roq]<uL");
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Game game0 = new Game();
      ArrayList<Deck> arrayList0 = game0.bank;
      game0.bank = arrayList0;
      arrayList0.add(game0.trash);
      game0.win();
      ArrayList<Deck> arrayList1 = game0.bank;
      game0.randomKingdomCard();
      game0.addPlayer("Reveal cards from your deck until you reveal 2 treasure cards. Put those Treasure cards into your hand and discard the other reveal cards.");
      arrayList0.add(game0.trash);
      // Undeclared exception!
      try {
        game0.showHand(1446);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1446, Size: 1
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Game game0 = new Game();
      game0.printBank((-1768));
      game0.randomTreasure();
      String string0 = null;
      ArrayList<Deck> arrayList0 = new ArrayList<Deck>();
      game0.bank = arrayList0;
      game0.numPlayers();
      ArrayList<Player> arrayList1 = game0.players;
      game0.players = arrayList1;
      game0.printBank(2499);
      // Undeclared exception!
      try {
        game0.playerTurn((-3585));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Game game0 = new Game();
      game0.randomTreasure();
      Player player0 = new Player("/o");
      game0.buy(player0, "gold");
      game0.printBank();
      game0.randomCard();
      // Undeclared exception!
      try {
        game0.playerTurn(16);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 16, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Game game0 = new Game();
      game0.tallyPoints();
      game0.randomTreasure();
      Player player0 = new Player("/o");
      game0.buy(player0, "gold");
      game0.printBank();
      game0.randomCard();
      // Undeclared exception!
      try {
        game0.playerTurn(16);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 16, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Game game0 = new Game();
      game0.randomCard();
      ArrayList<String> arrayList0 = game0.cardsInGame;
      boolean boolean0 = game0.yesNo();
      assertFalse(boolean0);

      String string0 = game0.randomKingdomCard();
      assertEquals("village", string0);

      String string1 = game0.randomTreasure();
      assertEquals("gold", string1);

      game0.numPlayers = 1928;
      game0.tallyPoints();
      Player player0 = new Player();
      Card card0 = player0.draw();
      game0.applyCardActions(player0, (-152), card0);
      assertFalse(game0.win());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.draw(0);
      Game game0 = new Game();
      Card card0 = new Card("embargo");
      // Undeclared exception!
      try {
        game0.applyCardActions(player0, 0, card0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[23];
      stringArray0[1] = "kingdom";
      Game game0 = new Game();
      Card card0 = new Card();
      card0.setValue(29);
      // Undeclared exception!
      try {
        game0.printAllDecks(828);
        fail("Expecting exception: IndexOutOfBoundsException");

      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 828, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }
}
