/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 11 20:08:33 GMT 2017
 */

package com.tris;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tris.Input;
import com.tris.Randomness;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Input input0 = new Input();
      Input input1 = new Input();
      int int0 = 0;
      Input.getInt(0, 0);
      // Undeclared exception!
      try { 
        Input.getInt(0, (-1));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Input input0 = new Input();
      int int0 = Randomness.totalCallsToRandom;
      int int1 = 1;
      Input.getInt(0, 1);
      // Undeclared exception!
      try { 
        Input.getInt(0, (-1006));
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Randomness.reset((-1967L));
      Input.getInt(0, 0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Randomness.reset(1L);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Randomness.nextRandomInt(204);
      Input.getInt(0, 0);
      Randomness.totalCallsToRandom = 0;
      Randomness.reset(0);
      // Undeclared exception!
      try { 
        Input.getInt(1, 0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        Randomness.nextRandomInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Input input0 = new Input();
      int int0 = Randomness.totalCallsToRandom;
      Input.getInt(0, 0);
      Randomness.reset(0);
      Randomness.nextRandomInt((-2911));
      Input.getInt(0, 0);
      Randomness.reset(1570L);
      Randomness.reset(0L);
      Input input1 = new Input();
      Randomness.reset(0L);
      Input.getInt((-3137), 0);
      Randomness.random = (Random) mockRandom0;
      Input.getInt((-3606), 0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int int0 = (-510);
      // Undeclared exception!
      try { 
        Input.getInt(1473, (-510));
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Random random0 = null;
      Randomness.random = null;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        Input.getInt((-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.tris.Randomness", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      int int0 = Randomness.totalCallsToRandom;
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      int int1 = 0;
      Randomness.totalCallsToRandom = 0;
      Randomness.nextRandomInt(1);
      Input input0 = new Input();
      Randomness.nextRandomInt(Randomness.totalCallsToRandom);
      Randomness.reset(Randomness.totalCallsToRandom);
      Randomness.reset(int1);
      int int2 = 0;
      Input.getInt(int2, int0);
      int int3 = 376;
      int int4 = 0;
      // Undeclared exception!
      try { 
        Input.getInt(int3, int4);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
