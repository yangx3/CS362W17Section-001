/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 25 10:12:59 PST 2017
 */

package com.tris;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.util.LinkedList;
import java.util.List;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Randomness_ESTest extends Randomness_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) linkedList0);
      LinkedList linkedList1 = (LinkedList)Randomness.randomMember((List<Object>) linkedList0);
      assertEquals(1, linkedList1.size());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        Randomness.randomMember((List<Object>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected non-empty list
         //
         assertThrownBy("com.tris.Randomness", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Randomness.reset(1L);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = Randomness.nextRandomInt(28);
      //  // Unstable assertion: assertEquals(20, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      Randomness randomness0 = new Randomness();
      //  // Unstable assertion: assertEquals(0, Randomness.totalCallsToRandom);
  }
}
