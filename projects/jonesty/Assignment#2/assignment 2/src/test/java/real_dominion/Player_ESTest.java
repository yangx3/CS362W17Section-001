/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 26 22:53:22 PST 2017
 */

package real_dominion;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      player0.resetturn();
      player0.toString();
  }

  @Test
  public void test01()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      int[] intArray0 = new int[0];
      GameState gameState0 = new GameState((List<Card>) vector0, intArray0);
      Player player0 = new Player(gameState0, "eqVi=}'Y^@iPEi");
      player0.numBuys = 1139;
      player0.buyCard(gameState0);
  }

  @Test
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      GameState gameState0 = new GameState((List<Card>) null, intArray0);
      Player player0 = new Player(gameState0, "QX.1z`74");
      GameState gameState1 = new GameState((List<Card>) null, gameState0.piles);
      player0.buyCard(gameState1);
  }

  @Test
  public void test03()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = player0.deck;
      Card.CardName card_CardName0 = Card.CardName.Copper;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 7, 76, 4155, 18);
      player0.hand = (List<Card>) linkedList0;
      linkedList0.add(card0);
      player0.discard = (List<Card>) linkedList0;
      player0.scoreFor();
  }

  @Test
  public void test04()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = player0.deck;
      Card.CardName card_CardName0 = Card.CardName.Copper;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 7, 76, 4155, 18);
      player0.hand = (List<Card>) linkedList0;
      linkedList0.add(card0);
      linkedList0.add(card0);
      player0.scoreFor();
  }

  @Test
  public void test05()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      int[] intArray0 = new int[3];
      intArray0[0] = 3;
      intArray0[1] = 1139;
      intArray0[2] = (-2289);
      GameState gameState0 = new GameState(list0, intArray0);
      Player player0 = new Player(gameState0, "The size must be non-negative");
      Card.CardName card_CardName0 = Card.CardName.Great_hall;
      Card card0 = Card.getCard(list0, card_CardName0);
      List<Card> list1 = Card.createCards();
      Card.Type card_Type0 = Card.Type.ACTION;
      Card.filter(list1, card_Type0);
      player0.scoreFor();
      player0.discard(card0);
      Card.CardName card_CardName1 = Card.CardName.Village;
      card0.play(player0, gameState0);
      Card.getCard(list1, card_CardName1);
      int int0 = player0.numBuys;
      player0.playedCards = list0;
      Card.Type card_Type1 = Card.Type.ACTION;
      card0.toString();
      Card.filter(list0, card_Type1);
      player0.gain(card0);
      int int1 = player0.numBuys;
      player0.scoreFor();
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[2];
      GameState gameState0 = new GameState((List<Card>) null, intArray0);
      Player player0 = new Player(gameState0, "WcCMxZ,>W4l%=t@");
      player0.initializePlayerTurn();
      // Undeclared exception!
      try { 
        player0.buyCard(gameState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("real_dominion.Player", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      int[] intArray0 = new int[6];
      GameState gameState0 = new GameState((List<Card>) arrayList0, intArray0);
      Player player0 = new Player(gameState0, "{\"y|");
      player0.drawCard();
      player0.endTurn();
      player0.shuffleDeck();
  }

  @Test
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[5];
      GameState gameState0 = new GameState((List<Card>) null, intArray0);
      Player player0 = new Player(gameState0, "");
      player0.discard = null;
      // Undeclared exception!
      try { 
        player0.gain((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("real_dominion.Player", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      int[] intArray0 = new int[8];
      GameState gameState0 = new GameState((List<Card>) linkedList0, intArray0);
      Player player0 = new Player(gameState0, (String) null);
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card card0 = new Card(card_CardName0, card_Type0, 419, (-3615), 53, 0);
      player0.gain(card0);
      player0.scoreFor();
  }

  @Test
  public void test10()  throws Throwable  {
      Player player0 = new Player((GameState) null, "sfbX");
      player0.initializePlayerTurn();
      // Undeclared exception!
      try { 
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("real_dominion.Player", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.resetturn();
      player0.playKingdomCard();
  }

  @Test
  public void test12()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      int[] intArray0 = new int[3];
      GameState gameState0 = new GameState(list0, intArray0);
      Player player0 = new Player(gameState0, "The size must be non-negative");
      Card.CardName card_CardName0 = Card.CardName.Great_hall;
      Card card0 = Card.getCard(list0, card_CardName0);
      player0.discard(card0);
      card0.play(player0, gameState0);
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.playKingdomCard();
  }

  @Test
  public void test14()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.initializePlayerTurn();
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "sfbX");
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      linkedList0.push((Card) null);
      player0.deck = linkedList0;
      player0.initializePlayerTurn();
  }

  @Test
  public void test16()  throws Throwable  {
      Player player0 = new Player((GameState) null, "sfbX");
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      linkedList0.push((Card) null);
      player0.deck = linkedList0;
      player0.shuffleDeck();
  }

  @Test
  public void test17()  throws Throwable  {
      Player player0 = new Player((GameState) null, "G#p]5Z)%tDl");
      player0.initializePlayerTurn();
      player0.initializePlayerTurn();
  }

  @Test
  public void test18()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      int[] intArray0 = new int[0];
      GameState gameState0 = new GameState((List<Card>) arrayList0, intArray0);
      Player player0 = new Player(gameState0, "+;$ jO8kI6*ziSTS%");
      player0.initializePlayerTurn();
      player0.endTurn();
      player0.buyCard(gameState0);
  }

  @Test
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[2];
      GameState gameState0 = new GameState((List<Card>) null, intArray0);
      Player player0 = new Player(gameState0, "WcCMxZ,>W4l%=t@");
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, (-2468), (-1174), 1139, (-1));
      player0.gain(card0);
      player0.initializePlayerTurn();
  }
}
