/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 01:54:34 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Dominion;
import dominion.GameState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dominion_ESTest extends Dominion_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - true in context: dominion.Dominion:fillCardPile([II)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.fillCardPile([II)V: Line 1179
   * Goal 11. dominion.Dominion.fillCardPile([II)V: Line 1181
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.fillCardPile([II)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.fillCardPile([II)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2639: dominion.Dominion.fillCardPile([II)V:1179 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      dominion0.fillCardPile((int[]) null, (-2723));
  }

  //Test case number: 1
  /*
   * 24 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - false
   * Goal 3. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - true
   * Goal 4. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - false
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - false in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 7. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - false in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 8. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - true in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 9. comparePileCounts([I[ILjava/lang/String;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 10. dominion.Dominion.<init>()V: Line 15
   * Goal 11. dominion.Dominion.<init>()V: Line 16
   * Goal 12. dominion.Dominion.<init>()V: Line 17
   * Goal 13. dominion.Dominion.<init>()V: Line 18
   * Goal 14. dominion.Dominion.<init>()V: Line 19
   * Goal 15. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1174
   * Goal 16. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1175
   * Goal 17. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1176
   * Goal 18. [METHOD] dominion.Dominion.<init>()V
   * Goal 19. [METHOD] dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V
   * Goal 20. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 21. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 2602: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1174 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 2619: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1175 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2621: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1175 - ReplaceComparisonOperator == -> <=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[8];
      intArray1[0] = (-1261);
      // Undeclared exception!
      try { 
        dominion0.comparePileCounts(intArray1, intArray0, "H5)");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 2
  /*
   * 41 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 7. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - true
   * Goal 8. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 9. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 14. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 15. initializeGame(I[II)Ldominion/GameState;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 16. dominion.Dominion.<init>()V: Line 15
   * Goal 17. dominion.Dominion.<init>()V: Line 16
   * Goal 18. dominion.Dominion.<init>()V: Line 17
   * Goal 19. dominion.Dominion.<init>()V: Line 18
   * Goal 20. dominion.Dominion.<init>()V: Line 19
   * Goal 21. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 22. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 37
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 38
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 39
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 40
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 41
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 30. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 31. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 32. [METHOD] dominion.Dominion.<init>()V
   * Goal 33. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 34. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 35. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 37: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> -2
   * Goal 37. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 39. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 40. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   * Goal 41. Weak Mutation 141: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator != -> <
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[2];
      intArray0[1] = 2218;
      // Undeclared exception!
      try { 
        dominion0.initializeGame(1053, intArray0, (-4127));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 3
  /*
   * 40 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - true
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 7. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 8. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false
   * Goal 9. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 14. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 15. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 16. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 17. initializeGame(I[II)Ldominion/GameState;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 18. dominion.Dominion.<init>()V: Line 15
   * Goal 19. dominion.Dominion.<init>()V: Line 16
   * Goal 20. dominion.Dominion.<init>()V: Line 17
   * Goal 21. dominion.Dominion.<init>()V: Line 18
   * Goal 22. dominion.Dominion.<init>()V: Line 19
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 49
   * Goal 30. [METHOD] dominion.Dominion.<init>()V
   * Goal 31. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 32. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 33. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 36: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 51: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 39. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   * Goal 40. Weak Mutation 140: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        dominion0.initializeGame(2, intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 4
  /*
   * 19 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.handCard(ILdominion/GameState;)I: root-Branch
   * Goal 4. Branch dominion.Dominion.handCard(ILdominion/GameState;)I: root-Branch in context: dominion.Dominion:handCard(ILdominion/GameState;)I
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. [Output]: dominion.Dominion.handCard(ILdominion/GameState;)I:Zero
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.handCard(ILdominion/GameState;)I: Line 215
   * Goal 13. dominion.Dominion.handCard(ILdominion/GameState;)I: Line 216
   * Goal 14. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 15. [METHOD] dominion.Dominion.<init>()V
   * Goal 16. [METHOD] dominion.Dominion.handCard(ILdominion/GameState;)I
   * Goal 17. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 18. [METHODNOEX] dominion.Dominion.handCard(ILdominion/GameState;)I
   * Goal 19. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.handCard(11, gameState0);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.discardCard(IILdominion/GameState;I)I: I7 Branch 115 IF_ICMPGE L758 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.discardCard(IILdominion/GameState;I)I: I7 Branch 115 IF_ICMPGE L758 - false in context: 
   * Goal 5. [Output]: dominion.Dominion.discardCard(IILdominion/GameState;I)I:Negative
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.discardCard(IILdominion/GameState;I)I: Line 758
   * Goal 12. dominion.Dominion.discardCard(IILdominion/GameState;I)I: Line 759
   * Goal 13. [METHOD] dominion.Dominion.<init>()V
   * Goal 14. [METHOD] dominion.Dominion.discardCard(IILdominion/GameState;I)I
   * Goal 15. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 16. [METHODNOEX] dominion.Dominion.discardCard(IILdominion/GameState;I)I
   * Goal 17. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 1065: dominion.Dominion.discardCard(IILdominion/GameState;I)I:758 - ReplaceComparisonOperator >= -> <
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.discardCard(0, 0, gameState0, 0);
  }

  //Test case number: 6
  /*
   * 15 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. Branch dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch in context: dominion.Dominion:whoseTurn(Ldominion/GameState;)I
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. whoseTurn(Ldominion/GameState;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.whoseTurn(Ldominion/GameState;)I
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.whoseTurn((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. updateCoins(ILdominion/GameState;I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 254
   * Goal 10. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 257
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.updateCoins(ILdominion/GameState;I)I
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.updateCoins(1379, gameState0, 18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1379
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testShuffle(ILdominion/GameState;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.testShuffle(ILdominion/GameState;)V: Line 1508
   * Goal 10. dominion.Dominion.testShuffle(ILdominion/GameState;)V: Line 1511
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.testShuffle(ILdominion/GameState;)V
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.testShuffle(40, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 40
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 9
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testPlayCardAndCardEffect(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 10. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1903
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testPlayCardAndCardEffect((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 10
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. testIsGameOver(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 11. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 12. dominion.Dominion.testIsGameOver(Ldominion/GameState;)V: Line 1824
   * Goal 13. [METHOD] dominion.Dominion.<init>()V
   * Goal 14. [METHOD] dominion.Dominion.testIsGameOver(Ldominion/GameState;)V
   * Goal 15. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testIsGameOver((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 11
  /*
   * 24 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. testGetWinners(Ldominion/GameState;)V_java.lang.ArithmeticException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 12. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 13. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 14. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 15. dominion.Dominion.testGetWinners(Ldominion/GameState;)V: Line 1689
   * Goal 16. dominion.Dominion.testGetWinners(Ldominion/GameState;)V: Line 1690
   * Goal 17. dominion.Dominion.testGetWinners(Ldominion/GameState;)V: Line 1691
   * Goal 18. dominion.Dominion.testGetWinners(Ldominion/GameState;)V: Line 1693
   * Goal 19. [METHOD] dominion.Dominion.<init>()V
   * Goal 20. [METHOD] dominion.Dominion.testGetWinners(Ldominion/GameState;)V
   * Goal 21. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 22. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.testGetWinners(gameState0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testGainCard(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 10. dominion.Dominion.testGainCard(Ldominion/GameState;)V: Line 1348
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.testGainCard(Ldominion/GameState;)V
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testGainCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 13
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testEndTurn(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 10. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1757
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.testEndTurn(Ldominion/GameState;)V
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testEndTurn((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 14
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testDrawCard(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1211
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.testDrawCard(Ldominion/GameState;)V
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testDrawCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 15
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. testBuyCard(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 10. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1439
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.testBuyCard(Ldominion/GameState;)V
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.testBuyCard((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 16
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. shuffle(ILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.shuffle(ILdominion/GameState;)I: Line 140
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.shuffle(ILdominion/GameState;)I
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.shuffle(500, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 17
  /*
   * 19 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I14 Branch 171 IFEQ L997 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I14 Branch 171 IFEQ L997 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 5. scoreFor(ILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 992
   * Goal 12. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 995
   * Goal 13. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 997
   * Goal 14. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1004
   * Goal 15. [METHOD] dominion.Dominion.<init>()V
   * Goal 16. [METHOD] dominion.Dominion.scoreFor(ILdominion/GameState;)I
   * Goal 17. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 1824: dominion.Dominion.scoreFor(ILdominion/GameState;)I:997 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.scoreFor((-2755), gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2755
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 18
  /*
   * 22 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true
   * Goal 3. dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 6. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 7. getWinners([ILdominion/GameState;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 8. dominion.Dominion.<init>()V: Line 15
   * Goal 9. dominion.Dominion.<init>()V: Line 16
   * Goal 10. dominion.Dominion.<init>()V: Line 17
   * Goal 11. dominion.Dominion.<init>()V: Line 18
   * Goal 12. dominion.Dominion.<init>()V: Line 19
   * Goal 13. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1089
   * Goal 14. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1093
   * Goal 15. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1094
   * Goal 16. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1098
   * Goal 17. [METHOD] dominion.Dominion.<init>()V
   * Goal 18. [METHOD] dominion.Dominion.getWinners([ILdominion/GameState;)I
   * Goal 19. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 20. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 2185: dominion.Dominion.getWinners([ILdominion/GameState;)I:1089 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 2212: dominion.Dominion.getWinners([ILdominion/GameState;)I:1094 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.getWinners((int[]) null, gameState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 19
  /*
   * 22 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true
   * Goal 3. dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 6. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 7. getWinners([ILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 8. dominion.Dominion.<init>()V: Line 15
   * Goal 9. dominion.Dominion.<init>()V: Line 16
   * Goal 10. dominion.Dominion.<init>()V: Line 17
   * Goal 11. dominion.Dominion.<init>()V: Line 18
   * Goal 12. dominion.Dominion.<init>()V: Line 19
   * Goal 13. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1089
   * Goal 14. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1093
   * Goal 15. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1094
   * Goal 16. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1098
   * Goal 17. [METHOD] dominion.Dominion.<init>()V
   * Goal 18. [METHOD] dominion.Dominion.getWinners([ILdominion/GameState;)I
   * Goal 19. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 20. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 2185: dominion.Dominion.getWinners([ILdominion/GameState;)I:1089 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 2212: dominion.Dominion.getWinners([ILdominion/GameState;)I:1094 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[0];
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.getWinners(intArray0, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 20
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. getCost(I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.getCost(I)I: Line 824
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.getCost(I)I
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.getCost((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 21
  /*
   * 14 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. fullDeckCount(IILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1069
   * Goal 10. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1071
   * Goal 11. [METHOD] dominion.Dominion.<init>()V
   * Goal 12. [METHOD] dominion.Dominion.fullDeckCount(IILdominion/GameState;)I
   * Goal 13. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 14. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.fullDeckCount(18, 18, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 22
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false in context: dominion.Dominion:fillSupply(Ldominion/GameState;)V
   * Goal 5. fillSupply(Ldominion/GameState;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 12. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 13. [METHOD] dominion.Dominion.<init>()V
   * Goal 14. [METHOD] dominion.Dominion.fillSupply(Ldominion/GameState;)V
   * Goal 15. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.fillSupply((GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 23
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. drawCard(ILdominion/GameState;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 166
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.drawCard(ILdominion/GameState;)I
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.drawCard(0, (GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 24
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. drawCard(ILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 166
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.drawCard(ILdominion/GameState;)I
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.drawCard(808, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 808
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 25
  /*
   * 13 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 3. discardCard(IILdominion/GameState;I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. dominion.Dominion.<init>()V: Line 15
   * Goal 5. dominion.Dominion.<init>()V: Line 16
   * Goal 6. dominion.Dominion.<init>()V: Line 17
   * Goal 7. dominion.Dominion.<init>()V: Line 18
   * Goal 8. dominion.Dominion.<init>()V: Line 19
   * Goal 9. dominion.Dominion.discardCard(IILdominion/GameState;I)I: Line 758
   * Goal 10. [METHOD] dominion.Dominion.<init>()V
   * Goal 11. [METHOD] dominion.Dominion.discardCard(IILdominion/GameState;I)I
   * Goal 12. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 13. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.discardCard(26, 373, gameState0, 373);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 373
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 26
  /*
   * 28 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: root-Branch
   * Goal 3. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - true
   * Goal 4. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - false
   * Goal 5. Branch dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: root-Branch in context: dominion.Dominion:compareCardPiles([I[IIILjava/lang/String;)V
   * Goal 6. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 7. compareCardPiles([I[IIILjava/lang/String;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 8. dominion.Dominion.<init>()V: Line 15
   * Goal 9. dominion.Dominion.<init>()V: Line 16
   * Goal 10. dominion.Dominion.<init>()V: Line 17
   * Goal 11. dominion.Dominion.<init>()V: Line 18
   * Goal 12. dominion.Dominion.<init>()V: Line 19
   * Goal 13. dominion.Dominion.arbitraryPileCount([II)[I: Line 1161
   * Goal 14. dominion.Dominion.arbitraryPileCount([II)[I: Line 1162
   * Goal 15. dominion.Dominion.arbitraryPileCount([II)[I: Line 1163
   * Goal 16. dominion.Dominion.arbitraryPileCount([II)[I: Line 1165
   * Goal 17. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1169
   * Goal 18. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1170
   * Goal 19. [METHOD] dominion.Dominion.<init>()V
   * Goal 20. [METHOD] dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V
   * Goal 21. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 22. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 2553: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 2554: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 2566: dominion.Dominion.arbitraryPileCount([II)[I:1163 - ReplaceArithmeticOperator + -> %
   * Goal 26. Weak Mutation 2567: dominion.Dominion.arbitraryPileCount([II)[I:1163 - ReplaceArithmeticOperator + -> -
   * Goal 27. Weak Mutation 2568: dominion.Dominion.arbitraryPileCount([II)[I:1163 - ReplaceArithmeticOperator + -> *
   * Goal 28. Weak Mutation 2569: dominion.Dominion.arbitraryPileCount([II)[I:1163 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        dominion0.compareCardPiles(intArray0, intArray0, 0, 2366, "return value wrong");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 27
  /*
   * 34 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 6. cardEffect(IIIILdominion/GameState;II)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 268
   * Goal 13. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 269
   * Goal 14. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 271
   * Goal 15. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 272
   * Goal 16. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 273
   * Goal 17. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 275
   * Goal 18. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 276
   * Goal 19. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 277
   * Goal 20. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 280
   * Goal 21. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 22. [METHOD] dominion.Dominion.<init>()V
   * Goal 23. [METHOD] dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I
   * Goal 24. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 25. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 832: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> %
   * Goal 27. Weak Mutation 833: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> -
   * Goal 28. Weak Mutation 834: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> *
   * Goal 29. Weak Mutation 835: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> /
   * Goal 30. Weak Mutation 872: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 873: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 874: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 875: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 876: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.cardEffect(623, 0, 623, 11, gameState0, 1230, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 623
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 28
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - false in context: dominion.Dominion:arbitraryPileCount([II)[I
   * Goal 5. arbitraryPileCount([II)[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.arbitraryPileCount([II)[I: Line 1161
   * Goal 12. dominion.Dominion.arbitraryPileCount([II)[I: Line 1162
   * Goal 13. dominion.Dominion.arbitraryPileCount([II)[I: Line 1163
   * Goal 14. [METHOD] dominion.Dominion.<init>()V
   * Goal 15. [METHOD] dominion.Dominion.arbitraryPileCount([II)[I
   * Goal 16. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 17. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2553: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        dominion0.arbitraryPileCount(intArray0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 29
  /*
   * 21 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true
   * Goal 3. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false in context: dominion.Dominion:fillSupply(Ldominion/GameState;)V
   * Goal 6. Branch dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true in context: dominion.Dominion:fillSupply(Ldominion/GameState;)V
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 13. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 14. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1197
   * Goal 15. [METHOD] dominion.Dominion.<init>()V
   * Goal 16. [METHOD] dominion.Dominion.fillSupply(Ldominion/GameState;)V
   * Goal 17. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 18. [METHODNOEX] dominion.Dominion.fillSupply(Ldominion/GameState;)V
   * Goal 19. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 2754: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.fillSupply(gameState0);
  }

  //Test case number: 30
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true in context: dominion.Dominion:fillDecks(Ldominion/GameState;I)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 11. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.fillDecks(Ldominion/GameState;I)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.fillDecks(Ldominion/GameState;I)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.fillDecks(gameState0, 0);
  }

  //Test case number: 31
  /*
   * 19 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - true in context: dominion.Dominion:arbitraryPileCount([II)[I
   * Goal 5. [Output]: dominion.Dominion.arbitraryPileCount([II)[I:NonEmptyArray
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.arbitraryPileCount([II)[I: Line 1161
   * Goal 12. dominion.Dominion.arbitraryPileCount([II)[I: Line 1162
   * Goal 13. dominion.Dominion.arbitraryPileCount([II)[I: Line 1165
   * Goal 14. [METHOD] dominion.Dominion.<init>()V
   * Goal 15. [METHOD] dominion.Dominion.arbitraryPileCount([II)[I
   * Goal 16. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 17. [METHODNOEX] dominion.Dominion.arbitraryPileCount([II)[I
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 2555: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[3];
      dominion0.arbitraryPileCount(intArray0, (-1542));
  }

  //Test case number: 32
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true in context: dominion.Dominion:nullifyDecks(Ldominion/GameState;)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 11. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.nullifyDecks(Ldominion/GameState;)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.nullifyDecks(Ldominion/GameState;)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.nullifyDecks(gameState0);
  }

  //Test case number: 33
  /*
   * 27 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I14 Branch 201 IF_ICMPGE L1071 - true
   * Goal 3. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I40 Branch 203 IF_ICMPGE L1074 - true
   * Goal 4. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I66 Branch 205 IF_ICMPGE L1077 - true
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I14 Branch 201 IF_ICMPGE L1071 - true in context: dominion.Dominion:fullDeckCount(IILdominion/GameState;)I
   * Goal 7. Branch dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I40 Branch 203 IF_ICMPGE L1074 - true in context: dominion.Dominion:fullDeckCount(IILdominion/GameState;)I
   * Goal 8. Branch dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I66 Branch 205 IF_ICMPGE L1077 - true in context: dominion.Dominion:fullDeckCount(IILdominion/GameState;)I
   * Goal 9. [Output]: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:Zero
   * Goal 10. dominion.Dominion.<init>()V: Line 15
   * Goal 11. dominion.Dominion.<init>()V: Line 16
   * Goal 12. dominion.Dominion.<init>()V: Line 17
   * Goal 13. dominion.Dominion.<init>()V: Line 18
   * Goal 14. dominion.Dominion.<init>()V: Line 19
   * Goal 15. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1069
   * Goal 16. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1071
   * Goal 17. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1074
   * Goal 18. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1077
   * Goal 19. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1080
   * Goal 20. [METHOD] dominion.Dominion.<init>()V
   * Goal 21. [METHOD] dominion.Dominion.fullDeckCount(IILdominion/GameState;)I
   * Goal 22. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 23. [METHODNOEX] dominion.Dominion.fullDeckCount(IILdominion/GameState;)I
   * Goal 24. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 2012: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1071 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 2070: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1074 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 2128: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1077 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.fullDeckCount(0, 0, gameState0);
  }

  //Test case number: 34
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I7 Branch 159 IFNE L924 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.isGameOver(Ldominion/GameState;)I: I7 Branch 159 IFNE L924 - false in context: dominion.Dominion:isGameOver(Ldominion/GameState;)I
   * Goal 5. [Output]: dominion.Dominion.isGameOver(Ldominion/GameState;)I:Positive
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 924
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.isGameOver(Ldominion/GameState;)I
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.isGameOver(Ldominion/GameState;)I
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 1673: dominion.Dominion.isGameOver(Ldominion/GameState;)I:924 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.isGameOver(gameState0);
  }

  //Test case number: 35
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.shuffle(ILdominion/GameState;)I: I7 Branch 22 IF_ICMPGE L140 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.shuffle(ILdominion/GameState;)I: I7 Branch 22 IF_ICMPGE L140 - false in context: dominion.Dominion:shuffle(ILdominion/GameState;)I
   * Goal 5. [Output]: dominion.Dominion.shuffle(ILdominion/GameState;)I:Negative
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.shuffle(ILdominion/GameState;)I: Line 140
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.shuffle(ILdominion/GameState;)I
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.shuffle(ILdominion/GameState;)I
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 197: dominion.Dominion.shuffle(ILdominion/GameState;)I:140 - ReplaceComparisonOperator >= -> <
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.shuffle(0, gameState0);
  }

  //Test case number: 36
  /*
   * 16 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. Branch dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch in context: dominion.Dominion:whoseTurn(Ldominion/GameState;)I
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. [Output]: dominion.Dominion.whoseTurn(Ldominion/GameState;)I:Zero
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.whoseTurn(Ldominion/GameState;)I
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.whoseTurn(Ldominion/GameState;)I
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.whoseTurn(gameState0);
  }

  //Test case number: 37
  /*
   * 29 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 4. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: I28 Branch 296 IF_ICMPGE L1762 - true
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.testEndTurn(Ldominion/GameState;)V: I28 Branch 296 IF_ICMPGE L1762 - true in context: dominion.Dominion:testEndTurn(Ldominion/GameState;)V
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 13. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 14. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 15. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 16. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1757
   * Goal 17. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1758
   * Goal 18. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1759
   * Goal 19. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1761
   * Goal 20. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1762
   * Goal 21. dominion.Dominion.testEndTurn(Ldominion/GameState;)V: Line 1816
   * Goal 22. [METHOD] dominion.Dominion.<init>()V
   * Goal 23. [METHOD] dominion.Dominion.testEndTurn(Ldominion/GameState;)V
   * Goal 24. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 25. [METHODNOEX] dominion.Dominion.testEndTurn(Ldominion/GameState;)V
   * Goal 26. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 4086: dominion.Dominion.testEndTurn(Ldominion/GameState;)V:1762 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.testEndTurn(gameState0);
  }

  //Test case number: 38
  /*
   * 28 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 4. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: I23 Branch 279 IF_ICMPGE L1671 - true
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: I23 Branch 279 IF_ICMPGE L1671 - true in context: dominion.Dominion:testUpdateCoins(Ldominion/GameState;)V
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 13. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 14. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 15. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 16. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: Line 1668
   * Goal 17. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: Line 1669
   * Goal 18. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: Line 1670
   * Goal 19. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: Line 1671
   * Goal 20. dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V: Line 1684
   * Goal 21. [METHOD] dominion.Dominion.<init>()V
   * Goal 22. [METHOD] dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V
   * Goal 23. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 24. [METHODNOEX] dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V
   * Goal 25. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 3702: dominion.Dominion.testUpdateCoins(Ldominion/GameState;)V:1671 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.testUpdateCoins(gameState0);
  }

  //Test case number: 39
  /*
   * 23 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.testScoreFor(Ldominion/GameState;)V: I17 Branch 267 IF_ICMPGE L1606 - true
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.testScoreFor(Ldominion/GameState;)V: I17 Branch 267 IF_ICMPGE L1606 - true in context: dominion.Dominion:testScoreFor(Ldominion/GameState;)V
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 12. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 13. dominion.Dominion.testScoreFor(Ldominion/GameState;)V: Line 1602
   * Goal 14. dominion.Dominion.testScoreFor(Ldominion/GameState;)V: Line 1603
   * Goal 15. dominion.Dominion.testScoreFor(Ldominion/GameState;)V: Line 1606
   * Goal 16. dominion.Dominion.testScoreFor(Ldominion/GameState;)V: Line 1664
   * Goal 17. [METHOD] dominion.Dominion.<init>()V
   * Goal 18. [METHOD] dominion.Dominion.testScoreFor(Ldominion/GameState;)V
   * Goal 19. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 20. [METHODNOEX] dominion.Dominion.testScoreFor(Ldominion/GameState;)V
   * Goal 21. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 3493: dominion.Dominion.testScoreFor(Ldominion/GameState;)V:1606 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.testScoreFor(gameState0);
  }

  //Test case number: 40
  /*
   * 36 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 4. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true
   * Goal 5. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 6. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: I28 Branch 263 IF_ICMPGE L1547 - true
   * Goal 7. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 8. Branch dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: I28 Branch 263 IF_ICMPGE L1547 - true in context: dominion.Dominion:testDiscardCard(Ldominion/GameState;)V
   * Goal 9. dominion.Dominion.<init>()V: Line 15
   * Goal 10. dominion.Dominion.<init>()V: Line 16
   * Goal 11. dominion.Dominion.<init>()V: Line 17
   * Goal 12. dominion.Dominion.<init>()V: Line 18
   * Goal 13. dominion.Dominion.<init>()V: Line 19
   * Goal 14. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 15. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 16. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 17. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 18. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1197
   * Goal 19. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 20. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 21. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1542
   * Goal 22. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1543
   * Goal 23. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1544
   * Goal 24. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1545
   * Goal 25. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1547
   * Goal 26. dominion.Dominion.testDiscardCard(Ldominion/GameState;)V: Line 1596
   * Goal 27. [METHOD] dominion.Dominion.<init>()V
   * Goal 28. [METHOD] dominion.Dominion.testDiscardCard(Ldominion/GameState;)V
   * Goal 29. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 30. [METHODNOEX] dominion.Dominion.testDiscardCard(Ldominion/GameState;)V
   * Goal 31. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   * Goal 34. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 2754: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 3340: dominion.Dominion.testDiscardCard(Ldominion/GameState;)V:1547 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.testDiscardCard(gameState0);
  }

  //Test case number: 41
  /*
   * 32 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 3. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true
   * Goal 4. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 5. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: I17 Branch 249 IF_ICMPGE L1442 - false
   * Goal 6. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 7. Branch dominion.Dominion.testBuyCard(Ldominion/GameState;)V: I17 Branch 249 IF_ICMPGE L1442 - false in context: dominion.Dominion:testBuyCard(Ldominion/GameState;)V
   * Goal 8. testBuyCard(Ldominion/GameState;)V_java.lang.ArithmeticException_IMPLICIT
   * Goal 9. dominion.Dominion.<init>()V: Line 15
   * Goal 10. dominion.Dominion.<init>()V: Line 16
   * Goal 11. dominion.Dominion.<init>()V: Line 17
   * Goal 12. dominion.Dominion.<init>()V: Line 18
   * Goal 13. dominion.Dominion.<init>()V: Line 19
   * Goal 14. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 15. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 16. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1197
   * Goal 17. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 18. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 19. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1439
   * Goal 20. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1440
   * Goal 21. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1442
   * Goal 22. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1444
   * Goal 23. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1445
   * Goal 24. dominion.Dominion.testBuyCard(Ldominion/GameState;)V: Line 1446
   * Goal 25. [METHOD] dominion.Dominion.<init>()V
   * Goal 26. [METHOD] dominion.Dominion.testBuyCard(Ldominion/GameState;)V
   * Goal 27. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 28. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 2754: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 3097: dominion.Dominion.testBuyCard(Ldominion/GameState;)V:1442 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.testBuyCard(gameState0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 37 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I8 Branch 228 IF_ICMPGE L1211 - true
   * Goal 3. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I111 Branch 236 IF_ICMPGE L1228 - true
   * Goal 4. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I111 Branch 236 IF_ICMPGE L1228 - false
   * Goal 5. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I164 Branch 237 IF_ICMPGE L1243 - true
   * Goal 6. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 7. Branch dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I8 Branch 228 IF_ICMPGE L1211 - true in context: dominion.Dominion:testDrawCard(Ldominion/GameState;)V
   * Goal 8. Branch dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I111 Branch 236 IF_ICMPGE L1228 - false in context: dominion.Dominion:testDrawCard(Ldominion/GameState;)V
   * Goal 9. Branch dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I111 Branch 236 IF_ICMPGE L1228 - true in context: dominion.Dominion:testDrawCard(Ldominion/GameState;)V
   * Goal 10. Branch dominion.Dominion.testDrawCard(Ldominion/GameState;)V: I164 Branch 237 IF_ICMPGE L1243 - true in context: dominion.Dominion:testDrawCard(Ldominion/GameState;)V
   * Goal 11. dominion.Dominion.<init>()V: Line 15
   * Goal 12. dominion.Dominion.<init>()V: Line 16
   * Goal 13. dominion.Dominion.<init>()V: Line 17
   * Goal 14. dominion.Dominion.<init>()V: Line 18
   * Goal 15. dominion.Dominion.<init>()V: Line 19
   * Goal 16. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1211
   * Goal 17. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1223
   * Goal 18. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1224
   * Goal 19. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1225
   * Goal 20. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1228
   * Goal 21. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1229
   * Goal 22. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1230
   * Goal 23. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1231
   * Goal 24. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1236
   * Goal 25. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1237
   * Goal 26. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1238
   * Goal 27. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1239
   * Goal 28. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1243
   * Goal 29. dominion.Dominion.testDrawCard(Ldominion/GameState;)V: Line 1336
   * Goal 30. [METHOD] dominion.Dominion.<init>()V
   * Goal 31. [METHOD] dominion.Dominion.testDrawCard(Ldominion/GameState;)V
   * Goal 32. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 33. [METHODNOEX] dominion.Dominion.testDrawCard(Ldominion/GameState;)V
   * Goal 34. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 2778: dominion.Dominion.testDrawCard(Ldominion/GameState;)V:1211 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 2919: dominion.Dominion.testDrawCard(Ldominion/GameState;)V:1228 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 2920: dominion.Dominion.testDrawCard(Ldominion/GameState;)V:1228 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      dominion0.testDrawCard(gameState0);
  }

  //Test case number: 43
  /*
   * 19 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.getRandomCard()I: root-Branch
   * Goal 3. dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - false
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - false in context: dominion.Dominion:fillCardPile([II)V
   * Goal 6. fillCardPile([II)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.fillCardPile([II)V: Line 1179
   * Goal 13. dominion.Dominion.fillCardPile([II)V: Line 1180
   * Goal 14. dominion.Dominion.getRandomCard()I: Line 1156
   * Goal 15. [METHOD] dominion.Dominion.<init>()V
   * Goal 16. [METHOD] dominion.Dominion.fillCardPile([II)V
   * Goal 17. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 2637: dominion.Dominion.fillCardPile([II)V:1179 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try { 
        dominion0.fillCardPile(intArray0, 23);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 44
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.fillCardPile([II)V: I7 Branch 225 IF_ICMPGE L1179 - true in context: dominion.Dominion:fillCardPile([II)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.fillCardPile([II)V: Line 1179
   * Goal 11. dominion.Dominion.fillCardPile([II)V: Line 1181
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.fillCardPile([II)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.fillCardPile([II)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2638: dominion.Dominion.fillCardPile([II)V:1179 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[2];
      dominion0.fillCardPile(intArray0, 0);
  }

  //Test case number: 45
  /*
   * 24 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - false
   * Goal 3. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - true
   * Goal 4. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - false
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - false in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 7. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - false in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 8. Branch dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - true in context: dominion.Dominion:comparePileCounts([I[ILjava/lang/String;)V
   * Goal 9. comparePileCounts([I[ILjava/lang/String;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 10. dominion.Dominion.<init>()V: Line 15
   * Goal 11. dominion.Dominion.<init>()V: Line 16
   * Goal 12. dominion.Dominion.<init>()V: Line 17
   * Goal 13. dominion.Dominion.<init>()V: Line 18
   * Goal 14. dominion.Dominion.<init>()V: Line 19
   * Goal 15. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1174
   * Goal 16. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1175
   * Goal 17. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1176
   * Goal 18. [METHOD] dominion.Dominion.<init>()V
   * Goal 19. [METHOD] dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V
   * Goal 20. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 21. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 2602: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1174 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 2619: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1175 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2620: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1175 - ReplaceComparisonOperator == -> >=
   */

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[5];
      intArray0[1] = (-1261);
      int[] intArray1 = new int[8];
      // Undeclared exception!
      try { 
        dominion0.comparePileCounts(intArray1, intArray0, "H5)");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 46
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - false in context: dominion.Dominion:arbitraryPileCount([II)[I
   * Goal 5. arbitraryPileCount([II)[I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.arbitraryPileCount([II)[I: Line 1161
   * Goal 12. dominion.Dominion.arbitraryPileCount([II)[I: Line 1162
   * Goal 13. dominion.Dominion.arbitraryPileCount([II)[I: Line 1163
   * Goal 14. [METHOD] dominion.Dominion.<init>()V
   * Goal 15. [METHOD] dominion.Dominion.arbitraryPileCount([II)[I
   * Goal 16. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 17. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2553: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.arbitraryPileCount((int[]) null, 1500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 47
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.nullifyDeck(ILdominion/GameState;)V: I8 Branch 220 IF_ICMPGE L1140 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.nullifyDeck(ILdominion/GameState;)V: I8 Branch 220 IF_ICMPGE L1140 - false in context: dominion.Dominion:nullifyDeck(ILdominion/GameState;)V
   * Goal 5. nullifyDeck(ILdominion/GameState;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.nullifyDeck(ILdominion/GameState;)V: Line 1140
   * Goal 12. dominion.Dominion.nullifyDeck(ILdominion/GameState;)V: Line 1141
   * Goal 13. [METHOD] dominion.Dominion.<init>()V
   * Goal 14. [METHOD] dominion.Dominion.nullifyDeck(ILdominion/GameState;)V
   * Goal 15. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2413: dominion.Dominion.nullifyDeck(ILdominion/GameState;)V:1140 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.nullifyDeck(22, gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 48
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.assertEquals(IILjava/lang/String;)V: I4 Branch 218 IF_ICMPEQ L1131 - false
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.assertEquals(IILjava/lang/String;)V: I4 Branch 218 IF_ICMPEQ L1131 - false in context: dominion.Dominion:assertEquals(IILjava/lang/String;)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.assertEquals(IILjava/lang/String;)V: Line 1131
   * Goal 11. dominion.Dominion.assertEquals(IILjava/lang/String;)V: Line 1132
   * Goal 12. dominion.Dominion.assertEquals(IILjava/lang/String;)V: Line 1133
   * Goal 13. [METHOD] dominion.Dominion.<init>()V
   * Goal 14. [METHOD] dominion.Dominion.assertEquals(IILjava/lang/String;)V
   * Goal 15. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 16. [METHODNOEX] dominion.Dominion.assertEquals(IILjava/lang/String;)V
   * Goal 17. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2379: dominion.Dominion.assertEquals(IILjava/lang/String;)V:1131 - ReplaceComparisonOperator == -> >=
   */

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      dominion0.assertEquals(0, (-453), (String) null);
  }

  //Test case number: 49
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.assertEquals(IILjava/lang/String;)V: I4 Branch 218 IF_ICMPEQ L1131 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.assertEquals(IILjava/lang/String;)V: I4 Branch 218 IF_ICMPEQ L1131 - true in context: dominion.Dominion:assertEquals(IILjava/lang/String;)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.assertEquals(IILjava/lang/String;)V: Line 1131
   * Goal 11. dominion.Dominion.assertEquals(IILjava/lang/String;)V: Line 1133
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.assertEquals(IILjava/lang/String;)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.assertEquals(IILjava/lang/String;)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2378: dominion.Dominion.assertEquals(IILjava/lang/String;)V:1131 - ReplaceComparisonOperator == -> -2
   */

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      dominion0.assertEquals((-2785), (-2785), "6Kx{U'n;_!\"0&dk2_2");
  }

  //Test case number: 50
  /*
   * 17 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.assertEquals(ZZLjava/lang/String;)V: I4 Branch 217 IF_ICMPEQ L1127 - true
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.assertEquals(ZZLjava/lang/String;)V: I4 Branch 217 IF_ICMPEQ L1127 - true in context: dominion.Dominion:assertEquals(ZZLjava/lang/String;)V
   * Goal 5. dominion.Dominion.<init>()V: Line 15
   * Goal 6. dominion.Dominion.<init>()V: Line 16
   * Goal 7. dominion.Dominion.<init>()V: Line 17
   * Goal 8. dominion.Dominion.<init>()V: Line 18
   * Goal 9. dominion.Dominion.<init>()V: Line 19
   * Goal 10. dominion.Dominion.assertEquals(ZZLjava/lang/String;)V: Line 1127
   * Goal 11. dominion.Dominion.assertEquals(ZZLjava/lang/String;)V: Line 1129
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.assertEquals(ZZLjava/lang/String;)V
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.assertEquals(ZZLjava/lang/String;)V
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2363: dominion.Dominion.assertEquals(ZZLjava/lang/String;)V:1127 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      dominion0.assertEquals(true, true, "_zXnjD&B[");
  }

  //Test case number: 51
  /*
   * 36 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I14 Branch 201 IF_ICMPGE L1071 - true
   * Goal 3. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I40 Branch 203 IF_ICMPGE L1074 - true
   * Goal 4. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: I66 Branch 205 IF_ICMPGE L1077 - true
   * Goal 5. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: I13 Branch 221 IF_ICMPGE L1151 - true
   * Goal 6. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: I13 Branch 221 IF_ICMPGE L1151 - false
   * Goal 7. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 8. Branch dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: I13 Branch 221 IF_ICMPGE L1151 - false in context: dominion.Dominion:totalDeckCount(ILdominion/GameState;)I
   * Goal 9. Branch dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: I13 Branch 221 IF_ICMPGE L1151 - true in context: dominion.Dominion:totalDeckCount(ILdominion/GameState;)I
   * Goal 10. [Output]: dominion.Dominion.totalDeckCount(ILdominion/GameState;)I:Zero
   * Goal 11. dominion.Dominion.<init>()V: Line 15
   * Goal 12. dominion.Dominion.<init>()V: Line 16
   * Goal 13. dominion.Dominion.<init>()V: Line 17
   * Goal 14. dominion.Dominion.<init>()V: Line 18
   * Goal 15. dominion.Dominion.<init>()V: Line 19
   * Goal 16. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1069
   * Goal 17. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1071
   * Goal 18. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1074
   * Goal 19. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1077
   * Goal 20. dominion.Dominion.fullDeckCount(IILdominion/GameState;)I: Line 1080
   * Goal 21. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: Line 1150
   * Goal 22. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: Line 1151
   * Goal 23. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: Line 1152
   * Goal 24. dominion.Dominion.totalDeckCount(ILdominion/GameState;)I: Line 1153
   * Goal 25. [METHOD] dominion.Dominion.<init>()V
   * Goal 26. [METHOD] dominion.Dominion.totalDeckCount(ILdominion/GameState;)I
   * Goal 27. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 28. [METHODNOEX] dominion.Dominion.totalDeckCount(ILdominion/GameState;)I
   * Goal 29. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 2012: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1071 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 2070: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1074 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 2128: dominion.Dominion.fullDeckCount(IILdominion/GameState;)I:1077 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 2498: dominion.Dominion.totalDeckCount(ILdominion/GameState;)I:1151 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 2499: dominion.Dominion.totalDeckCount(ILdominion/GameState;)I:1151 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 2525: dominion.Dominion.totalDeckCount(ILdominion/GameState;)I:1152 - ReplaceArithmeticOperator + -> %
   * Goal 36. Weak Mutation 2528: dominion.Dominion.totalDeckCount(ILdominion/GameState;)I:1152 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.totalDeckCount(0, gameState0);
      assertEquals(0, int0);
  }

  //Test case number: 52
  /*
   * 39 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I14 Branch 171 IFEQ L997 - true
   * Goal 3. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I72 Branch 172 IF_ICMPGE L1004 - true
   * Goal 4. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I239 Branch 180 IFEQ L1021 - true
   * Goal 5. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I255 Branch 181 IF_ICMPGE L1024 - true
   * Goal 6. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I422 Branch 189 IFEQ L1040 - true
   * Goal 7. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I438 Branch 190 IF_ICMPGE L1043 - true
   * Goal 8. dominion.Dominion.scoreFor(ILdominion/GameState;)I: I605 Branch 198 IFEQ L1058 - true
   * Goal 9. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 10. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I14 Branch 171 IFEQ L997 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 11. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I72 Branch 172 IF_ICMPGE L1004 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 12. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I239 Branch 180 IFEQ L1021 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 13. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I255 Branch 181 IF_ICMPGE L1024 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 14. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I422 Branch 189 IFEQ L1040 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 15. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I438 Branch 190 IF_ICMPGE L1043 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 16. Branch dominion.Dominion.scoreFor(ILdominion/GameState;)I: I605 Branch 198 IFEQ L1058 - true in context: dominion.Dominion:scoreFor(ILdominion/GameState;)I
   * Goal 17. [Output]: dominion.Dominion.scoreFor(ILdominion/GameState;)I:Zero
   * Goal 18. dominion.Dominion.<init>()V: Line 15
   * Goal 19. dominion.Dominion.<init>()V: Line 16
   * Goal 20. dominion.Dominion.<init>()V: Line 17
   * Goal 21. dominion.Dominion.<init>()V: Line 18
   * Goal 22. dominion.Dominion.<init>()V: Line 19
   * Goal 23. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 992
   * Goal 24. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 995
   * Goal 25. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 997
   * Goal 26. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1004
   * Goal 27. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1021
   * Goal 28. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1024
   * Goal 29. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1040
   * Goal 30. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1043
   * Goal 31. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1058
   * Goal 32. dominion.Dominion.scoreFor(ILdominion/GameState;)I: Line 1066
   * Goal 33. [METHOD] dominion.Dominion.<init>()V
   * Goal 34. [METHOD] dominion.Dominion.scoreFor(ILdominion/GameState;)I
   * Goal 35. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 36. [METHODNOEX] dominion.Dominion.scoreFor(ILdominion/GameState;)I
   * Goal 37. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 1824: dominion.Dominion.scoreFor(ILdominion/GameState;)I:997 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 1889: dominion.Dominion.scoreFor(ILdominion/GameState;)I:1004 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.scoreFor(3, gameState0);
      assertEquals(0, int0);
  }

  //Test case number: 53
  /*
   * 27 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.buyCard(ILdominion/GameState;)I: I4 Branch 163 IFEQ L936 - true
   * Goal 3. dominion.Dominion.buyCard(ILdominion/GameState;)I: I20 Branch 164 IF_ICMPGE L941 - false
   * Goal 4. dominion.Dominion.buyCard(ILdominion/GameState;)I: I25 Branch 165 IFEQ L942 - true
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. Branch dominion.Dominion.buyCard(ILdominion/GameState;)I: I4 Branch 163 IFEQ L936 - true in context: dominion.Dominion:buyCard(ILdominion/GameState;)I
   * Goal 7. Branch dominion.Dominion.buyCard(ILdominion/GameState;)I: I20 Branch 164 IF_ICMPGE L941 - false in context: dominion.Dominion:buyCard(ILdominion/GameState;)I
   * Goal 8. Branch dominion.Dominion.buyCard(ILdominion/GameState;)I: I25 Branch 165 IFEQ L942 - true in context: dominion.Dominion:buyCard(ILdominion/GameState;)I
   * Goal 9. [Output]: dominion.Dominion.buyCard(ILdominion/GameState;)I:Negative
   * Goal 10. dominion.Dominion.<init>()V: Line 15
   * Goal 11. dominion.Dominion.<init>()V: Line 16
   * Goal 12. dominion.Dominion.<init>()V: Line 17
   * Goal 13. dominion.Dominion.<init>()V: Line 18
   * Goal 14. dominion.Dominion.<init>()V: Line 19
   * Goal 15. dominion.Dominion.buyCard(ILdominion/GameState;)I: Line 936
   * Goal 16. dominion.Dominion.buyCard(ILdominion/GameState;)I: Line 939
   * Goal 17. dominion.Dominion.buyCard(ILdominion/GameState;)I: Line 941
   * Goal 18. dominion.Dominion.buyCard(ILdominion/GameState;)I: Line 942
   * Goal 19. dominion.Dominion.buyCard(ILdominion/GameState;)I: Line 944
   * Goal 20. [METHOD] dominion.Dominion.<init>()V
   * Goal 21. [METHOD] dominion.Dominion.buyCard(ILdominion/GameState;)I
   * Goal 22. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 23. [METHODNOEX] dominion.Dominion.buyCard(ILdominion/GameState;)I
   * Goal 24. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 1723: dominion.Dominion.buyCard(ILdominion/GameState;)I:936 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 1732: dominion.Dominion.buyCard(ILdominion/GameState;)I:941 - ReplaceComparisonOperator >= -> <
   * Goal 27. Weak Mutation 1734: dominion.Dominion.buyCard(ILdominion/GameState;)I:942 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.buyCard(500, gameState0);
      assertEquals((-1), int0);
  }

  //Test case number: 54
  /*
   * 51 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.endTurn(Ldominion/GameState;)I: I10 Branch 150 IFEQ L861 - true
   * Goal 4. dominion.Dominion.endTurn(Ldominion/GameState;)I: I32 Branch 151 IF_ICMPGE L867 - true
   * Goal 5. dominion.Dominion.endTurn(Ldominion/GameState;)I: I83 Branch 152 IF_ICMPGE L874 - false
   * Goal 6. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 7. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 8. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true
   * Goal 9. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 10. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 11. testPlayCardAndCardEffect(Ldominion/GameState;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 12. dominion.Dominion.<init>()V: Line 15
   * Goal 13. dominion.Dominion.<init>()V: Line 16
   * Goal 14. dominion.Dominion.<init>()V: Line 17
   * Goal 15. dominion.Dominion.<init>()V: Line 18
   * Goal 16. dominion.Dominion.<init>()V: Line 19
   * Goal 17. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 859
   * Goal 18. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 861
   * Goal 19. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 867
   * Goal 20. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 871
   * Goal 21. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 874
   * Goal 22. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 875
   * Goal 23. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 876
   * Goal 24. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 25. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 26. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 27. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 28. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1197
   * Goal 29. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 30. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 31. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1903
   * Goal 32. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1910
   * Goal 33. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1911
   * Goal 34. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1912
   * Goal 35. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1915
   * Goal 36. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 37. [METHOD] dominion.Dominion.<init>()V
   * Goal 38. [METHOD] dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 39. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 40. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1540: dominion.Dominion.endTurn(Ldominion/GameState;)I:861 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1561: dominion.Dominion.endTurn(Ldominion/GameState;)I:867 - ReplaceComparisonOperator >= -> >
   * Goal 43. Weak Mutation 1633: dominion.Dominion.endTurn(Ldominion/GameState;)I:874 - ReplaceComparisonOperator >= -> -1
   * Goal 44. Weak Mutation 1651: dominion.Dominion.endTurn(Ldominion/GameState;)I:875 - ReplaceArithmeticOperator + -> %
   * Goal 45. Weak Mutation 1652: dominion.Dominion.endTurn(Ldominion/GameState;)I:875 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 1653: dominion.Dominion.endTurn(Ldominion/GameState;)I:875 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 1654: dominion.Dominion.endTurn(Ldominion/GameState;)I:875 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   * Goal 50. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 2754: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      gameState0.playedCardCount = 1645;
      // Undeclared exception!
      try { 
        dominion0.testPlayCardAndCardEffect(gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 55
  /*
   * 95 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.shuffle(ILdominion/GameState;)I: I7 Branch 22 IF_ICMPGE L140 - false
   * Goal 4. dominion.Dominion.drawCard(ILdominion/GameState;)I: I6 Branch 26 IFGT L166 - false
   * Goal 5. dominion.Dominion.drawCard(ILdominion/GameState;)I: I17 Branch 27 IF_ICMPGE L171 - true
   * Goal 6. dominion.Dominion.drawCard(ILdominion/GameState;)I: I73 Branch 28 IFEQ L182 - true
   * Goal 7. dominion.Dominion.drawCard(ILdominion/GameState;)I: I105 Branch 29 IFEQ L189 - true
   * Goal 8. dominion.Dominion.drawCard(ILdominion/GameState;)I: I126 Branch 30 IFNE L193 - false
   * Goal 9. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: I15 Branch 37 IF_ICMPGE L257 - true
   * Goal 10. dominion.Dominion.endTurn(Ldominion/GameState;)I: I10 Branch 150 IFEQ L861 - true
   * Goal 11. dominion.Dominion.endTurn(Ldominion/GameState;)I: I32 Branch 151 IF_ICMPGE L867 - true
   * Goal 12. dominion.Dominion.endTurn(Ldominion/GameState;)I: I83 Branch 152 IF_ICMPGE L874 - true
   * Goal 13. dominion.Dominion.endTurn(Ldominion/GameState;)I: I127 Branch 153 IF_ICMPGE L881 - true
   * Goal 14. dominion.Dominion.endTurn(Ldominion/GameState;)I: I145 Branch 154 IFEQ L887 - true
   * Goal 15. dominion.Dominion.endTurn(Ldominion/GameState;)I: I199 Branch 155 IFEQ L899 - true
   * Goal 16. dominion.Dominion.endTurn(Ldominion/GameState;)I: I219 Branch 156 IF_ICMPEQ L905 - false
   * Goal 17. dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - true
   * Goal 18. dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - false
   * Goal 19. dominion.Dominion.endTurn(Ldominion/GameState;)I: I244 Branch 158 IFEQ L909 - true
   * Goal 20. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 21. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I10 Branch 150 IFEQ L861 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 22. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I32 Branch 151 IF_ICMPGE L867 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 23. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I83 Branch 152 IF_ICMPGE L874 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 24. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I127 Branch 153 IF_ICMPGE L881 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 25. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I145 Branch 154 IFEQ L887 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 26. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I199 Branch 155 IFEQ L899 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 27. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I219 Branch 156 IF_ICMPEQ L905 - false in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 28. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - false in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 29. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 30. Branch dominion.Dominion.endTurn(Ldominion/GameState;)I: I244 Branch 158 IFEQ L909 - true in context: dominion.Dominion:endTurn(Ldominion/GameState;)I
   * Goal 31. [Output]: dominion.Dominion.endTurn(Ldominion/GameState;)I:Zero
   * Goal 32. dominion.Dominion.<init>()V: Line 15
   * Goal 33. dominion.Dominion.<init>()V: Line 16
   * Goal 34. dominion.Dominion.<init>()V: Line 17
   * Goal 35. dominion.Dominion.<init>()V: Line 18
   * Goal 36. dominion.Dominion.<init>()V: Line 19
   * Goal 37. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 166
   * Goal 38. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 171
   * Goal 39. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 176
   * Goal 40. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 177
   * Goal 41. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 180
   * Goal 42. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 182
   * Goal 43. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 184
   * Goal 44. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 187
   * Goal 45. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 189
   * Goal 46. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 191
   * Goal 47. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 193
   * Goal 48. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 859
   * Goal 49. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 861
   * Goal 50. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 867
   * Goal 51. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 871
   * Goal 52. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 874
   * Goal 53. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 878
   * Goal 54. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 881
   * Goal 55. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 884
   * Goal 56. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 887
   * Goal 57. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 891
   * Goal 58. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 892
   * Goal 59. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 893
   * Goal 60. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 894
   * Goal 61. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 895
   * Goal 62. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 896
   * Goal 63. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 897
   * Goal 64. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 899
   * Goal 65. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 905
   * Goal 66. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 906
   * Goal 67. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 907
   * Goal 68. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 909
   * Goal 69. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 915
   * Goal 70. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 916
   * Goal 71. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 918
   * Goal 72. dominion.Dominion.shuffle(ILdominion/GameState;)I: Line 140
   * Goal 73. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 254
   * Goal 74. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 257
   * Goal 75. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 263
   * Goal 76. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 265
   * Goal 77. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 78. [METHOD] dominion.Dominion.<init>()V
   * Goal 79. [METHOD] dominion.Dominion.endTurn(Ldominion/GameState;)I
   * Goal 80. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 81. [METHODNOEX] dominion.Dominion.endTurn(Ldominion/GameState;)I
   * Goal 82. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 197: dominion.Dominion.shuffle(ILdominion/GameState;)I:140 - ReplaceComparisonOperator >= -> <
   * Goal 84. Weak Mutation 393: dominion.Dominion.drawCard(ILdominion/GameState;)I:166 - ReplaceComparisonOperator > -> >=
   * Goal 85. Weak Mutation 410: dominion.Dominion.drawCard(ILdominion/GameState;)I:171 - ReplaceComparisonOperator >= -> >
   * Goal 86. Weak Mutation 484: dominion.Dominion.drawCard(ILdominion/GameState;)I:182 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 506: dominion.Dominion.drawCard(ILdominion/GameState;)I:189 - ReplaceComparisonOperator == -> !=
   * Goal 88. Weak Mutation 705: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:257 - ReplaceComparisonOperator >= -> >
   * Goal 89. Weak Mutation 810: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 90. Weak Mutation 813: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 91. Weak Mutation 814: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 92. Weak Mutation 817: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 93. Weak Mutation 1540: dominion.Dominion.endTurn(Ldominion/GameState;)I:861 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 1561: dominion.Dominion.endTurn(Ldominion/GameState;)I:867 - ReplaceComparisonOperator >= -> >
   * Goal 95. Weak Mutation 1634: dominion.Dominion.endTurn(Ldominion/GameState;)I:874 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.endTurn(gameState0);
      assertEquals(0, int0);
  }

  //Test case number: 56
  /*
   * 71 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.getCost(I)I: I8 Branch 122 TABLESWITCH L824 Case 1 - false
   * Goal 3. dominion.Dominion.getCost(I)I: I8 Branch 123 TABLESWITCH L824 Case 2 - false
   * Goal 4. dominion.Dominion.getCost(I)I: I8 Branch 124 TABLESWITCH L824 Case 3 - false
   * Goal 5. dominion.Dominion.getCost(I)I: I8 Branch 125 TABLESWITCH L824 Case 4 - false
   * Goal 6. dominion.Dominion.getCost(I)I: I8 Branch 126 TABLESWITCH L824 Case 5 - false
   * Goal 7. dominion.Dominion.getCost(I)I: I8 Branch 127 TABLESWITCH L824 Case 6 - false
   * Goal 8. dominion.Dominion.getCost(I)I: I8 Branch 128 TABLESWITCH L824 Case 7 - false
   * Goal 9. dominion.Dominion.getCost(I)I: I8 Branch 129 TABLESWITCH L824 Case 8 - false
   * Goal 10. dominion.Dominion.getCost(I)I: I8 Branch 130 TABLESWITCH L824 Case 9 - false
   * Goal 11. dominion.Dominion.getCost(I)I: I8 Branch 131 TABLESWITCH L824 Case 10 - false
   * Goal 12. dominion.Dominion.getCost(I)I: I8 Branch 132 TABLESWITCH L824 Case 11 - false
   * Goal 13. dominion.Dominion.getCost(I)I: I8 Branch 133 TABLESWITCH L824 Case 12 - false
   * Goal 14. dominion.Dominion.getCost(I)I: I8 Branch 134 TABLESWITCH L824 Case 13 - false
   * Goal 15. dominion.Dominion.getCost(I)I: I8 Branch 135 TABLESWITCH L824 Case 14 - true
   * Goal 16. dominion.Dominion.getCost(I)I: I8 Branch 136 TABLESWITCH L824 Case 15 - false
   * Goal 17. dominion.Dominion.getCost(I)I: I8 Branch 137 TABLESWITCH L824 Case 16 - false
   * Goal 18. dominion.Dominion.getCost(I)I: I8 Branch 138 TABLESWITCH L824 Case 17 - false
   * Goal 19. dominion.Dominion.getCost(I)I: I8 Branch 139 TABLESWITCH L824 Case 18 - false
   * Goal 20. dominion.Dominion.getCost(I)I: I8 Branch 140 TABLESWITCH L824 Case 19 - false
   * Goal 21. dominion.Dominion.getCost(I)I: I8 Branch 141 TABLESWITCH L824 Case 20 - false
   * Goal 22. dominion.Dominion.getCost(I)I: I8 Branch 142 TABLESWITCH L824 Case 21 - false
   * Goal 23. dominion.Dominion.getCost(I)I: I8 Branch 143 TABLESWITCH L824 Case 22 - false
   * Goal 24. dominion.Dominion.getCost(I)I: I8 Branch 144 TABLESWITCH L824 Case 23 - false
   * Goal 25. dominion.Dominion.getCost(I)I: I8 Branch 145 TABLESWITCH L824 Case 24 - false
   * Goal 26. dominion.Dominion.getCost(I)I: I8 Branch 146 TABLESWITCH L824 Case 25 - false
   * Goal 27. dominion.Dominion.getCost(I)I: I8 Branch 147 TABLESWITCH L824 Case 26 - false
   * Goal 28. dominion.Dominion.getCost(I)I: I8 Branch 148 TABLESWITCH L824 Case 27 - false
   * Goal 29. dominion.Dominion.getCost(I)I: I8 Branch 149 TABLESWITCH L824 Default-Case - false
   * Goal 30. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 31. Branch dominion.Dominion.getCost(I)I: I8 Branch 143 TABLESWITCH L824 Case 22 - false in context: dominion.Dominion:getCost(I)I
   * Goal 32. Branch dominion.Dominion.getCost(I)I: I8 Branch 135 TABLESWITCH L824 Case 14 - true in context: dominion.Dominion:getCost(I)I
   * Goal 33. Branch dominion.Dominion.getCost(I)I: I8 Branch 139 TABLESWITCH L824 Case 18 - false in context: dominion.Dominion:getCost(I)I
   * Goal 34. Branch dominion.Dominion.getCost(I)I: I8 Branch 147 TABLESWITCH L824 Case 26 - false in context: dominion.Dominion:getCost(I)I
   * Goal 35. Branch dominion.Dominion.getCost(I)I: I8 Branch 146 TABLESWITCH L824 Case 25 - false in context: dominion.Dominion:getCost(I)I
   * Goal 36. Branch dominion.Dominion.getCost(I)I: I8 Branch 128 TABLESWITCH L824 Case 7 - false in context: dominion.Dominion:getCost(I)I
   * Goal 37. Branch dominion.Dominion.getCost(I)I: I8 Branch 127 TABLESWITCH L824 Case 6 - false in context: dominion.Dominion:getCost(I)I
   * Goal 38. Branch dominion.Dominion.getCost(I)I: I8 Branch 142 TABLESWITCH L824 Case 21 - false in context: dominion.Dominion:getCost(I)I
   * Goal 39. Branch dominion.Dominion.getCost(I)I: I8 Branch 137 TABLESWITCH L824 Case 16 - false in context: dominion.Dominion:getCost(I)I
   * Goal 40. Branch dominion.Dominion.getCost(I)I: I8 Branch 149 TABLESWITCH L824 Default-Case - false in context: dominion.Dominion:getCost(I)I
   * Goal 41. Branch dominion.Dominion.getCost(I)I: I8 Branch 132 TABLESWITCH L824 Case 11 - false in context: dominion.Dominion:getCost(I)I
   * Goal 42. Branch dominion.Dominion.getCost(I)I: I8 Branch 144 TABLESWITCH L824 Case 23 - false in context: dominion.Dominion:getCost(I)I
   * Goal 43. Branch dominion.Dominion.getCost(I)I: I8 Branch 125 TABLESWITCH L824 Case 4 - false in context: dominion.Dominion:getCost(I)I
   * Goal 44. Branch dominion.Dominion.getCost(I)I: I8 Branch 141 TABLESWITCH L824 Case 20 - false in context: dominion.Dominion:getCost(I)I
   * Goal 45. Branch dominion.Dominion.getCost(I)I: I8 Branch 145 TABLESWITCH L824 Case 24 - false in context: dominion.Dominion:getCost(I)I
   * Goal 46. Branch dominion.Dominion.getCost(I)I: I8 Branch 148 TABLESWITCH L824 Case 27 - false in context: dominion.Dominion:getCost(I)I
   * Goal 47. Branch dominion.Dominion.getCost(I)I: I8 Branch 130 TABLESWITCH L824 Case 9 - false in context: dominion.Dominion:getCost(I)I
   * Goal 48. Branch dominion.Dominion.getCost(I)I: I8 Branch 134 TABLESWITCH L824 Case 13 - false in context: dominion.Dominion:getCost(I)I
   * Goal 49. Branch dominion.Dominion.getCost(I)I: I8 Branch 123 TABLESWITCH L824 Case 2 - false in context: dominion.Dominion:getCost(I)I
   * Goal 50. Branch dominion.Dominion.getCost(I)I: I8 Branch 122 TABLESWITCH L824 Case 1 - false in context: dominion.Dominion:getCost(I)I
   * Goal 51. Branch dominion.Dominion.getCost(I)I: I8 Branch 129 TABLESWITCH L824 Case 8 - false in context: dominion.Dominion:getCost(I)I
   * Goal 52. Branch dominion.Dominion.getCost(I)I: I8 Branch 140 TABLESWITCH L824 Case 19 - false in context: dominion.Dominion:getCost(I)I
   * Goal 53. Branch dominion.Dominion.getCost(I)I: I8 Branch 136 TABLESWITCH L824 Case 15 - false in context: dominion.Dominion:getCost(I)I
   * Goal 54. Branch dominion.Dominion.getCost(I)I: I8 Branch 133 TABLESWITCH L824 Case 12 - false in context: dominion.Dominion:getCost(I)I
   * Goal 55. Branch dominion.Dominion.getCost(I)I: I8 Branch 124 TABLESWITCH L824 Case 3 - false in context: dominion.Dominion:getCost(I)I
   * Goal 56. Branch dominion.Dominion.getCost(I)I: I8 Branch 126 TABLESWITCH L824 Case 5 - false in context: dominion.Dominion:getCost(I)I
   * Goal 57. Branch dominion.Dominion.getCost(I)I: I8 Branch 138 TABLESWITCH L824 Case 17 - false in context: dominion.Dominion:getCost(I)I
   * Goal 58. Branch dominion.Dominion.getCost(I)I: I8 Branch 131 TABLESWITCH L824 Case 10 - false in context: dominion.Dominion:getCost(I)I
   * Goal 59. [Output]: dominion.Dominion.getCost(I)I:Zero
   * Goal 60. dominion.Dominion.<init>()V: Line 15
   * Goal 61. dominion.Dominion.<init>()V: Line 16
   * Goal 62. dominion.Dominion.<init>()V: Line 17
   * Goal 63. dominion.Dominion.<init>()V: Line 18
   * Goal 64. dominion.Dominion.<init>()V: Line 19
   * Goal 65. dominion.Dominion.getCost(I)I: Line 824
   * Goal 66. dominion.Dominion.getCost(I)I: Line 826
   * Goal 67. [METHOD] dominion.Dominion.<init>()V
   * Goal 68. [METHOD] dominion.Dominion.getCost(I)I
   * Goal 69. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 70. [METHODNOEX] dominion.Dominion.getCost(I)I
   * Goal 71. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int int0 = dominion0.getCost(0);
      assertEquals(0, int0);
  }

  //Test case number: 57
  /*
   * 86 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: I15 Branch 37 IF_ICMPGE L257 - true
   * Goal 4. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false
   * Goal 5. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 42 TABLESWITCH L280 Case 1 - false
   * Goal 6. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 43 TABLESWITCH L280 Case 2 - false
   * Goal 7. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 44 TABLESWITCH L280 Case 3 - false
   * Goal 8. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 45 TABLESWITCH L280 Case 4 - true
   * Goal 9. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 46 TABLESWITCH L280 Case 5 - false
   * Goal 10. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 47 TABLESWITCH L280 Case 6 - false
   * Goal 11. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 48 TABLESWITCH L280 Case 7 - false
   * Goal 12. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 49 TABLESWITCH L280 Case 8 - false
   * Goal 13. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 50 TABLESWITCH L280 Case 9 - false
   * Goal 14. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 51 TABLESWITCH L280 Case 10 - false
   * Goal 15. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 52 TABLESWITCH L280 Case 11 - false
   * Goal 16. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 53 TABLESWITCH L280 Case 12 - false
   * Goal 17. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 54 TABLESWITCH L280 Case 13 - false
   * Goal 18. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 55 TABLESWITCH L280 Default-Case - false
   * Goal 19. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I650 Branch 86 IF_ICMPGE L391 - true
   * Goal 20. dominion.Dominion.discardCard(IILdominion/GameState;I)I: I7 Branch 115 IF_ICMPGE L758 - false
   * Goal 21. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 22. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 23. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 51 TABLESWITCH L280 Case 10 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 24. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 55 TABLESWITCH L280 Default-Case - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 25. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 54 TABLESWITCH L280 Case 13 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 26. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 47 TABLESWITCH L280 Case 6 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 27. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 48 TABLESWITCH L280 Case 7 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 28. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 52 TABLESWITCH L280 Case 11 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 29. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 43 TABLESWITCH L280 Case 2 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 30. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 50 TABLESWITCH L280 Case 9 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 31. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 49 TABLESWITCH L280 Case 8 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 32. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 42 TABLESWITCH L280 Case 1 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 33. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 45 TABLESWITCH L280 Case 4 - true in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 34. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 46 TABLESWITCH L280 Case 5 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 35. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 53 TABLESWITCH L280 Case 12 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 36. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 44 TABLESWITCH L280 Case 3 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 37. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I650 Branch 86 IF_ICMPGE L391 - true in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 38. Branch dominion.Dominion.discardCard(IILdominion/GameState;I)I: I7 Branch 115 IF_ICMPGE L758 - false in context: 
   * Goal 39. [Output]: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:Zero
   * Goal 40. dominion.Dominion.<init>()V: Line 15
   * Goal 41. dominion.Dominion.<init>()V: Line 16
   * Goal 42. dominion.Dominion.<init>()V: Line 17
   * Goal 43. dominion.Dominion.<init>()V: Line 18
   * Goal 44. dominion.Dominion.<init>()V: Line 19
   * Goal 45. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 268
   * Goal 46. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 269
   * Goal 47. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 271
   * Goal 48. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 272
   * Goal 49. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 273
   * Goal 50. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 275
   * Goal 51. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 276
   * Goal 52. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 277
   * Goal 53. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 280
   * Goal 54. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 390
   * Goal 55. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 391
   * Goal 56. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 416
   * Goal 57. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 418
   * Goal 58. dominion.Dominion.discardCard(IILdominion/GameState;I)I: Line 758
   * Goal 59. dominion.Dominion.discardCard(IILdominion/GameState;I)I: Line 759
   * Goal 60. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 254
   * Goal 61. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 257
   * Goal 62. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 263
   * Goal 63. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 265
   * Goal 64. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 65. [METHOD] dominion.Dominion.<init>()V
   * Goal 66. [METHOD] dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I
   * Goal 67. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 68. [METHODNOEX] dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I
   * Goal 69. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 705: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:257 - ReplaceComparisonOperator >= -> >
   * Goal 71. Weak Mutation 810: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 813: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 814: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 815: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> -
   * Goal 75. Weak Mutation 816: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> *
   * Goal 76. Weak Mutation 817: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 77. Weak Mutation 832: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> %
   * Goal 78. Weak Mutation 833: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> -
   * Goal 79. Weak Mutation 834: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> *
   * Goal 80. Weak Mutation 835: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> /
   * Goal 81. Weak Mutation 872: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 873: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 874: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 875: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 876: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceComparisonOperator <= -> -1
   * Goal 86. Weak Mutation 1065: dominion.Dominion.discardCard(IILdominion/GameState;I)I:758 - ReplaceComparisonOperator >= -> <
   */

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.cardEffect(21, 20, 20, 4257, gameState0, 4257, (-3468));
      assertEquals(0, int0);
  }

  //Test case number: 58
  /*
   * 64 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false
   * Goal 4. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 42 TABLESWITCH L280 Case 1 - false
   * Goal 5. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 43 TABLESWITCH L280 Case 2 - false
   * Goal 6. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 44 TABLESWITCH L280 Case 3 - false
   * Goal 7. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 45 TABLESWITCH L280 Case 4 - false
   * Goal 8. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 46 TABLESWITCH L280 Case 5 - false
   * Goal 9. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 47 TABLESWITCH L280 Case 6 - false
   * Goal 10. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 48 TABLESWITCH L280 Case 7 - false
   * Goal 11. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 49 TABLESWITCH L280 Case 8 - false
   * Goal 12. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 50 TABLESWITCH L280 Case 9 - false
   * Goal 13. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 51 TABLESWITCH L280 Case 10 - false
   * Goal 14. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 52 TABLESWITCH L280 Case 11 - false
   * Goal 15. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 53 TABLESWITCH L280 Case 12 - false
   * Goal 16. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 54 TABLESWITCH L280 Case 13 - false
   * Goal 17. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 55 TABLESWITCH L280 Default-Case - true
   * Goal 18. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 19. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I46 Branch 41 IF_ICMPLE L276 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 20. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 51 TABLESWITCH L280 Case 10 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 21. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 54 TABLESWITCH L280 Case 13 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 22. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 47 TABLESWITCH L280 Case 6 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 23. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 48 TABLESWITCH L280 Case 7 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 24. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 52 TABLESWITCH L280 Case 11 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 25. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 45 TABLESWITCH L280 Case 4 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 26. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 43 TABLESWITCH L280 Case 2 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 27. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 50 TABLESWITCH L280 Case 9 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 28. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 49 TABLESWITCH L280 Case 8 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 29. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 42 TABLESWITCH L280 Case 1 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 30. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 46 TABLESWITCH L280 Case 5 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 31. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 53 TABLESWITCH L280 Case 12 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 32. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 55 TABLESWITCH L280 Default-Case - true in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 33. Branch dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: I59 Branch 44 TABLESWITCH L280 Case 3 - false in context: dominion.Dominion:cardEffect(IIIILdominion/GameState;II)I
   * Goal 34. [Output]: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:Negative
   * Goal 35. dominion.Dominion.<init>()V: Line 15
   * Goal 36. dominion.Dominion.<init>()V: Line 16
   * Goal 37. dominion.Dominion.<init>()V: Line 17
   * Goal 38. dominion.Dominion.<init>()V: Line 18
   * Goal 39. dominion.Dominion.<init>()V: Line 19
   * Goal 40. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 268
   * Goal 41. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 269
   * Goal 42. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 271
   * Goal 43. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 272
   * Goal 44. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 273
   * Goal 45. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 275
   * Goal 46. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 276
   * Goal 47. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 277
   * Goal 48. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 280
   * Goal 49. dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I: Line 754
   * Goal 50. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 51. [METHOD] dominion.Dominion.<init>()V
   * Goal 52. [METHOD] dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I
   * Goal 53. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 54. [METHODNOEX] dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I
   * Goal 55. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 832: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 833: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> -
   * Goal 58. Weak Mutation 834: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> *
   * Goal 59. Weak Mutation 835: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:269 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 872: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 873: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 874: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 875: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 876: dominion.Dominion.cardEffect(IIIILdominion/GameState;II)I:276 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.cardEffect(0, 0, 3432, 5, gameState0, 5, 5);
      assertEquals((-1), int0);
  }

  //Test case number: 59
  /*
   * 22 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.playCard(IIIILdominion/GameState;)I: I8 Branch 32 IFEQ L228 - true
   * Goal 3. dominion.Dominion.playCard(IIIILdominion/GameState;)I: I16 Branch 33 IF_ICMPGE L229 - false
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.playCard(IIIILdominion/GameState;)I: I8 Branch 32 IFEQ L228 - true in context: dominion.Dominion:playCard(IIIILdominion/GameState;)I
   * Goal 6. Branch dominion.Dominion.playCard(IIIILdominion/GameState;)I: I16 Branch 33 IF_ICMPGE L229 - false in context: dominion.Dominion:playCard(IIIILdominion/GameState;)I
   * Goal 7. [Output]: dominion.Dominion.playCard(IIIILdominion/GameState;)I:Negative
   * Goal 8. dominion.Dominion.<init>()V: Line 15
   * Goal 9. dominion.Dominion.<init>()V: Line 16
   * Goal 10. dominion.Dominion.<init>()V: Line 17
   * Goal 11. dominion.Dominion.<init>()V: Line 18
   * Goal 12. dominion.Dominion.<init>()V: Line 19
   * Goal 13. dominion.Dominion.playCard(IIIILdominion/GameState;)I: Line 226
   * Goal 14. dominion.Dominion.playCard(IIIILdominion/GameState;)I: Line 228
   * Goal 15. dominion.Dominion.playCard(IIIILdominion/GameState;)I: Line 229
   * Goal 16. [METHOD] dominion.Dominion.<init>()V
   * Goal 17. [METHOD] dominion.Dominion.playCard(IIIILdominion/GameState;)I
   * Goal 18. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 19. [METHODNOEX] dominion.Dominion.playCard(IIIILdominion/GameState;)I
   * Goal 20. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 536: dominion.Dominion.playCard(IIIILdominion/GameState;)I:228 - ReplaceComparisonOperator == -> -2
   * Goal 22. Weak Mutation 546: dominion.Dominion.playCard(IIIILdominion/GameState;)I:229 - ReplaceComparisonOperator >= -> <
   */

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.playCard(0, 0, 0, (-2), gameState0);
      assertEquals((-1), int0);
  }

  //Test case number: 60
  /*
   * 146 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.shuffle(ILdominion/GameState;)I: I7 Branch 22 IF_ICMPGE L140 - false
   * Goal 4. dominion.Dominion.drawCard(ILdominion/GameState;)I: I6 Branch 26 IFGT L166 - false
   * Goal 5. dominion.Dominion.drawCard(ILdominion/GameState;)I: I17 Branch 27 IF_ICMPGE L171 - true
   * Goal 6. dominion.Dominion.drawCard(ILdominion/GameState;)I: I73 Branch 28 IFEQ L182 - false
   * Goal 7. dominion.Dominion.drawCard(ILdominion/GameState;)I: I105 Branch 29 IFEQ L189 - false
   * Goal 8. dominion.Dominion.drawCard(ILdominion/GameState;)I: I126 Branch 30 IFNE L193 - false
   * Goal 9. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: I15 Branch 37 IF_ICMPGE L257 - true
   * Goal 10. dominion.Dominion.endTurn(Ldominion/GameState;)I: I10 Branch 150 IFEQ L861 - false
   * Goal 11. dominion.Dominion.endTurn(Ldominion/GameState;)I: I32 Branch 151 IF_ICMPGE L867 - true
   * Goal 12. dominion.Dominion.endTurn(Ldominion/GameState;)I: I83 Branch 152 IF_ICMPGE L874 - true
   * Goal 13. dominion.Dominion.endTurn(Ldominion/GameState;)I: I127 Branch 153 IF_ICMPGE L881 - true
   * Goal 14. dominion.Dominion.endTurn(Ldominion/GameState;)I: I145 Branch 154 IFEQ L887 - false
   * Goal 15. dominion.Dominion.endTurn(Ldominion/GameState;)I: I199 Branch 155 IFEQ L899 - false
   * Goal 16. dominion.Dominion.endTurn(Ldominion/GameState;)I: I219 Branch 156 IF_ICMPEQ L905 - false
   * Goal 17. dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - true
   * Goal 18. dominion.Dominion.endTurn(Ldominion/GameState;)I: I227 Branch 157 IF_ICMPGE L906 - false
   * Goal 19. dominion.Dominion.endTurn(Ldominion/GameState;)I: I244 Branch 158 IFEQ L909 - false
   * Goal 20. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I7 Branch 159 IFNE L924 - true
   * Goal 21. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I7 Branch 159 IFNE L924 - false
   * Goal 22. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I21 Branch 160 IF_ICMPGE L928 - true
   * Goal 23. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I21 Branch 160 IF_ICMPGE L928 - false
   * Goal 24. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I28 Branch 161 IFNE L929 - true
   * Goal 25. dominion.Dominion.isGameOver(Ldominion/GameState;)I: I38 Branch 162 IF_ICMPLT L930 - true
   * Goal 26. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: I8 Branch 219 IF_ICMPGE L1135 - true
   * Goal 27. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: I8 Branch 226 IF_ICMPGE L1183 - true
   * Goal 28. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - true
   * Goal 29. dominion.Dominion.fillSupply(Ldominion/GameState;)V: I9 Branch 227 IF_ICMPGE L1195 - false
   * Goal 30. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I49 Branch 309 IFNE L1920 - true
   * Goal 31. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I49 Branch 309 IFNE L1920 - false
   * Goal 32. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I58 Branch 310 IF_ICMPGE L1921 - true
   * Goal 33. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 34. Branch dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I49 Branch 309 IFNE L1920 - true in context: dominion.Dominion:testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 35. Branch dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I49 Branch 309 IFNE L1920 - false in context: dominion.Dominion:testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 36. Branch dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: I58 Branch 310 IF_ICMPGE L1921 - true in context: dominion.Dominion:testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 37. dominion.Dominion.<init>()V: Line 15
   * Goal 38. dominion.Dominion.<init>()V: Line 16
   * Goal 39. dominion.Dominion.<init>()V: Line 17
   * Goal 40. dominion.Dominion.<init>()V: Line 18
   * Goal 41. dominion.Dominion.<init>()V: Line 19
   * Goal 42. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 166
   * Goal 43. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 171
   * Goal 44. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 176
   * Goal 45. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 177
   * Goal 46. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 180
   * Goal 47. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 182
   * Goal 48. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 184
   * Goal 49. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 187
   * Goal 50. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 189
   * Goal 51. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 191
   * Goal 52. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 193
   * Goal 53. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 859
   * Goal 54. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 861
   * Goal 55. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 862
   * Goal 56. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 863
   * Goal 57. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 867
   * Goal 58. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 871
   * Goal 59. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 874
   * Goal 60. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 878
   * Goal 61. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 881
   * Goal 62. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 884
   * Goal 63. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 887
   * Goal 64. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 888
   * Goal 65. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 889
   * Goal 66. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 891
   * Goal 67. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 892
   * Goal 68. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 893
   * Goal 69. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 894
   * Goal 70. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 895
   * Goal 71. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 896
   * Goal 72. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 897
   * Goal 73. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 899
   * Goal 74. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 900
   * Goal 75. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 901
   * Goal 76. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 905
   * Goal 77. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 906
   * Goal 78. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 907
   * Goal 79. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 909
   * Goal 80. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 910
   * Goal 81. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 911
   * Goal 82. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 915
   * Goal 83. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 916
   * Goal 84. dominion.Dominion.endTurn(Ldominion/GameState;)I: Line 918
   * Goal 85. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1183
   * Goal 86. dominion.Dominion.fillDecks(Ldominion/GameState;I)V: Line 1193
   * Goal 87. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1195
   * Goal 88. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1196
   * Goal 89. dominion.Dominion.fillSupply(Ldominion/GameState;)V: Line 1197
   * Goal 90. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 924
   * Goal 91. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 927
   * Goal 92. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 928
   * Goal 93. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 929
   * Goal 94. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 930
   * Goal 95. dominion.Dominion.isGameOver(Ldominion/GameState;)I: Line 931
   * Goal 96. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1135
   * Goal 97. dominion.Dominion.nullifyDecks(Ldominion/GameState;)V: Line 1138
   * Goal 98. dominion.Dominion.shuffle(ILdominion/GameState;)I: Line 140
   * Goal 99. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1903
   * Goal 100. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1910
   * Goal 101. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1911
   * Goal 102. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1912
   * Goal 103. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1915
   * Goal 104. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1916
   * Goal 105. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1917
   * Goal 106. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1918
   * Goal 107. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1920
   * Goal 108. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 1921
   * Goal 109. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 2116
   * Goal 110. dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V: Line 2119
   * Goal 111. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 254
   * Goal 112. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 257
   * Goal 113. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 263
   * Goal 114. dominion.Dominion.updateCoins(ILdominion/GameState;I)I: Line 265
   * Goal 115. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 116. [METHOD] dominion.Dominion.<init>()V
   * Goal 117. [METHOD] dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 118. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 119. [METHODNOEX] dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V
   * Goal 120. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 197: dominion.Dominion.shuffle(ILdominion/GameState;)I:140 - ReplaceComparisonOperator >= -> <
   * Goal 122. Weak Mutation 393: dominion.Dominion.drawCard(ILdominion/GameState;)I:166 - ReplaceComparisonOperator > -> >=
   * Goal 123. Weak Mutation 410: dominion.Dominion.drawCard(ILdominion/GameState;)I:171 - ReplaceComparisonOperator >= -> >
   * Goal 124. Weak Mutation 484: dominion.Dominion.drawCard(ILdominion/GameState;)I:182 - ReplaceComparisonOperator == -> !=
   * Goal 125. Weak Mutation 506: dominion.Dominion.drawCard(ILdominion/GameState;)I:189 - ReplaceComparisonOperator == -> !=
   * Goal 126. Weak Mutation 705: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:257 - ReplaceComparisonOperator >= -> >
   * Goal 127. Weak Mutation 810: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 128. Weak Mutation 813: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 814: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> %
   * Goal 130. Weak Mutation 817: dominion.Dominion.updateCoins(ILdominion/GameState;I)I:263 - ReplaceArithmeticOperator + -> /
   * Goal 131. Weak Mutation 1540: dominion.Dominion.endTurn(Ldominion/GameState;)I:861 - ReplaceComparisonOperator == -> !=
   * Goal 132. Weak Mutation 1561: dominion.Dominion.endTurn(Ldominion/GameState;)I:867 - ReplaceComparisonOperator >= -> >
   * Goal 133. Weak Mutation 1634: dominion.Dominion.endTurn(Ldominion/GameState;)I:874 - ReplaceComparisonOperator >= -> >
   * Goal 134. Weak Mutation 1673: dominion.Dominion.isGameOver(Ldominion/GameState;)I:924 - ReplaceComparisonOperator != -> -1
   * Goal 135. Weak Mutation 1674: dominion.Dominion.isGameOver(Ldominion/GameState;)I:924 - ReplaceComparisonOperator != -> <
   * Goal 136. Weak Mutation 1691: dominion.Dominion.isGameOver(Ldominion/GameState;)I:928 - ReplaceComparisonOperator >= -> -1
   * Goal 137. Weak Mutation 1692: dominion.Dominion.isGameOver(Ldominion/GameState;)I:928 - ReplaceComparisonOperator >= -> >
   * Goal 138. Weak Mutation 1702: dominion.Dominion.isGameOver(Ldominion/GameState;)I:929 - ReplaceComparisonOperator != -> <
   * Goal 139. Weak Mutation 1718: dominion.Dominion.isGameOver(Ldominion/GameState;)I:930 - ReplaceComparisonOperator < -> -2
   * Goal 140. Weak Mutation 2392: dominion.Dominion.nullifyDecks(Ldominion/GameState;)V:1135 - ReplaceComparisonOperator >= -> >
   * Goal 141. Weak Mutation 2660: dominion.Dominion.fillDecks(Ldominion/GameState;I)V:1183 - ReplaceComparisonOperator >= -> >
   * Goal 142. Weak Mutation 2753: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> -1
   * Goal 143. Weak Mutation 2754: dominion.Dominion.fillSupply(Ldominion/GameState;)V:1195 - ReplaceComparisonOperator >= -> >
   * Goal 144. Weak Mutation 4316: dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V:1920 - ReplaceComparisonOperator != -> -1
   * Goal 145. Weak Mutation 4317: dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V:1920 - ReplaceComparisonOperator != -> <
   * Goal 146. Weak Mutation 4331: dominion.Dominion.testPlayCardAndCardEffect(Ldominion/GameState;)V:1921 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      dominion0.DEBUG = true;
      GameState gameState0 = new GameState();
      dominion0.testPlayCardAndCardEffect(gameState0);
  }

  //Test case number: 61
  /*
   * 41 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.shuffle(ILdominion/GameState;)I: I7 Branch 22 IF_ICMPGE L140 - false
   * Goal 3. dominion.Dominion.drawCard(ILdominion/GameState;)I: I6 Branch 26 IFGT L166 - false
   * Goal 4. dominion.Dominion.drawCard(ILdominion/GameState;)I: I17 Branch 27 IF_ICMPGE L171 - true
   * Goal 5. dominion.Dominion.drawCard(ILdominion/GameState;)I: I73 Branch 28 IFEQ L182 - true
   * Goal 6. dominion.Dominion.drawCard(ILdominion/GameState;)I: I105 Branch 29 IFEQ L189 - true
   * Goal 7. dominion.Dominion.drawCard(ILdominion/GameState;)I: I126 Branch 30 IFNE L193 - false
   * Goal 8. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 9. Branch dominion.Dominion.drawCard(ILdominion/GameState;)I: I6 Branch 26 IFGT L166 - false in context: dominion.Dominion:drawCard(ILdominion/GameState;)I
   * Goal 10. Branch dominion.Dominion.drawCard(ILdominion/GameState;)I: I17 Branch 27 IF_ICMPGE L171 - true in context: dominion.Dominion:drawCard(ILdominion/GameState;)I
   * Goal 11. Branch dominion.Dominion.drawCard(ILdominion/GameState;)I: I73 Branch 28 IFEQ L182 - true in context: dominion.Dominion:drawCard(ILdominion/GameState;)I
   * Goal 12. Branch dominion.Dominion.drawCard(ILdominion/GameState;)I: I105 Branch 29 IFEQ L189 - true in context: dominion.Dominion:drawCard(ILdominion/GameState;)I
   * Goal 13. Branch dominion.Dominion.drawCard(ILdominion/GameState;)I: I126 Branch 30 IFNE L193 - false in context: dominion.Dominion:drawCard(ILdominion/GameState;)I
   * Goal 14. [Output]: dominion.Dominion.drawCard(ILdominion/GameState;)I:Negative
   * Goal 15. dominion.Dominion.<init>()V: Line 15
   * Goal 16. dominion.Dominion.<init>()V: Line 16
   * Goal 17. dominion.Dominion.<init>()V: Line 17
   * Goal 18. dominion.Dominion.<init>()V: Line 18
   * Goal 19. dominion.Dominion.<init>()V: Line 19
   * Goal 20. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 166
   * Goal 21. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 171
   * Goal 22. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 176
   * Goal 23. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 177
   * Goal 24. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 180
   * Goal 25. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 182
   * Goal 26. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 184
   * Goal 27. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 187
   * Goal 28. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 189
   * Goal 29. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 191
   * Goal 30. dominion.Dominion.drawCard(ILdominion/GameState;)I: Line 193
   * Goal 31. dominion.Dominion.shuffle(ILdominion/GameState;)I: Line 140
   * Goal 32. [METHOD] dominion.Dominion.<init>()V
   * Goal 33. [METHOD] dominion.Dominion.drawCard(ILdominion/GameState;)I
   * Goal 34. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 35. [METHODNOEX] dominion.Dominion.drawCard(ILdominion/GameState;)I
   * Goal 36. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 197: dominion.Dominion.shuffle(ILdominion/GameState;)I:140 - ReplaceComparisonOperator >= -> <
   * Goal 38. Weak Mutation 393: dominion.Dominion.drawCard(ILdominion/GameState;)I:166 - ReplaceComparisonOperator > -> >=
   * Goal 39. Weak Mutation 410: dominion.Dominion.drawCard(ILdominion/GameState;)I:171 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 484: dominion.Dominion.drawCard(ILdominion/GameState;)I:182 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 506: dominion.Dominion.drawCard(ILdominion/GameState;)I:189 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.drawCard(0, gameState0);
      assertEquals((-1), int0);
  }

  //Test case number: 62
  /*
   * 41 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 7. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - true
   * Goal 8. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 9. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 14. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 15. initializeGame(I[II)Ldominion/GameState;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 16. dominion.Dominion.<init>()V: Line 15
   * Goal 17. dominion.Dominion.<init>()V: Line 16
   * Goal 18. dominion.Dominion.<init>()V: Line 17
   * Goal 19. dominion.Dominion.<init>()V: Line 18
   * Goal 20. dominion.Dominion.<init>()V: Line 19
   * Goal 21. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 22. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 37
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 38
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 39
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 40
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 41
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 30. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 31. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 32. [METHOD] dominion.Dominion.<init>()V
   * Goal 33. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 34. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 35. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 37: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> -2
   * Goal 37. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 39. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 40. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   * Goal 41. Weak Mutation 142: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[2];
      intArray0[0] = 1053;
      // Undeclared exception!
      try { 
        dominion0.initializeGame(1053, intArray0, (-4127));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 63
  /*
   * 45 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - false
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 7. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 8. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false
   * Goal 9. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 14. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 15. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 16. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 17. initializeGame(I[II)Ldominion/GameState;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 18. dominion.Dominion.<init>()V: Line 15
   * Goal 19. dominion.Dominion.<init>()V: Line 16
   * Goal 20. dominion.Dominion.<init>()V: Line 17
   * Goal 21. dominion.Dominion.<init>()V: Line 18
   * Goal 22. dominion.Dominion.<init>()V: Line 19
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 37
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 38
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 39
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 40
   * Goal 30. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 41
   * Goal 31. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 32. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 33. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 34. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 49
   * Goal 35. [METHOD] dominion.Dominion.<init>()V
   * Goal 36. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 37. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 38. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 36: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> !=
   * Goal 40. Weak Mutation 50: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 44. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   * Goal 45. Weak Mutation 140: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        dominion0.initializeGame((-996), intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 64
  /*
   * 40 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - true
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 7. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 8. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false
   * Goal 9. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I19 Branch 2 IF_ICMPGE L34 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 14. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I78 Branch 6 IF_ICMPNE L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 15. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 16. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 17. initializeGame(I[II)Ldominion/GameState;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 18. dominion.Dominion.<init>()V: Line 15
   * Goal 19. dominion.Dominion.<init>()V: Line 16
   * Goal 20. dominion.Dominion.<init>()V: Line 17
   * Goal 21. dominion.Dominion.<init>()V: Line 18
   * Goal 22. dominion.Dominion.<init>()V: Line 19
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 49
   * Goal 30. [METHOD] dominion.Dominion.<init>()V
   * Goal 31. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 32. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 33. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 36: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 52: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator >= -> ==
   * Goal 36. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 39. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   * Goal 40. Weak Mutation 140: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        dominion0.initializeGame(3, intArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 65
  /*
   * 38 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true
   * Goal 3. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false
   * Goal 4. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false
   * Goal 5. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true
   * Goal 6. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false
   * Goal 7. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 8. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I16 Branch 1 IF_ICMPGT L34 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 9. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I58 Branch 3 IF_ICMPGE L46 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 10. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I66 Branch 4 IF_ICMPGE L47 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 11. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - true in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 12. Branch dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: I71 Branch 5 IF_ICMPEQ L48 - false in context: dominion.Dominion:initializeGame(I[II)Ldominion/GameState;
   * Goal 13. initializeGame(I[II)Ldominion/GameState;_java.lang.NullPointerException_IMPLICIT
   * Goal 14. dominion.Dominion.<init>()V: Line 15
   * Goal 15. dominion.Dominion.<init>()V: Line 16
   * Goal 16. dominion.Dominion.<init>()V: Line 17
   * Goal 17. dominion.Dominion.<init>()V: Line 18
   * Goal 18. dominion.Dominion.<init>()V: Line 19
   * Goal 19. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 26
   * Goal 20. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 27
   * Goal 21. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 34
   * Goal 22. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 37
   * Goal 23. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 38
   * Goal 24. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 39
   * Goal 25. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 40
   * Goal 26. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 41
   * Goal 27. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 46
   * Goal 28. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 47
   * Goal 29. dominion.Dominion.initializeGame(I[II)Ldominion/GameState;: Line 48
   * Goal 30. [METHOD] dominion.Dominion.<init>()V
   * Goal 31. [METHOD] dominion.Dominion.initializeGame(I[II)Ldominion/GameState;
   * Goal 32. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 33. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 37: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:34 - ReplaceComparisonOperator > -> -2
   * Goal 35. Weak Mutation 80: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:46 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 98: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:47 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 119: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> -2
   * Goal 38. Weak Mutation 120: dominion.Dominion.initializeGame(I[II)Ldominion/GameState;:48 - ReplaceComparisonOperator == -> >=
   */

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      // Undeclared exception!
      try { 
        dominion0.initializeGame(2396, (int[]) null, 2396);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 66
  /*
   * 16 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.getRandomCard()I: root-Branch
   * Goal 3. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 4. Branch dominion.Dominion.getRandomCard()I: root-Branch in context: dominion.Dominion:getRandomCard()I
   * Goal 5. [Output]: dominion.Dominion.getRandomCard()I:Zero
   * Goal 6. dominion.Dominion.<init>()V: Line 15
   * Goal 7. dominion.Dominion.<init>()V: Line 16
   * Goal 8. dominion.Dominion.<init>()V: Line 17
   * Goal 9. dominion.Dominion.<init>()V: Line 18
   * Goal 10. dominion.Dominion.<init>()V: Line 19
   * Goal 11. dominion.Dominion.getRandomCard()I: Line 1156
   * Goal 12. [METHOD] dominion.Dominion.<init>()V
   * Goal 13. [METHOD] dominion.Dominion.getRandomCard()I
   * Goal 14. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 15. [METHODNOEX] dominion.Dominion.getRandomCard()I
   * Goal 16. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int int0 = dominion0.getRandomCard();
      assertEquals(0, int0);
  }

  //Test case number: 67
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.handCard(ILdominion/GameState;)I: root-Branch
   * Goal 4. Branch dominion.Dominion.handCard(ILdominion/GameState;)I: root-Branch in context: dominion.Dominion:handCard(ILdominion/GameState;)I
   * Goal 5. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 6. handCard(ILdominion/GameState;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.handCard(ILdominion/GameState;)I: Line 215
   * Goal 13. dominion.Dominion.handCard(ILdominion/GameState;)I: Line 216
   * Goal 14. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 15. [METHOD] dominion.Dominion.<init>()V
   * Goal 16. [METHOD] dominion.Dominion.handCard(ILdominion/GameState;)I
   * Goal 17. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      // Undeclared exception!
      try { 
        dominion0.handCard((-277), gameState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -277
         //
         assertThrownBy("dominion.Dominion", e);
      }
  }

  //Test case number: 68
  /*
   * 18 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.numHandCards(Ldominion/GameState;)I: root-Branch
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.numHandCards(Ldominion/GameState;)I: root-Branch in context: dominion.Dominion:numHandCards(Ldominion/GameState;)I
   * Goal 6. [Output]: dominion.Dominion.numHandCards(Ldominion/GameState;)I:Zero
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.numHandCards(Ldominion/GameState;)I: Line 219
   * Goal 13. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 14. [METHOD] dominion.Dominion.<init>()V
   * Goal 15. [METHOD] dominion.Dominion.numHandCards(Ldominion/GameState;)I
   * Goal 16. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 17. [METHODNOEX] dominion.Dominion.numHandCards(Ldominion/GameState;)I
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.numHandCards(gameState0);
      assertEquals(0, int0);
  }

  //Test case number: 69
  /*
   * 40 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: root-Branch
   * Goal 3. dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true
   * Goal 4. dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true
   * Goal 5. dominion.Dominion.getWinners([ILdominion/GameState;)I: I72 Branch 210 IF_ICMPGE L1102 - true
   * Goal 6. dominion.Dominion.getWinners([ILdominion/GameState;)I: I108 Branch 213 IF_ICMPGE L1108 - true
   * Goal 7. dominion.Dominion.getWinners([ILdominion/GameState;)I: I140 Branch 215 IF_ICMPGE L1115 - true
   * Goal 8. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 9. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I8 Branch 207 IF_ICMPGE L1089 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 10. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I34 Branch 208 IF_ICMPGE L1094 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 11. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I72 Branch 210 IF_ICMPGE L1102 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 12. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I108 Branch 213 IF_ICMPGE L1108 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 13. Branch dominion.Dominion.getWinners([ILdominion/GameState;)I: I140 Branch 215 IF_ICMPGE L1115 - true in context: dominion.Dominion:getWinners([ILdominion/GameState;)I
   * Goal 14. [Output]: dominion.Dominion.getWinners([ILdominion/GameState;)I:Zero
   * Goal 15. dominion.Dominion.<init>()V: Line 15
   * Goal 16. dominion.Dominion.<init>()V: Line 16
   * Goal 17. dominion.Dominion.<init>()V: Line 17
   * Goal 18. dominion.Dominion.<init>()V: Line 18
   * Goal 19. dominion.Dominion.<init>()V: Line 19
   * Goal 20. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1089
   * Goal 21. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1093
   * Goal 22. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1094
   * Goal 23. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1098
   * Goal 24. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1101
   * Goal 25. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1102
   * Goal 26. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1107
   * Goal 27. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1108
   * Goal 28. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1112
   * Goal 29. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1115
   * Goal 30. dominion.Dominion.getWinners([ILdominion/GameState;)I: Line 1121
   * Goal 31. dominion.Dominion.whoseTurn(Ldominion/GameState;)I: Line 222
   * Goal 32. [METHOD] dominion.Dominion.<init>()V
   * Goal 33. [METHOD] dominion.Dominion.getWinners([ILdominion/GameState;)I
   * Goal 34. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 35. [METHODNOEX] dominion.Dominion.getWinners([ILdominion/GameState;)I
   * Goal 36. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 2185: dominion.Dominion.getWinners([ILdominion/GameState;)I:1089 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 2212: dominion.Dominion.getWinners([ILdominion/GameState;)I:1094 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 2259: dominion.Dominion.getWinners([ILdominion/GameState;)I:1102 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 2335: dominion.Dominion.getWinners([ILdominion/GameState;)I:1108 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[4];
      GameState gameState0 = new GameState();
      int int0 = dominion0.getWinners(intArray0, gameState0);
      assertEquals(0, int0);
  }

  //Test case number: 70
  /*
   * 33 covered goals:
   * Goal 1. dominion.Dominion.<init>()V: root-Branch
   * Goal 2. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: root-Branch
   * Goal 3. dominion.Dominion.arbitraryPileCount([II)[I: I13 Branch 222 IF_ICMPGE L1162 - true
   * Goal 4. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - true
   * Goal 5. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I8 Branch 223 IF_ICMPGE L1174 - false
   * Goal 6. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: I17 Branch 224 IF_ICMPEQ L1175 - true
   * Goal 7. Branch dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: root-Branch in context: dominion.Dominion:compareCardPiles([I[IIILjava/lang/String;)V
   * Goal 8. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 9. dominion.Dominion.<init>()V: Line 15
   * Goal 10. dominion.Dominion.<init>()V: Line 16
   * Goal 11. dominion.Dominion.<init>()V: Line 17
   * Goal 12. dominion.Dominion.<init>()V: Line 18
   * Goal 13. dominion.Dominion.<init>()V: Line 19
   * Goal 14. dominion.Dominion.arbitraryPileCount([II)[I: Line 1161
   * Goal 15. dominion.Dominion.arbitraryPileCount([II)[I: Line 1162
   * Goal 16. dominion.Dominion.arbitraryPileCount([II)[I: Line 1165
   * Goal 17. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1169
   * Goal 18. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1170
   * Goal 19. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1171
   * Goal 20. dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V: Line 1172
   * Goal 21. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1174
   * Goal 22. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1175
   * Goal 23. dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V: Line 1177
   * Goal 24. [METHOD] dominion.Dominion.<init>()V
   * Goal 25. [METHOD] dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V
   * Goal 26. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 27. [METHODNOEX] dominion.Dominion.compareCardPiles([I[IIILjava/lang/String;)V
   * Goal 28. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 2554: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 2555: dominion.Dominion.arbitraryPileCount([II)[I:1162 - ReplaceComparisonOperator >= -> ==
   * Goal 31. Weak Mutation 2602: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1174 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 2603: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1174 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 2619: dominion.Dominion.comparePileCounts([I[ILjava/lang/String;)V:1175 - ReplaceComparisonOperator == -> -2
   */

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      int[] intArray0 = new int[7];
      dominion0.compareCardPiles(intArray0, intArray0, (-640), 0, "");
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  //Test case number: 71
  /*
   * 19 covered goals:
   * Goal 1. dominion.Dominion.supplyCount(ILdominion/GameState;)I: root-Branch
   * Goal 2. dominion.Dominion.<init>()V: root-Branch
   * Goal 3. dominion.Dominion.gainCard(ILdominion/GameState;II)I: I7 Branch 119 IF_ICMPGE L794 - false
   * Goal 4. Branch dominion.Dominion.<init>()V: root-Branch in context: dominion.Dominion:<init>()V
   * Goal 5. Branch dominion.Dominion.gainCard(ILdominion/GameState;II)I: I7 Branch 119 IF_ICMPGE L794 - false in context: dominion.Dominion:gainCard(ILdominion/GameState;II)I
   * Goal 6. [Output]: dominion.Dominion.gainCard(ILdominion/GameState;II)I:Negative
   * Goal 7. dominion.Dominion.<init>()V: Line 15
   * Goal 8. dominion.Dominion.<init>()V: Line 16
   * Goal 9. dominion.Dominion.<init>()V: Line 17
   * Goal 10. dominion.Dominion.<init>()V: Line 18
   * Goal 11. dominion.Dominion.<init>()V: Line 19
   * Goal 12. dominion.Dominion.gainCard(ILdominion/GameState;II)I: Line 794
   * Goal 13. dominion.Dominion.supplyCount(ILdominion/GameState;)I: Line 820
   * Goal 14. [METHOD] dominion.Dominion.<init>()V
   * Goal 15. [METHOD] dominion.Dominion.gainCard(ILdominion/GameState;II)I
   * Goal 16. [METHODNOEX] dominion.Dominion.<init>()V
   * Goal 17. [METHODNOEX] dominion.Dominion.gainCard(ILdominion/GameState;II)I
   * Goal 18. Weak Mutation 18: dominion.Dominion.<init>()V:19 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 1248: dominion.Dominion.gainCard(ILdominion/GameState;II)I:794 - ReplaceComparisonOperator >= -> <
   */

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Dominion dominion0 = new Dominion();
      GameState gameState0 = new GameState();
      int int0 = dominion0.gainCard(0, gameState0, 0, 8);
      assertEquals((-1), int0);
  }
}
