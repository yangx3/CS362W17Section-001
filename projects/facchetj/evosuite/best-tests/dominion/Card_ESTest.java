/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 07:55:15 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import dominion.Card;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card card0 = new Card(1);
      int int0 = card0.getValeur();
      assertEquals(1, card0.id);
      assertEquals("copper", card0.getNom());
      assertEquals("tresor", card0.getType());
      assertEquals(0, card0.prix);
      assertEquals(0, card0.pointVictoire);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card card0 = new Card((-32));
      assertEquals(0, card0.getValeur());
      
      card0.valeur = (-32);
      int int0 = card0.getValeur();
      assertEquals((-32), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card card0 = new Card(6);
      String string0 = card0.getType();
      assertEquals("victory", string0);
      assertEquals(6, card0.id);
      assertEquals(3, card0.pointVictoire);
      assertEquals("province", card0.getNom());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card card0 = new Card(0);
      card0.type = "";
      String string0 = card0.getType();
      assertEquals(0, card0.valeur);
      assertEquals(0, card0.id);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card card0 = new Card(1);
      card0.prix = (-1);
      int int0 = card0.getPrix();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Card card0 = new Card(1);
      card0.pointVictoire = 1034;
      int int0 = card0.getPointV();
      assertEquals(1034, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card card0 = new Card(1);
      card0.pointVictoire = (-1);
      int int0 = card0.getPointV();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = new Card(1);
      String string0 = card0.getNom();
      assertEquals(0, card0.prix);
      assertEquals("tresor", card0.getType());
      assertEquals(1, card0.valeur);
      assertEquals(0, card0.pointVictoire);
      assertEquals("copper", string0);
      assertEquals(1, card0.id);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card card0 = new Card(0);
      card0.nom = "";
      String string0 = card0.getNom();
      assertEquals(0, card0.id);
      assertEquals(0, card0.valeur);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = new Card((-1));
      int int0 = card0.getId();
      assertEquals((-1), int0);
      assertEquals(0, card0.valeur);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card card0 = new Card(20);
      assertEquals(20, card0.id);
      assertEquals("salvager", card0.getNom());
      assertEquals(4, card0.prix);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = new Card(19);
      assertEquals(19, card0.id);
      assertEquals("smithy", card0.getNom());
      assertEquals(4, card0.prix);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card card0 = new Card(17);
      assertEquals(5, card0.prix);
      assertEquals(17, card0.id);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card card0 = new Card(16);
      assertEquals(3, card0.prix);
      assertEquals(16, card0.id);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card card0 = new Card(15);
      assertEquals(15, card0.id);
      assertEquals(6, card0.prix);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card card0 = new Card(14);
      assertEquals(14, card0.id);
      assertEquals(4, card0.prix);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card card0 = new Card(13);
      assertEquals(2, card0.prix);
      assertEquals(13, card0.id);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card card0 = new Card(12);
      assertEquals(4, card0.prix);
      assertEquals(12, card0.id);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Card card0 = new Card(11);
      assertEquals(5, card0.prix);
      assertEquals(11, card0.id);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card card0 = new Card(10);
      assertEquals(4, card0.prix);
      assertEquals(10, card0.id);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Card card0 = new Card(9);
      assertEquals(9, card0.id);
      assertEquals(3, card0.prix);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card card0 = new Card(8);
      assertEquals(8, card0.id);
      assertEquals(1, card0.pointVictoire);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Card card0 = new Card(7);
      assertEquals(7, card0.id);
      assertEquals((-1), card0.pointVictoire);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Card card0 = new Card(6);
      int int0 = card0.getPrix();
      assertEquals(5, int0);
      assertEquals("province", card0.getNom());
      assertEquals(6, card0.id);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Card card0 = new Card(5);
      assertEquals(3, card0.pointVictoire);
      assertEquals(5, card0.id);
      assertEquals("duchy", card0.getNom());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Card card0 = new Card(4);
      assertEquals(1, card0.pointVictoire);
      assertEquals(2, card0.prix);
      assertEquals(0, card0.valeur);
      assertEquals("estate", card0.getNom());
      assertEquals(4, card0.id);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Card card0 = new Card(3);
      assertEquals("tresor", card0.getType());
      assertEquals(0, card0.pointVictoire);
      assertEquals(4, card0.prix);
      assertEquals("gold", card0.getNom());
      assertEquals(3, card0.valeur);
      assertEquals(3, card0.id);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Card card0 = new Card(2);
      assertEquals(2, card0.valeur);
      assertEquals(2, card0.id);
      assertEquals("tresor", card0.getType());
      assertEquals(0, card0.pointVictoire);
      assertEquals(3, card0.prix);
      assertEquals("silver", card0.getNom());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Card card0 = new Card(1);
      int int0 = card0.getId();
      assertEquals(0, card0.pointVictoire);
      assertEquals(1, int0);
      assertEquals(0, card0.prix);
      assertEquals(1, card0.valeur);
      assertEquals("copper", card0.getNom());
      assertEquals("tresor", card0.getType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Card card0 = new Card(0);
      int int0 = card0.getId();
      assertEquals(0, card0.valeur);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Card card0 = new Card(62);
      card0.getType();
      assertEquals(62, card0.id);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Card card0 = new Card((-32));
      int int0 = card0.getValeur();
      assertEquals(0, int0);
      assertEquals((-32), card0.id);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Card card0 = new Card(18);
      card0.print();
      assertEquals(18, card0.id);
      assertEquals(3, card0.prix);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Card card0 = new Card((-1));
      int int0 = card0.getPrix();
      assertEquals((-1), card0.id);
      assertEquals(0, card0.valeur);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Card card0 = new Card(0);
      String string0 = card0.getNom();
      assertEquals(0, card0.id);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Card card0 = new Card(0);
      int int0 = card0.getPointV();
      assertEquals(0, card0.valeur);
      assertEquals(0, int0);
      assertEquals(0, card0.id);
  }
}
