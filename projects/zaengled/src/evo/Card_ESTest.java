/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 18:12:05 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.testcase.execution.CodeUnderTestException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Card_ESTest extends Card_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Sea_Hag;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "7#f1Y}jLOZ)TGX5=");
      player0.printStateGame();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Great_Hall;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Ambassador;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card.filter(list0, card_Type0);
      Randomness.totalCallsToRandom = 0;
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "a9^>sZRva'@B^EB),<");
      player0.coins = 1461;
      player0.clone();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "7#f1Y}jLOZ)TGX5=");
      player0.printStateGame();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Randomness.totalCallsToRandom = 3;
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Gold;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "Tw0nyA<_pQ259;#C");
      gameState0.cards = list0;
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Randomness.reset(14L);
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Mine;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card.filter(list0, card_Type0);
      GameState gameState0 = new GameState(list0);
      gameState0.clone();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Duchy;
      Card.getCard(list0, card_CardName0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Randomness.nextRandomInt((-685));
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Card.getCard(list0, card_CardName0);
      Card.createCards();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Council_Room;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      List<Card> list1 = Card.filter(list0, card_Type0);
      Randomness.totalCallsToRandom = 0;
      GameState gameState0 = new GameState(list0);
      gameState0.clone();
      Card.CardName card_CardName1 = Card.CardName.Curse;
      Card.getCard(list1, card_CardName1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Gardens;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Randomness.nextRandomInt((-685));
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Curse;
      Card.getCard(list0, card_CardName0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.getCard(list0, card_CardName0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.Type card_Type0 = Card.Type.TREASURE;
      // Undeclared exception!
      try { 
        Card.filter((Iterable<Card>) null, card_Type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Gardens;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "");
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashSet<Card> linkedHashSet0 = new LinkedHashSet<Card>();
      PriorityQueue<Card> priorityQueue0 = new PriorityQueue<Card>((Collection<? extends Card>) linkedHashSet0);
      Card.Type card_Type0 = Card.Type.TREASURE;
      List<Card> list0 = Card.filter(priorityQueue0, card_Type0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Randomness.totalCallsToRandom = 16;
      Vector<Card> vector0 = new Vector<Card>();
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.getCard(vector0, card_CardName0);
      vector0.add((Card) null);
      vector0.stream();
      Card.CardName card_CardName1 = Card.CardName.Embargo;
      // Undeclared exception!
      try { 
        Card.getCard(vector0, card_CardName1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      Card.CardName card_CardName0 = Card.CardName.Mine;
      Card card0 = Card.getCard(vector0, card_CardName0);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Embargo;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "7#f1Y}jLOZ)TGX5=");
      player0.printStateGame();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Cutpurse;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card.filter(list0, card_Type0);
      Randomness.totalCallsToRandom = 0;
      GameState gameState0 = new GameState(list0);
      gameState0.clone();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Adventurer;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "7#f1Y}jLOZ)TGX5=");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Adventurer;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "o-ck4d8^@2?SYu7X! ");
      player0.printStateGame();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Feast;
      Card.getCard(list0, card_CardName0);
      Card.getCard(list0, card_CardName0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Great_Hall;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Village;
      Card.getCard(list0, card_CardName0);
      Card.getCard(list0, card_CardName0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      List<Card> list1 = Card.filter(list0, card_Type0);
      Randomness.totalCallsToRandom = 0;
      GameState gameState0 = new GameState(list1);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "f");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Council_Room;
      Card.getCard(list0, card_CardName0);
      Card.Type card_Type0 = Card.Type.VICTORY;
      Card.filter(list0, card_Type0);
      Randomness.totalCallsToRandom = 0;
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "a9^>sZRva'@B^EB),<");
      gameState1.addPlayer(player0);
      gameState0.isGameOver();
      player0.coins = 0;
      player0.clone();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      Card.CardName card_CardName0 = Card.CardName.Cutpurse;
      Card.getCard(list0, card_CardName0);
      GameState gameState0 = new GameState(list0);
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player(gameState1, "7#f1Y}jLOZ)TGX5=");
      player0.printStateGame();
  }
}
