/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 07:55:45 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.Card;
import org.cs362.dominion.Hand;
import org.cs362.dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Hand_ESTest extends Hand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      player0.hand.addCard((Card) null);
      player0.hand.removeCard((Card) null);
      assertFalse(player0.checkAi());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand.add((Card) null);
      hand0.removeCard(0);
      assertEquals(0, hand0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand.add((Card) null);
      int int0 = hand0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player("Inva$idFTeldVluM", false);
      player0.hand.addCard((Card) null);
      Card card0 = player0.hand.playCard((Card) null);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      Card card1 = player0.hand.playCard(card0);
      assertEquals(0, card1.getCost());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand.add((Card) null);
      Card card0 = hand0.playCard(0);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      Card card1 = player0.hand.playCard(0);
      assertSame(card1, card0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      player0.hand.addCard((Card) null);
      Card card0 = player0.hand.getCard((Card) null);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      Card card1 = player0.hand.getCard(card0);
      assertSame(card1, card0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player("@|I", false);
      player0.hand.hand.add((Card) null);
      Card card0 = player0.hand.getCard(0);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      Card card1 = player0.hand.getCard(0);
      assertEquals(0, card1.getVictoryPoints());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Hand hand0 = new Hand();
      Player player0 = new Player("2QqND@1'fq~2Yj5", false);
      Card card0 = player0.playCard();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.removeCard(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.removeCard((-1941));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Hand hand0 = new Hand();
      // Undeclared exception!
      try { 
        hand0.removeCard((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player("@|I", false);
      player0.hand.hand.add((Card) null);
      // Undeclared exception!
      try { 
        player0.hand.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.playCard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.playCard((-1735));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(">*|*dI;!aBuv*P", true);
      // Undeclared exception!
      try { 
        player0.hand.playCard(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      Player player0 = new Player("K J:MF0vqq3", false);
      Card card0 = player0.playCard();
      // Undeclared exception!
      try { 
        hand0.inHand(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      Player player0 = new Player("tJ&~", true);
      Card card0 = player0.playCard();
      // Undeclared exception!
      try { 
        hand0.getCard(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.getCard(2916);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Hand hand0 = new Hand();
      // Undeclared exception!
      try { 
        hand0.getCard(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      Hand hand0 = player0.hand;
      hand0.hand = null;
      // Undeclared exception!
      try { 
        hand0.addCard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Hand hand0 = new Hand();
      // Undeclared exception!
      try { 
        hand0.getCard((-3022));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      player0.hand.print();
      assertEquals(0, player0.getMoney());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      Card card1 = player0.hand.playCard("");
      assertEquals(0, card1.getTreasure());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player("CS@96yP6p4O*", false);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      // Undeclared exception!
      try { 
        player0.hand.playCard("2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.addCard((Card) null);
      // Undeclared exception!
      try { 
        hand0.playCard("kNZ^7.H8'uSOi,V");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      boolean boolean0 = player0.hand.inHand("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      player0.addToHand(card0);
      boolean boolean0 = player0.hand.inHand("'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player("CS@96yP6p4O*", false);
      Card card0 = player0.playCard();
      boolean boolean0 = player0.hand.inHand(card0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      player0.hand.addCard((Card) null);
      boolean boolean0 = player0.hand.inHand((Card) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      int int0 = player0.hand.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      // Undeclared exception!
      try { 
        player0.hand.playCard(card0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player("K J:MF0vqq3", false);
      // Undeclared exception!
      try { 
        player0.hand.removeCard((Card) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Hand hand0 = new Hand();
      // Undeclared exception!
      try { 
        hand0.playCard((-2579));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Hand hand0 = new Hand();
      // Undeclared exception!
      try { 
        hand0.removeCard(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Hand hand0 = new Hand();
      hand0.addCard((Card) null);
      // Undeclared exception!
      try { 
        hand0.inHand("0;n}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.Hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player("EV$2/UlHN74;^:b", true);
      Card card0 = player0.playCard();
      // Undeclared exception!
      try { 
        player0.hand.getCard(card0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
