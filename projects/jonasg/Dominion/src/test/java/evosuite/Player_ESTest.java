/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 03:57:09 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import org.cs362.dominion.Card;
import org.cs362.dominion.GameState;
import org.cs362.dominion.Player;
import org.cs362.dominion.Randomness;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.security.MockSecureRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Randomness.reset();
      Player player0 = new Player((GameState) null, "Baron");
      player0.player_username = "O\"IoFo:+-{W";
      Player player1 = player0.clone();
      player0.coins = (-1769);
      player0.gain((Card) null);
      String string0 = player1.player_username;
      Player player2 = new Player((GameState) null, "\n");
      List<Card> list0 = player2.playedCards;
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.drawCard();
      LinkedList<Card> linkedList0 = player0.deck;
      player0.gain((Card) null);
      player0.deck = linkedList0;
      player0.playKingdomCard();
      Card.CardName.values();
      player0.playKingdomCard();
      player0.hand = (List<Card>) linkedList0;
      player0.playTreasureCard();
      String string0 = player0.player_username;
      player0.playTreasureCard();
      player0.numBuys = 541;
      player0.discard((Card) null);
      player0.gain((Card) null);
      MockSecureRandom mockSecureRandom0 = (MockSecureRandom)Randomness.random;
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((GameState) null, " --- ");
      player0.shuffleDeck();
      player0.numBuys = 9;
      LinkedList<Card> linkedList0 = player0.deck;
      player0.discard = (List<Card>) linkedList0;
      player0.discard((Card) null);
      player0.coins = (-2017);
      Card.Type.values();
      Card.CardName.values();
      player0.numActions = 1;
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((GameState) null, " --- ");
      player0.shuffleDeck();
      player0.numBuys = 9;
      LinkedList<Card> linkedList0 = player0.deck;
      player0.discard = (List<Card>) linkedList0;
      player0.drawCard();
      player0.gain((Card) null);
      player0.coins = (-2041);
      Card.Type.values();
      Card.CardName.values();
      player0.numActions = 1;
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.playedCards = null;
      // Undeclared exception!
      try {
        player0.clone();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Adventurer");
      player0.buyCard((GameState) null);
      player0.numBuys = (-276);
      player0.playTreasureCard();
      player0.coins = (-276);
      player0.numActions = 0;
      Player player1 = player0.clone();
      player0.buyCard((GameState) null);
      player1.numBuys = 1311;
      player0.toString();
      // Undeclared exception!
      try {
        Card.CardName.valueOf(" --- Adventurer ---  --- --------------------------- --- Hand: []Discard: []Deck: []Played Cards: []numActions: 0coins: -276numBuys: -276\n");
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.cs362.dominion.Card.CardName. --- Adventurer ---  --- --------------------------- --- Hand: []Discard: []Deck: []Played Cards: []numActions: 0coins: -276numBuys: -276
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.drawCard();
      // Undeclared exception!
      try {
        player0.drawCard();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Randomness.reset();
      Player player0 = new Player((GameState) null, "v");
      player0.discard((Card) null);
      player0.numActions = 17;
      player0.coins = (-187);
      // Undeclared exception!
      try {
        player0.endTurn();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((GameState) null, "+`u");
      player0.drawCard();
      player0.player_username = "+`u";
      player0.gain((Card) null);
      player0.numBuys = (-2853);
      player0.shuffleDeck();
      Player player1 = player0.clone();
      List<Card> list0 = player1.playedCards;
      player0.playedCards = list0;
      LinkedList<Card> linkedList0 = player1.deck;
      // Undeclared exception!
      try {
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((GameState) null, "*,I6Mot7}y7");
      player0.numActions = (-87);
      player0.buyCard((GameState) null);
      LinkedList<Card> linkedList0 = player0.deck;
      player0.deck = linkedList0;
      Player player1 = player0.clone();
      player1.playKingdomCard();
      player1.drawCard();
      player1.gain((Card) null);
      player1.discard = (List<Card>) player0.deck;
      // Undeclared exception!
      try {
        player1.playTreasureCard();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = (MockSecureRandom)Randomness.random;
      Player player0 = new Player((GameState) null, "");
      List<Card> list0 = player0.hand;
      player0.numActions = 870;
      player0.numBuys = 1776;
      player0.coins = 1776;
      player0.toString();
      // Undeclared exception!
      try {
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((GameState) null, "C(sy!gjv53");
      Player player1 = player0.clone();
      // Undeclared exception!
      try {
        player1.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GameState gameState0 = null;
      Player player0 = new Player((GameState) null, "2_(Yn0k/ Eb'");
      List<Card> list0 = player0.discard;
      player0.hand = list0;
      player0.endTurn();
      // Undeclared exception!
      try {
        player0.playTreasureCard();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GameState gameState0 = null;
      Player player0 = new Player((GameState) null, " --- ");
      player0.numBuys = 9;
      LinkedList<Card> linkedList0 = player0.deck;
      player0.discard = (List<Card>) linkedList0;
      player0.coins = (-2017);
      Card.Type.values();
      Card.CardName.values();
      player0.numActions = 1;
      player0.scoreFor();
      String string0 = player0.player_username;
      player0.player_username = " --- ";
      player0.drawCard();
      player0.gain((Card) null);
      // Undeclared exception!
      try {
        player0.buyCard((GameState) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GameState gameState0 = null;
      Player player0 = new Player((GameState) null, "-- ");
      player0.shuffleDeck();
      player0.numBuys = 9;
      Card.CardName.values();
      player0.numActions = 9;
      String string0 = player0.player_username;
      player0.player_username = "-- ";
      player0.buyCard((GameState) null);
      player0.drawCard();
      player0.gain((Card) null);
      player0.buyCard((GameState) null);
      player0.buyCard((GameState) null);
      int int0 = player0.numBuys;
      // Undeclared exception!
      try {
        player0.playKingdomCard();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      Player player1 = player0.clone();
      List<Card> list0 = player0.discard;
      player0.hand = list0;
      String string0 = player1.player_username;
      player0.initializePlayerTurn();
      player1.numBuys = 19;
      player0.toString();
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.drawCard();
      LinkedList<Card> linkedList0 = player0.deck;
      player0.gain((Card) null);
      player0.deck = linkedList0;
      player0.playKingdomCard();
      Card.CardName.values();
      player0.playKingdomCard();
      player0.hand = (List<Card>) linkedList0;
      player0.playTreasureCard();
      String string0 = player0.player_username;
      player0.playTreasureCard();
      player0.discard((Card) null);
      player0.gain((Card) null);
      // Undeclared exception!
      try {
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "Km6gi-HQV15@vQ5#<";
      Player player0 = new Player((GameState) null, "Km6gi-HQV15@vQ5#<");
      Player player1 = player0.clone();
      player1.playKingdomCard();
      player1.numActions = 1;
      player1.coins = 1;
      player1.playKingdomCard();
      int int0 = (-615);
      player1.playKingdomCard();
      player1.coins = (-615);
      player1.playKingdomCard();
      int int1 = player1.numActions;
      player1.playTreasureCard();
      // Undeclared exception!
      try {
        player1.printStateGame();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Card.CardName.values();
      GameState gameState0 = null;
      String string0 = "";
      Player player0 = new Player((GameState) null, "");
      player0.shuffleDeck();
      player0.scoreFor();
      player0.playTreasureCard();
      player0.drawCard();
      player0.gain((Card) null);
      player0.toString();
      Card.CardName.values();
      int int0 = player0.numActions;
      player0.clone();
      // Undeclared exception!
      try {
        player0.endTurn();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((GameState) null, "");
      player0.buyCard((GameState) null);
  }
}
