/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 19 18:48:08 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Card;
import dominion.Game;
import dominion.Player;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Game_ESTest extends Game_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Game game0 = new Game();
      Player[] playerArray0 = new Player[5];
      Player player0 = new Player("|S");
      playerArray0[0] = player0;
      Player player1 = new Player("|S");
      playerArray0[1] = player1;
      Player player2 = new Player("2C\"`GohvPj<){MT%x");
      playerArray0[2] = player2;
      Player player3 = new Player("p8XI5Z4rt7<!0#R");
      playerArray0[3] = player3;
      Player player4 = new Player("p8XI5Z4rt7<!0#R");
      playerArray0[4] = player4;
      game0.player = playerArray0;
      MockRandom mockRandom0 = new MockRandom((-1865L));
      int[] intArray0 = new int[1];
      intArray0[0] = 423;
      game0.bcc = intArray0;
      game0.randInt(mockRandom0, 423);
      // Undeclared exception!
      try { 
        game0.player_buy(10, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Game game0 = new Game();
      Game game1 = new Game();
      int[] intArray0 = new int[5];
      intArray0[0] = 47;
      intArray0[1] = 47;
      intArray0[2] = 7;
      game1.bcc = intArray0;
      // Undeclared exception!
      try { 
        game1.player_buy(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[4];
      intArray0[0] = 560;
      intArray0[1] = 15;
      intArray0[2] = (-81);
      intArray0[3] = 422;
      game0.curse = intArray0;
      game0.initilize_game(15, 15);
      // Undeclared exception!
      try { 
        game0.player_buy((-81), 15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -81
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Game game0 = new Game();
      game0.initilize_game(430, 430);
      game0.get_winner();
      game0.get_winner();
      game0.initilize_game(430, (-2316));
      game0.winnokc = true;
      game0.get_winner();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player("bj#@S");
      playerArray0[0] = player0;
      Player player1 = new Player("bj#@S");
      playerArray0[1] = player1;
      Player player2 = new Player("bj#@S");
      playerArray0[2] = player2;
      Player player3 = new Player((String) null);
      playerArray0[3] = player3;
      Player player4 = new Player((String) null);
      playerArray0[4] = player4;
      Player player5 = new Player("&-Lr]x^");
      playerArray0[5] = player5;
      Player player6 = new Player(" cards");
      playerArray0[6] = player6;
      Player player7 = new Player((String) null);
      playerArray0[7] = player7;
      game0.player = playerArray0;
      game0.player_buy(9, 9);
      game0.set_turn((-2316));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.player_buy(3, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[8];
      intArray0[1] = 0;
      intArray0[2] = 9;
      intArray0[3] = 0;
      intArray0[4] = 4201;
      intArray0[5] = (-1155);
      intArray0[6] = 9;
      intArray0[7] = 0;
      game0.bcc = intArray0;
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextLong();
      game0.randInt(mockRandom0, 0);
      // Undeclared exception!
      try { 
        game0.check_win();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[3];
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player("");
      playerArray0[0] = player0;
      Player player1 = new Player("Game Ended. Three Kingdom Supply Piles Depleted.");
      playerArray0[1] = player1;
      Player player2 = new Player("S{^haK5R:(_");
      playerArray0[2] = player2;
      Player player3 = new Player("Game Ended. Three Kingdom Supply Piles Depleted.");
      playerArray0[3] = player3;
      Player player4 = new Player("IeZ@C");
      playerArray0[4] = player4;
      Player player5 = new Player("");
      playerArray0[5] = player5;
      Player player6 = new Player("S{^haK5R:(_");
      playerArray0[6] = player6;
      game0.player = playerArray0;
      intArray0[0] = (-2197);
      intArray0[1] = 13;
      intArray0[2] = 0;
      game0.curse = intArray0;
      MockRandom mockRandom0 = new MockRandom((long) 13);
      Game game1 = new Game();
      // Undeclared exception!
      try { 
        game0.player_play(0, (-2346), mockRandom0, game1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2346
         //
         assertThrownBy("dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom();
      int[] intArray0 = new int[8];
      intArray0[0] = 9;
      intArray0[1] = (-1001);
      intArray0[2] = (-860);
      intArray0[3] = (-637);
      intArray0[4] = (-860);
      intArray0[5] = (-860);
      intArray0[6] = (-860);
      intArray0[7] = (-860);
      game0.bcc = intArray0;
      mockRandom0.nextInt((-860));
      // Undeclared exception!
      try { 
        game0.check_win();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Game game0 = new Game();
      game0.set_cards(1, 1, 1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom();
      game0.randInt(mockRandom0, (-1404));
      game0.initilize_game(2, (-2071));
      game0.winnokc = false;
      // Undeclared exception!
      try { 
        game0.can_play((-454));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -454
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Game game0 = new Game();
      game0.bcc = null;
      game0.bcc = null;
      // Undeclared exception!
      try { 
        game0.set_cards(10, 10, (-4007));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.randInt((Random) null, 1076);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Game game0 = new Game();
      Player[] playerArray0 = new Player[3];
      Player player0 = new Player("Game Ended. Three Kingdom Supply Piles Depleted.");
      game0.winnokc = true;
      playerArray0[0] = player0;
      Player player1 = new Player("");
      playerArray0[1] = player1;
      Player player2 = new Player("");
      playerArray0[2] = player2;
      game0.player = playerArray0;
      game0.set_turn((-2105));
      MockRandom mockRandom0 = new MockRandom((long) (-2105));
      Game game1 = new Game();
      // Undeclared exception!
      try { 
        game0.player_play((-2105), (-2104), mockRandom0, game1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2105
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2977;
      game0.bcc = intArray0;
      // Undeclared exception!
      try { 
        game0.check_win();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Game game0 = new Game();
      game0.initilize_game(0, 1142);
      // Undeclared exception!
      try { 
        game0.get_winner();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.set_cards(10, (-1626), (-1626));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Game game0 = new Game();
      game0.bcc = null;
      // Undeclared exception!
      try { 
        game0.initilize_game(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom(1579L);
      // Undeclared exception!
      try { 
        game0.randInt(mockRandom0, (-1));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Game game0 = new Game();
      game0.player = null;
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      game0.winnokc = true;
      intArray0[1] = 0;
      intArray0[2] = 0;
      game0.player = null;
      intArray0[3] = 1964;
      game0.bcc = intArray0;
      game0.player_buy(1964, 0);
      // Undeclared exception!
      try { 
        game0.initilize_game(0, (-165));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.initilize_game(3077, 3077);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.set_cards((-1516), (-1516), (-1516));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1516
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[1];
      intArray0[0] = 647;
      Player[] playerArray0 = new Player[1];
      Player player0 = new Player("\nBuy Value:");
      playerArray0[0] = player0;
      game0.player = playerArray0;
      game0.bcc = intArray0;
      int[] intArray1 = new int[4];
      intArray1[0] = 2118;
      intArray1[1] = 647;
      intArray1[2] = 647;
      intArray1[3] = 647;
      game0.curse = intArray1;
      // Undeclared exception!
      try { 
        game0.can_buy(647);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 647
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.can_buy((-1345));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom((long) 2856);
      Game game1 = new Game();
      // Undeclared exception!
      try { 
        game0.player_play(2856, 2856, mockRandom0, game1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Game game0 = new Game();
      game0.curse = null;
      game0.initilize_game(7, 7);
      game0.initilize_game(7, 7);
      // Undeclared exception!
      try { 
        game0.can_play(93);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.initilize_game((-2044), (-851));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.check_win();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.can_play((-1008));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.set_turn(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 356;
      org.evosuite.runtime.Random.setNextRandom(356);
      Game game0 = new Game();
      int int1 = 4;
      // Undeclared exception!
      try { 
        game0.player_buy(356, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 6;
      org.evosuite.runtime.Random.setNextRandom(6);
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom();
      game0.randInt(mockRandom0, 3691);
      // Undeclared exception!
      try { 
        game0.player_buy(3691, 412);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 412
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Game game0 = new Game();
      game0.initilize_game(1, 3071);
      game0.initilize_game(1, (-2618));
      game0.check_win();
      boolean boolean0 = game0.winnokc;
      game0.get_winner();
      MockRandom mockRandom0 = new MockRandom();
      Game game1 = new Game();
      game1.winnokc = false;
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[7];
      intArray0[0] = (-260);
      intArray0[1] = 1424;
      intArray0[2] = 394;
      MockRandom mockRandom0 = new MockRandom();
      game0.randInt(mockRandom0, 1424);
      intArray0[3] = 394;
      game0.initilize_game(394, 386);
      boolean boolean0 = game0.winnokc;
      intArray0[4] = 2330;
      intArray0[5] = 2618;
      intArray0[6] = 1478;
      game0.bcc = intArray0;
      game0.can_buy(16);
      Player[] playerArray0 = game0.player;
      game0.curse = intArray0;
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Game game0 = new Game();
      int[] intArray0 = new int[4];
      intArray0[0] = 407;
      intArray0[1] = 15;
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player("6^VnlUg|,z");
      playerArray0[0] = player0;
      Player player1 = new Player("6^VnlUg|,z");
      playerArray0[1] = player1;
      Player player2 = new Player("6^VnlUg|,z");
      playerArray0[2] = player2;
      Player player3 = new Player("6^VnlUg|,z");
      playerArray0[3] = player3;
      Player player4 = new Player("6^VnlUg|,z");
      playerArray0[4] = player4;
      Player player5 = new Player(" VP: ");
      playerArray0[5] = player5;
      Player player6 = new Player("6^VnlUg|,z");
      playerArray0[6] = player6;
      Player player7 = new Player(" VP: ");
      playerArray0[7] = player7;
      game0.player = playerArray0;
      intArray0[2] = (-1450);
      intArray0[3] = 60;
      game0.curse = intArray0;
      MockRandom mockRandom0 = new MockRandom(0L);
      game0.set_turn(2);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Game game0 = new Game();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player("");
      playerArray0[0] = player0;
      Player player1 = new Player("");
      playerArray0[1] = player1;
      Player player2 = new Player("");
      playerArray0[2] = player2;
      Player player3 = new Player("");
      playerArray0[3] = player3;
      playerArray0[4] = player3;
      Player player4 = new Player((String) null);
      playerArray0[5] = player3;
      Player player5 = new Player("");
      playerArray0[6] = player5;
      Player player6 = new Player("");
      playerArray0[7] = player6;
      game0.player = playerArray0;
      game0.set_turn(958);
      game0.can_buy(0);
      game0.winnokc = true;
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom(480L);
      int int0 = 47;
      game0.randInt(mockRandom0, 47);
      Game game1 = new Game();
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        mockRandom0.longs(480L, (long) 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         assertThrownBy("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Game game0 = new Game();
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player("2)ZJcs*xxek` SD)n]");
      playerArray0[0] = player0;
      Player player1 = new Player("2)ZJcs*xxek` SD)n]");
      playerArray0[1] = player1;
      Player player2 = new Player("\t\t");
      playerArray0[2] = player2;
      Player player3 = new Player(" VP: ");
      playerArray0[3] = player3;
      Player player4 = new Player("\t\t");
      playerArray0[4] = player4;
      Player player5 = new Player((String) null);
      playerArray0[5] = player5;
      Player player6 = new Player("\t\t");
      playerArray0[6] = player6;
      game0.player = playerArray0;
      game0.check_win();
      game0.player_buy(1, 1);
      Card[] cardArray0 = new Card[6];
      Card card0 = new Card(1);
      cardArray0[0] = card0;
      Card card1 = new Card(0);
      cardArray0[1] = card1;
      Card card2 = new Card();
      cardArray0[2] = card2;
      Card card3 = new Card();
      cardArray0[3] = card3;
      Card card4 = new Card();
      cardArray0[4] = card1;
      Card card5 = new Card();
      cardArray0[5] = card5;
      player6.remove(cardArray0, 0);
      game0.initilize_game(1, 0);
      game0.check_win();
      game0.can_play(0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Game game0 = new Game();
      game0.initilize_game(430, 430);
      game0.get_winner();
      game0.get_winner();
      game0.winnokc = true;
      game0.get_winner();
      Player player0 = new Player("bj#@S");
      Player player1 = new Player("bj#@S");
      Player player2 = new Player("bj#@S");
      Player player3 = new Player("bj#@S");
      Player player4 = new Player("bj#@S");
      Player player5 = new Player("&-Lr]x^");
      Player player6 = new Player(" cards");
      game0.winnokc = true;
      Player player7 = new Player((String) null);
      boolean boolean0 = game0.player_buy(9, 9);
      assertFalse(boolean0);
      
      MockRandom mockRandom0 = new MockRandom();
      game0.randInt(mockRandom0, 430);
      boolean boolean1 = game0.can_play(9);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Game game0 = new Game();
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        game0.get_winner();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.player_buy(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Game game0 = new Game();
      game0.initilize_game(5, 3071);
      game0.initilize_game(5, 5);
      game0.check_win();
      boolean boolean0 = game0.winnokc;
      game0.get_winner();
      MockRandom mockRandom0 = new MockRandom();
      Game game1 = new Game();
      game1.winnokc = false;
      // Undeclared exception!
      try { 
        game0.player_play(6, 2117, mockRandom0, game1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("dominion.Game", e);
      }
  }
}
