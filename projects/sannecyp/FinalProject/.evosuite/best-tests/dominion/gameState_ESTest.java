/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 02:23:39 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Player;
import dominion.gameState;
import dominion.intWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class gameState_ESTest extends gameState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 4;
      gameState0.embargoTokens = intArray0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      gameState0.outpostTurn = 1;
      gameState0.initializeGame(4, intArray0, 1);
      gameState0.endTurn();
      int int0 = gameState0.numPlayers;
      gameState0.isGameOver();
      int int1 = gameState0.MAX_PLAYERS;
      gameState0.isGameOver();
      gameState0.endTurn();
      int int2 = gameState0.numBuys;
      int int3 = gameState0.outpostPlayed;
      gameState0.initializeGame(72, intArray0, 0);
      gameState0.playedCardCount = 4;
      gameState0.getCost((-3147));
      gameState0.gainCard(0, 4, 557);
      gameState0.supplyCount = intArray0;
      // Undeclared exception!
      try { 
        gameState0.gainCard(0, 557, 557);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 557
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.MAX_DECK = 10;
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.cardEffect(13, 13, 13, 19, (-76), intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 4;
      gameState0.embargoTokens = intArray0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      gameState0.outpostTurn = 1;
      gameState0.initializeGame(4, intArray0, 1);
      gameState0.endTurn();
      int int0 = gameState0.numPlayers;
      gameState0.isGameOver();
      int int1 = gameState0.MAX_PLAYERS;
      gameState0.isGameOver();
      gameState0.endTurn();
      int int2 = gameState0.numBuys;
      int int3 = gameState0.outpostPlayed;
      gameState0.initializeGame(72, intArray0, 0);
      gameState0.playedCardCount = 4;
      gameState0.getCost((-3147));
      gameState0.gainCard(0, 4, 1);
      gameState0.supplyCount = intArray0;
      gameState0.gainCard(0, 1, 1);
      int int4 = gameState0.outpostTurn;
      int int5 = gameState0.whoseTurn;
      int[] intArray1 = gameState0.embargoTokens;
      gameState0.playCard(1, 1688, 0, (-15));
      // Undeclared exception!
      try { 
        gameState0.buyCard((-1267));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1267
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.getCost(1);
      gameState0.numActions = 19;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(12, 0, (-1798), (-233), 1, intWrapper0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1775);
      gameState0.getCost(15);
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.getCost(1);
      gameState gameState1 = new gameState();
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState1.cardEffect(15, 2, 4, 68, 1, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.outpostTurn = (-937);
      Player[] playerArray0 = new Player[2];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      player0.DEBUG = false;
      playerArray0[1] = player1;
      player1.drawCard();
      gameState0.players = playerArray0;
      int[] intArray0 = gameState0.playedCards;
      player1.handcount = (-937);
      gameState0.coins = 16;
      player0.handcount = (-937);
      player1.drawCard();
      player1.DEBUG = false;
      gameState0.gainCard(1, 1, (-10));
      gameState0.getCost(16);
      // Undeclared exception!
      try { 
        gameState0.initializeGame((-5626), intArray0, 2406);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(376);
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 17;
      // Undeclared exception!
      try { 
        gameState0.cardEffect(17, 17, 376, 376, 376, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      gameState gameState0 = new gameState();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      playerArray0[2] = player0;
      Player player2 = new Player();
      playerArray0[3] = player0;
      Player player3 = new Player();
      playerArray0[4] = player3;
      Player player4 = new Player();
      playerArray0[0] = player4;
      Player player5 = new Player();
      playerArray0[6] = player5;
      Player player6 = new Player();
      playerArray0[7] = player6;
      gameState0.players = playerArray0;
      player2.MAX_HAND = (-1966);
      player4.deckCount = 184;
      player4.handcount = 184;
      gameState0.isGameOver();
      gameState0.numHandCards();
      int int0 = gameState0.outpostPlayed;
      // Undeclared exception!
      try { 
        gameState0.discardCard(184, 184, 726);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 184
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playCard((-3147), (-3147), 6, 6);
      gameState0.coins = (-3147);
      int int0 = gameState0.playedCardCount;
      gameState0.numBuys = 0;
      gameState0.getCost(0);
      gameState0.getCost(17);
      gameState0.gainCard(0, 0, 0);
      // Undeclared exception!
      try { 
        gameState0.discardCard(83, 0, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1775);
      gameState0.getCost(15);
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.getCost(1);
      gameState gameState1 = new gameState();
      gameState1.MAX_PLAYERS = (-3994);
      gameState0.numActions = 880;
      gameState1.playedCardCount = 2834;
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 880;
      // Undeclared exception!
      try { 
        gameState0.cardEffect(16, 819, (-1775), (-233), 1, intWrapper0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 819
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      gameState gameState0 = new gameState();
      int int0 = gameState0.MAX_DECK;
      int[] intArray0 = new int[5];
      intArray0[0] = 500;
      intArray0[1] = 4;
      intArray0[3] = 500;
      intArray0[4] = 500;
      gameState0.outpostTurn = 500;
      gameState0.initializeGame(4, intArray0, 500);
      gameState0.endTurn();
      int int1 = gameState0.numPlayers;
      gameState0.isGameOver();
      int int2 = gameState0.MAX_PLAYERS;
      gameState0.isGameOver();
      gameState0.endTurn();
      gameState0.isGameOver();
      int int3 = gameState0.outpostPlayed;
      gameState0.initializeGame(72, intArray0, 0);
      gameState0.playedCardCount = 4;
      gameState0.getCost((-3147));
      gameState0.gainCard(0, 4, 0);
      gameState0.gainCard(0, 0, 0);
      int int4 = gameState0.outpostTurn;
      int int5 = gameState0.whoseTurn;
      int[] intArray1 = gameState0.embargoTokens;
      // Undeclared exception!
      try { 
        gameState0.playCard(500, 1688, 0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.numPlayers = (-2281);
      gameState0.outpostTurn = 1282;
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      gameState0.numPlayers = (-1903);
      intArray0[1] = 2;
      intArray0[2] = (-1903);
      intArray0[3] = 2;
      gameState0.initializeGame(2, intArray0, 2);
      gameState0.DEBUG = false;
      gameState0.endTurn();
      gameState0.initializeGame((-2281), intArray0, 2);
      gameState0.MAX_PLAYERS = 999;
      gameState0.endTurn();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      gameState gameState0 = new gameState();
      int[] intArray0 = new int[3];
      intArray0[0] = (-2463);
      intArray0[1] = 3684;
      gameState0.getCost(7);
      intArray0[2] = 1;
      gameState0.playedCards = intArray0;
      int int0 = gameState0.coins;
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(11);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      gameState gameState0 = new gameState();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player();
      player0.handcount = (-1169);
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      Player player2 = new Player();
      playerArray0[2] = player2;
      Player player3 = new Player();
      playerArray0[3] = player3;
      Player player4 = new Player();
      playerArray0[4] = player4;
      Player player5 = new Player();
      playerArray0[5] = player5;
      Player player6 = new Player();
      playerArray0[6] = player6;
      gameState0.playCard((-875), 19, 492, 492);
      Player player7 = new Player();
      playerArray0[7] = player7;
      gameState0.players = playerArray0;
      player3.MAX_HAND = (-1966);
      player5.deckCount = 184;
      player5.handcount = 184;
      gameState0.isGameOver();
      gameState0.numHandCards();
      // Undeclared exception!
      try { 
        gameState0.supplyCount((-1169));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1169
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = 1;
      gameState0.playCard(1, 0, 3525, 0);
      boolean boolean0 = gameState0.DEBUG;
      int[] intArray0 = new int[8];
      intArray0[2] = (-1);
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.cardEffect(7, 3525, 2351, 0, 9, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      gameState gameState0 = new gameState();
      intWrapper intWrapper0 = new intWrapper();
      gameState0.coins = 12;
      int int0 = gameState0.outpostTurn;
      int int1 = gameState0.numBuys;
      gameState0.numActions = 500;
      // Undeclared exception!
      try { 
        gameState0.playCard(0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.numBuys = 13;
      int int0 = gameState0.playedCardCount;
      gameState0.buyCard(0);
      gameState0.MAX_DECK = 6;
      int int1 = gameState0.whoseTurn;
      gameState0.cardEffect(4, (-750), 9, 1019, (-622), (intWrapper) null);
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(10, 1019, 0, 6, 0, intWrapper0);
      // Undeclared exception!
      try { 
        gameState0.supplyCount((-371));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -371
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      gameState0.whoseTurn = 183;
      intArray0[1] = 13;
      intArray0[2] = 1;
      intArray0[3] = 13;
      intArray0[4] = 13;
      intArray0[5] = 13;
      intArray0[6] = 1;
      gameState0.supplyCount = intArray0;
      gameState0.initializeGame(1, (int[]) null, 1192);
      gameState0.getCost(1);
      gameState0.outpostPlayed = 13;
      int int0 = gameState0.numActions;
      // Undeclared exception!
      try { 
        gameState0.numHandCards();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 183
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      gameState gameState0 = new gameState();
      Player[] playerArray0 = new Player[1];
      Player player0 = new Player();
      playerArray0[0] = player0;
      gameState0.players = playerArray0;
      gameState0.getCost(2);
      // Undeclared exception!
      try { 
        gameState0.supplyCount(2497);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2497
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 4;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[4] = 1;
      gameState0.outpostTurn = 1;
      gameState0.initializeGame(4, intArray0, 1);
      gameState0.endTurn();
      int int0 = gameState0.numPlayers;
      gameState0.isGameOver();
      int int1 = gameState0.numPlayers;
      gameState0.isGameOver();
      gameState0.endTurn();
      gameState0.isGameOver();
      int int2 = gameState0.outpostPlayed;
      gameState0.getCost((-3147));
      gameState0.gainCard(0, 4, (-1334));
      gameState0.gainCard(0, (-1334), (-1334));
      int int3 = gameState0.outpostTurn;
      int int4 = gameState0.whoseTurn;
      int[] intArray1 = gameState0.embargoTokens;
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 60;
      gameState0.cardEffect(1707, 0, 6, 4, (-477), intWrapper0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.MAX_DECK = (-1925);
      gameState0.getCost((-1036));
      gameState0.getCost(12);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.outpostTurn = 0;
      gameState gameState1 = new gameState();
      gameState1.MAX_DECK = 3881;
      gameState0.MAX_HAND = 7;
      gameState0.numActions = 0;
      gameState0.isGameOver();
      gameState1.MAX_PLAYERS = 356;
      gameState0.numActions = 2;
      // Undeclared exception!
      try { 
        gameState1.initializeGame(270, (int[]) null, (-975));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 1;
      intWrapper0.int_wrapped = 12;
      int int0 = gameState0.numPlayers;
      intWrapper0.int_wrapped = 1;
      intWrapper0.int_wrapped = 1;
      intWrapper0.int_wrapped = 1;
      int[] intArray0 = new int[5];
      intArray0[0] = 12;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      gameState0.supplyCount = intArray0;
      intWrapper0.int_wrapped = 269;
      int[] intArray1 = new int[3];
      intArray1[0] = 3;
      intArray1[1] = 3;
      intArray1[2] = 269;
      gameState0.embargoTokens = intArray1;
      gameState0.numPlayers = 3;
      int int1 = gameState0.playedCardCount;
      intWrapper0.int_wrapped = 3;
      gameState0.getCost(3);
      intWrapper0.int_wrapped = (-3586);
      int int2 = gameState0.whoseTurn;
      gameState0.coins = 0;
      gameState0.coins = 0;
      int int3 = gameState0.numActions;
      int int4 = gameState0.numActions;
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      gameState gameState0 = new gameState();
      int int0 = gameState0.phase;
      gameState0.whoseTurn = 1219;
      gameState0.MAX_DECK = 214;
      gameState0.supplyCount = null;
      gameState0.phase = 214;
      gameState0.whoseTurn = 10;
      gameState gameState1 = new gameState();
      gameState1.MAX_PLAYERS = 214;
      gameState1.phase = (-1891);
      int int1 = gameState1.phase;
      gameState0.phase = 23;
      gameState0.whoseTurn();
      // Undeclared exception!
      try { 
        gameState1.numHandCards();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.DEBUG = true;
      gameState0.MAX_HAND = (-892);
      int int0 = gameState0.numBuys;
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 12;
      intWrapper0.int_wrapped = 12;
      gameState0.MAX_DECK = (-892);
      intWrapper0.int_wrapped = (-892);
      intWrapper0.int_wrapped = (-4242);
      // Undeclared exception!
      try { 
        gameState0.cardEffect((-892), 1215, 2412, 0, 12, intWrapper0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.MAX_PLAYERS = 0;
      gameState0.isGameOver();
      int int0 = gameState0.coins;
      gameState0.playCard(0, 28, 28, 0);
      gameState0.whoseTurn = (-4311);
      gameState0.numPlayers = 0;
      gameState0.whoseTurn();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost((-4228));
      gameState0.isGameOver();
      int[] intArray0 = new int[2];
      gameState0.coins = 0;
      intArray0[0] = (-4228);
      gameState0.coins = 4;
      intArray0[1] = (-1);
      gameState0.playedCards = intArray0;
      gameState0.playedCards = intArray0;
      gameState0.DEBUG = false;
      gameState0.whoseTurn = (-1);
      // Undeclared exception!
      try { 
        gameState0.endTurn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.gainCard(3, 3, 2557);
      int[] intArray0 = new int[9];
      intArray0[0] = 3;
      intArray0[1] = 2557;
      intArray0[2] = 2557;
      intArray0[3] = 3;
      intArray0[4] = 3;
      intArray0[5] = 3;
      intArray0[6] = 2;
      intArray0[7] = (-1);
      intArray0[8] = 3;
      gameState0.supplyCount = intArray0;
      // Undeclared exception!
      try { 
        gameState0.isGameOver();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(0);
      gameState0.whoseTurn = 30;
      gameState0.getCost(30);
      gameState0.coins = 0;
      gameState0.whoseTurn = (-1484);
      gameState0.playedCards = null;
      gameState0.MAX_PLAYERS = 0;
      boolean boolean0 = gameState0.DEBUG;
      // Undeclared exception!
      try { 
        gameState0.handCard(3324);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1484
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.phase = 408;
      gameState0.outpostPlayed = (-1537);
      gameState0.numPlayers = (-1);
      gameState0.playCard(3391, 3391, 3391, 3391);
      gameState0.MAX_PLAYERS = 3391;
      int int0 = gameState0.phase;
      gameState gameState1 = new gameState();
      int[] intArray0 = gameState1.playedCards;
      // Undeclared exception!
      try { 
        gameState0.gainCard(3391, 408, (-1853));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3391
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.phase = (-5150);
      gameState0.playCard((-5150), 4, (-1192), (-3906));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.outpostTurn = 72;
      gameState0.getCost(6);
      gameState0.isGameOver();
      int[] intArray0 = new int[6];
      intArray0[0] = 72;
      intArray0[1] = 72;
      intArray0[2] = 72;
      intArray0[3] = (-2078);
      intArray0[4] = 0;
      intArray0[5] = 72;
      gameState0.initializeGame(1, intArray0, (-2078));
      int[] intArray1 = gameState0.embargoTokens;
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = 4;
      gameState gameState0 = new gameState();
      int[] intArray1 = new int[1];
      intArray1[0] = 2423;
      // Undeclared exception!
      try { 
        gameState0.initializeGame(4, intArray1, 46);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.whoseTurn = 0;
      gameState0.outpostTurn = (-2123);
      gameState0.outpostTurn = 699;
      gameState0.whoseTurn();
      int[] intArray0 = new int[2];
      intArray0[0] = 699;
      intArray0[1] = 0;
      gameState0.initializeGame(0, intArray0, 60);
      gameState0.MAX_DECK = (-1);
      intWrapper intWrapper0 = new intWrapper();
      intWrapper0.int_wrapped = 60;
      gameState0.updateCoins(0, intWrapper0);
      gameState0.gainCard(0, 0, (-840));
      gameState0.outpostTurn = 0;
      gameState0.coins = 0;
      // Undeclared exception!
      try { 
        gameState0.gainCard(144, 875, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 144
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(8);
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      Player player2 = new Player();
      player2.shuffle();
      playerArray0[2] = player2;
      Player player3 = new Player();
      playerArray0[3] = player3;
      gameState0.players = playerArray0;
      int int0 = gameState0.phase;
      gameState0.isGameOver();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 119;
      intWrapper intWrapper0 = new intWrapper();
      intArray0[3] = 0;
      intArray0[4] = 8;
      intArray0[5] = 119;
      intArray0[6] = 2351;
      intArray0[7] = 0;
      gameState0.initializeGame(119, intArray0, 2351);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.numPlayers = (-2281);
      gameState0.outpostTurn = (-2281);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[2] = (-2281);
      intArray0[2] = 2;
      gameState0.initializeGame(2, intArray0, 2);
      gameState0.DEBUG = false;
      gameState0.endTurn();
      int int0 = gameState0.MAX_DECK;
      boolean boolean0 = gameState0.DEBUG;
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      gameState gameState0 = new gameState();
      // Undeclared exception!
      try { 
        gameState0.handCard(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      gameState gameState0 = new gameState();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      gameState0.embargoTokens = intArray0;
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.updateCoins(0, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.numPlayers = 0;
      int int0 = gameState0.whoseTurn;
      int int1 = gameState0.outpostTurn;
      // Undeclared exception!
      try { 
        gameState0.gainCard((-1260), 31, 31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1260
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      gameState gameState0 = new gameState();
      int int0 = gameState0.outpostPlayed;
      // Undeclared exception!
      try { 
        gameState0.discardCard(0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      gameState gameState0 = new gameState();
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.updateCoins(799, intWrapper0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 799
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-2412);
      intArray0[1] = (-2412);
      intArray0[2] = (-2412);
      intArray0[3] = 15;
      intArray0[4] = 908;
      intArray0[5] = 908;
      intArray0[6] = (-2412);
      intArray0[7] = 908;
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      gameState gameState0 = new gameState();
      boolean boolean0 = gameState0.DEBUG;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(6, 3248, 3248, 3248, 6, intWrapper0);
      gameState0.playCard(3, 346, 60, 6);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1775);
      gameState0.getCost(5);
      int int0 = gameState0.MAX_HAND;
      gameState0.isGameOver();
      gameState gameState1 = new gameState();
      gameState1.MAX_PLAYERS = (-3994);
      gameState0.numActions = 880;
      gameState1.playedCardCount = 2834;
      intWrapper intWrapper0 = new intWrapper();
      int int1 = gameState1.outpostPlayed;
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(18);
      gameState0.whoseTurn = 30;
      int int0 = gameState0.numBuys;
      gameState0.coins = 4;
      gameState0.whoseTurn = 18;
      gameState0.playedCards = null;
      boolean boolean0 = gameState0.DEBUG;
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      gameState gameState0 = new gameState();
      int int0 = 18;
      gameState0.numBuys = 18;
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.cardEffect(18, 18, 30, 6, 43, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      gameState gameState0 = new gameState();
      int[] intArray0 = new int[4];
      intArray0[0] = 23;
      intArray0[1] = (-2279);
      intArray0[2] = 60;
      intArray0[3] = (-1425);
      gameState0.playedCards = intArray0;
      gameState0.playCard((-2279), (-2279), 23, (-2279));
      int[] intArray1 = new int[6];
      intArray1[0] = 4;
      gameState0.getCost(4);
      intArray1[1] = (-827);
      gameState0.embargoTokens = intArray1;
      gameState0.playCard(1, (-827), 4, 3248);
      intArray1[2] = 500;
      gameState0.MAX_DECK = 4;
      intArray1[3] = 4030;
      gameState0.MAX_HAND = 23;
      intArray1[4] = (-1307);
      intArray1[5] = 12;
      gameState0.supplyCount = intArray1;
      gameState0.getCost((-1809));
      gameState0.initializeGame(1694, intArray1, (-118));
      int int0 = gameState0.outpostTurn;
      gameState0.endTurn();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.numBuys = 14;
      int int0 = gameState0.playedCardCount;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(14, 1727, 1215, 14, 1727, intWrapper0);
      gameState0.buyCard(0);
      gameState0.MAX_DECK = 2438;
      int int1 = gameState0.whoseTurn;
      // Undeclared exception!
      try { 
        gameState0.supplyCount((-371));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -371
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1798);
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.numActions = 19;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect((-1798), 819, (-1798), (-233), 1, intWrapper0);
      gameState0.getCost((-3994));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1775);
      gameState0.getCost(15);
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.getCost(1);
      gameState gameState1 = new gameState();
      gameState1.MAX_PLAYERS = (-3994);
      gameState0.numActions = 880;
      gameState1.playedCardCount = 2834;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(19, 819, (-1775), (-233), 1, intWrapper0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.playedCardCount = (-1798);
      gameState0.isGameOver();
      gameState0.isGameOver();
      gameState0.getCost(1);
      gameState0.numActions = 19;
      Player[] playerArray0 = new Player[9];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      Player player2 = new Player();
      playerArray0[2] = player2;
      Player player3 = new Player();
      playerArray0[3] = player3;
      Player player4 = new Player();
      playerArray0[4] = player4;
      Player player5 = new Player();
      playerArray0[5] = player5;
      Player player6 = new Player();
      playerArray0[6] = player6;
      Player player7 = new Player();
      playerArray0[7] = player7;
      player0.MAX_HAND = (-1798);
      Player player8 = new Player();
      playerArray0[8] = player8;
      gameState0.players = playerArray0;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(12, 819, (-1798), (-233), 1, intWrapper0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(15);
      gameState0.isGameOver();
      gameState0.getCost(4);
      gameState gameState1 = new gameState();
      gameState0.numActions = 880;
      gameState0.numPlayers = 891;
      gameState1.playedCardCount = 2834;
      intWrapper intWrapper0 = new intWrapper();
      // Undeclared exception!
      try { 
        gameState0.cardEffect(19, 880, (-1775), 4, 1, intWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.getCost(9);
      gameState0.numBuys = 14;
      int int0 = gameState0.playedCardCount;
      gameState0.buyCard(0);
      gameState0.cardEffect(14, 6, (-302), 4, (-513), (intWrapper) null);
      gameState0.MAX_DECK = 6;
      int int1 = gameState0.whoseTurn;
      // Undeclared exception!
      try { 
        gameState0.supplyCount((-371));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -371
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.coins = 1;
      gameState0.playCard(0, 0, 3525, 0);
      int[] intArray0 = new int[25];
      intArray0[2] = (-1);
      intArray0[3] = (-670);
      gameState0.supplyCount = intArray0;
      intArray0[5] = 0;
      intArray0[7] = 0;
      gameState0.embargoTokens = intArray0;
      int[] intArray1 = gameState0.playedCards;
      gameState0.isGameOver();
      int int0 = gameState0.whoseTurn;
      // Undeclared exception!
      try { 
        gameState0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      gameState gameState0 = new gameState();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      playerArray0[2] = player0;
      Player player2 = new Player();
      playerArray0[3] = player2;
      Player player3 = new Player();
      playerArray0[4] = player3;
      Player player4 = new Player();
      playerArray0[5] = player4;
      Player player5 = new Player();
      playerArray0[6] = player5;
      Player player6 = new Player();
      playerArray0[7] = player6;
      gameState0.players = playerArray0;
      player2.MAX_HAND = (-1966);
      player4.deckCount = 184;
      player6.discardCount = 184;
      player4.handcount = 184;
      gameState0.isGameOver();
      gameState0.numHandCards();
      int int0 = gameState0.outpostPlayed;
      // Undeclared exception!
      try { 
        gameState0.discardCard(0, 0, 726);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      gameState gameState0 = new gameState();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      gameState0.playCard(7, 7, 7, 7);
      Player player2 = new Player();
      playerArray0[2] = player2;
      Player player3 = new Player();
      playerArray0[3] = player3;
      Player player4 = new Player();
      playerArray0[4] = player4;
      Player player5 = new Player();
      playerArray0[5] = player5;
      player3.MAX_HAND = (-2299);
      Player player6 = new Player();
      Player player7 = new Player();
      playerArray0[7] = player7;
      player1.discardCount = (-1);
      gameState0.players = playerArray0;
      player3.MAX_HAND = (-1966);
      int int0 = 184;
      player5.deckCount = 184;
      player5.handcount = (-1966);
      gameState0.isGameOver();
      gameState0.numHandCards();
      gameState0.supplyCount(0);
      // Undeclared exception!
      try { 
        gameState0.discardCard(0, 0, (-2299));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      gameState gameState0 = new gameState();
      int int0 = gameState0.numPlayers;
      gameState0.outpostTurn = (-1821);
      gameState0.buyCard((-812));
      int int1 = 4;
      gameState0.playedCardCount = 1613;
      gameState0.MAX_DECK = 4;
      gameState gameState1 = new gameState();
      gameState0.DEBUG = true;
      gameState gameState2 = new gameState();
      int int2 = gameState2.playedCardCount;
      gameState2.numPlayers = 0;
      gameState1.DEBUG = true;
      int int3 = gameState2.MAX_DECK;
      gameState2.buyCard(618);
      // Undeclared exception!
      try { 
        gameState0.discardCard(7, 18, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      gameState gameState0 = new gameState();
      int[] intArray0 = new int[2];
      gameState0.coins = 318;
      intArray0[0] = 0;
      intArray0[1] = 807;
      gameState0.supplyCount = intArray0;
      intWrapper intWrapper0 = new intWrapper();
      gameState0.cardEffect(807, (-1), (-1898), 0, (-1898), intWrapper0);
      gameState0.numBuys = 807;
      gameState0.phase = 0;
      int int0 = gameState0.MAX_PLAYERS;
      gameState0.whoseTurn();
      gameState0.getCost(0);
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player();
      playerArray0[0] = player0;
      Player player1 = new Player();
      playerArray0[1] = player1;
      Player player2 = new Player();
      playerArray0[2] = player2;
      Player player3 = new Player();
      playerArray0[3] = player3;
      Player player4 = new Player();
      playerArray0[4] = player4;
      Player player5 = new Player();
      Player player6 = new Player();
      playerArray0[6] = player6;
      gameState0.players = playerArray0;
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      gameState gameState0 = new gameState();
      int[] intArray0 = new int[1];
      gameState0.playedCards = intArray0;
      gameState0.MAX_HAND = (-15);
      gameState0.numActions = (-2228);
      gameState0.initializeGame(0, intArray0, 0);
      gameState0.isGameOver();
      gameState0.coins = (-303);
      gameState0.playedCards = intArray0;
      gameState0.whoseTurn();
      gameState gameState1 = new gameState();
      gameState0.phase = (-2019);
      intWrapper intWrapper0 = new intWrapper();
      gameState1.cardEffect(1, (-2228), (-303), 0, (-1367), intWrapper0);
      gameState gameState2 = new gameState();
      int int0 = gameState1.coins;
      gameState2.getCost(47);
      gameState0.outpostTurn = 1;
      gameState0.MAX_HAND = 0;
      gameState0.handCard(0);
      // Undeclared exception!
      try { 
        gameState2.numHandCards();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("dominion.gameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      gameState gameState0 = new gameState();
      gameState0.isGameOver();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 4;
      gameState0.embargoTokens = intArray0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      gameState0.outpostTurn = 1;
      gameState0.initializeGame(4, intArray0, 1);
      gameState0.endTurn();
      int int0 = gameState0.numPlayers;
      gameState0.isGameOver();
      int int1 = gameState0.numActions;
      gameState0.isGameOver();
      gameState0.endTurn();
      int int2 = gameState0.numBuys;
      int int3 = gameState0.outpostPlayed;
      gameState0.initializeGame(72, intArray0, 0);
      gameState0.playedCardCount = 4;
      gameState0.getCost(14);
      gameState0.gainCard(0, 1, 0);
      gameState0.supplyCount = intArray0;
      gameState0.gainCard(0, 0, 0);
      int int4 = gameState0.outpostTurn;
      int int5 = gameState0.whoseTurn;
      int[] intArray1 = gameState0.embargoTokens;
      gameState0.playCard(1, 1688, 0, 1);
      // Undeclared exception!
      try { 
        gameState0.buyCard((-1267));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1267
         //
         assertThrownBy("dominion.gameState", e);
      }
  }
}
