/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 02:28:37 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.CARD;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CARD_ESTest extends CARD_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CARD[] cARDArray0 = CARD.values();
      assertNotNull(cARDArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CARD cARD0 = CARD.valueOf("curse");
      assertEquals("curse", cARD0.name());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CARD cARD0 = CARD.valueOf("copper");
      assertEquals(4, cARD0.ordinal());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CARD cARD0 = CARD.curse;
      int int0 = cARD0.get_CARD();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CARD.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        CARD.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant dominion.CARD.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CARD cARD0 = CARD.embargo;
      int int0 = cARD0.get_CARD();
      assertEquals(16, int0);
  }
}
