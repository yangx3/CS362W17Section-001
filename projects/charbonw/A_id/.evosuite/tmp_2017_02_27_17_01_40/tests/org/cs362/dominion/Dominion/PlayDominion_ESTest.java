/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 01:08:34 GMT 2017
 */

package org.cs362.dominion.Dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.cs362.dominion.Dominion.PlayDominion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlayDominion_ESTest extends PlayDominion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        PlayDominion.main(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      // Undeclared exception!
      try { 
        playDominion0.initializeGame(1, 0, true);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      // Undeclared exception!
      try { 
        playDominion0.initializeGame(471, 471, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.cs362.dominion.Dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        PlayDominion.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      playDominion0.complete = true;
      playDominion0.complete = true;
      Random.setNextRandom(0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      int int0 = 0;
      int int1 = (-1035);
      boolean boolean0 = true;
      playDominion0.complete = true;
      // Undeclared exception!
      playDominion0.initializeGame((-33), (-33), true);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      playDominion0.complete = true;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8";
      stringArray0[1] = "8";
      stringArray0[2] = "8II> :v'H";
      stringArray0[3] = "wHU";
      stringArray0[4] = "Let the game begin\n";
      stringArray0[5] = "saazm0h*w,";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        PlayDominion.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.cs362.dominion.Dominion.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        PlayDominion.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.cs362.dominion.Dominion.PlayDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      // Undeclared exception!
      playDominion0.initializeGame(0, 0, false);
  }
}
