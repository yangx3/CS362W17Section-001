/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 05:33:57 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.ambassador;
import org.cs362.dominion.card;
import org.cs362.dominion.copper;
import org.cs362.dominion.estate;
import org.cs362.dominion.hand;
import org.cs362.dominion.player;
import org.cs362.dominion.salvager;
import org.cs362.dominion.smithy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class hand_ESTest extends hand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      player player0 = new player();
      hand hand0 = player0.player_hand;
      hand0.num_cards = (-1);
      player0.print_player();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      hand hand0 = new hand();
      hand0.add_card((card) null);
      hand0.add_card((card) null);
      hand0.add_card((card) null);
      card card0 = hand0.remove_card(0);
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      hand hand0 = new hand();
      hand0.add_card((card) null);
      hand0.add_card((card) null);
      // Undeclared exception!
      try { 
        hand0.remove_card(1791);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      hand hand0 = new hand();
      hand0.num_cards = 96;
      // Undeclared exception!
      try { 
        hand0.remove_card((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      player player0 = new player();
      hand hand0 = player0.player_hand;
      hand0.add_card((card) null);
      // Undeclared exception!
      try { 
        hand0.show_hand();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      hand hand0 = new hand();
      smithy smithy0 = new smithy();
      card[] cardArray0 = new card[1];
      salvager salvager0 = new salvager();
      cardArray0[0] = (card) salvager0;
      hand0.player_hand = cardArray0;
      hand0.add_card(smithy0);
      hand0.add_card(smithy0);
      hand0.player_hand = cardArray0;
      // Undeclared exception!
      try { 
        hand0.show_hand();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      hand hand0 = new hand();
      // Undeclared exception!
      try { 
        hand0.remove_card(0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      player player0 = new player();
      hand hand0 = player0.player_hand;
      hand0.num_cards = 2007;
      copper copper0 = new copper();
      // Undeclared exception!
      try { 
        hand0.add_card(copper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      hand hand0 = new hand();
      hand0.num_cards = (-1286);
      // Undeclared exception!
      try { 
        hand0.add_card((card) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      player player0 = new player();
      hand hand0 = player0.player_hand;
      ambassador ambassador0 = new ambassador();
      hand0.num_cards = (-1);
      // Undeclared exception!
      try { 
        hand0.add_card(ambassador0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("org.cs362.dominion.hand", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      hand hand0 = new hand();
      estate estate0 = new estate();
      hand0.add_card(estate0);
      hand0.show_hand();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      hand hand0 = new hand();
      hand0.show_hand();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      hand hand0 = new hand();
      estate estate0 = new estate();
      hand0.add_card(estate0);
      estate estate1 = (estate)hand0.remove_card(0);
      assertSame(estate1, estate0);
  }
}
