/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 05:32:59 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.board;
import org.cs362.dominion.card;
import org.cs362.dominion.deck;
import org.cs362.dominion.estate;
import org.cs362.dominion.player;
import org.cs362.dominion.smithy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class deck_ESTest extends deck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      deck0.add_card((card) null);
      card card0 = deck0.draw_card();
      assertNull(card0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      deck0.player_deck = null;
      // Undeclared exception!
      try { 
        deck0.shuffle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      board board0 = new board();
      deck deck0 = board0.trash_pile;
      deck0.num_cards = (-1726);
      // Undeclared exception!
      try { 
        deck0.shuffle();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         assertThrownBy("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      board board0 = new board();
      deck deck0 = board0.trash_pile;
      deck0.num_cards = 1166;
      // Undeclared exception!
      try { 
        deck0.shuffle();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 594
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      deck deck0 = new deck();
      deck0.player_deck = null;
      // Undeclared exception!
      try { 
        deck0.draw_card();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      deck deck0 = new deck();
      card[] cardArray0 = new card[2];
      deck0.player_deck = cardArray0;
      // Undeclared exception!
      try { 
        deck0.draw_card();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      smithy smithy0 = new smithy();
      deck0.player_deck = null;
      // Undeclared exception!
      try { 
        deck0.add_card(smithy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      deck0.num_cards = (-479);
      // Undeclared exception!
      try { 
        deck0.add_card((card) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      deck deck0 = new deck();
      card[] cardArray0 = new card[2];
      deck0.player_deck = cardArray0;
      // Undeclared exception!
      try { 
        deck0.add_card((card) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("org.cs362.dominion.deck", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      deck0.shuffle();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      player player0 = new player();
      deck deck0 = player0.player_deck;
      estate estate0 = (estate)deck0.draw_card();
      assertNotNull(estate0);
  }
}
