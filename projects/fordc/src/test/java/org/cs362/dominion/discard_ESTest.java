/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 05:38:51 GMT 2017
 */

package org.cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.cs362.dominion.adventurer;
import org.cs362.dominion.baron;
import org.cs362.dominion.card;
import org.cs362.dominion.discard;
import org.cs362.dominion.estate;
import org.cs362.dominion.gold;
import org.cs362.dominion.great_hall;
import org.cs362.dominion.player;
import org.cs362.dominion.smithy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class discard_ESTest extends discard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      discard discard0 = new discard();
      gold gold0 = new gold();
      discard0.add_card(gold0);
      discard0.add_card(gold0);
      discard0.shuffle();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      player player0 = new player();
      discard discard0 = player0.player_discard;
      adventurer adventurer0 = new adventurer();
      discard0.num_cards = (-1);
      // Undeclared exception!
      try { 
        discard0.add_card(adventurer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      player player0 = new player();
      discard discard0 = player0.player_discard;
      discard0.num_cards = 424;
      // Undeclared exception!
      try { 
        discard0.shuffle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      discard discard0 = new discard();
      // Undeclared exception!
      try { 
        discard0.shuffle();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         assertThrownBy("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      player player0 = new player();
      discard discard0 = player0.player_discard;
      smithy smithy0 = new smithy();
      discard0.add_card(smithy0);
      discard0.num_cards = 6;
      // Undeclared exception!
      try { 
        discard0.shuffle();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      discard discard0 = new discard();
      // Undeclared exception!
      try { 
        discard0.draw_card();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      discard discard0 = new discard();
      discard0.num_cards = 1360;
      great_hall great_hall0 = new great_hall();
      // Undeclared exception!
      try { 
        discard0.add_card(great_hall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      discard discard0 = new discard();
      discard0.num_cards = (-2399);
      estate estate0 = new estate();
      // Undeclared exception!
      try { 
        discard0.add_card(estate0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      player player0 = new player();
      discard discard0 = player0.player_discard;
      discard0.add_card((card) null);
      baron baron0 = new baron();
      discard0.add_card(baron0);
      baron baron1 = (baron)discard0.draw_card();
      assertSame(baron1, baron0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      player player0 = new player();
      discard discard0 = player0.player_discard;
      discard0.add_card((card) null);
      discard0.draw_card();
      // Undeclared exception!
      try { 
        discard0.draw_card();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("org.cs362.dominion.discard", e);
      }
  }
}
