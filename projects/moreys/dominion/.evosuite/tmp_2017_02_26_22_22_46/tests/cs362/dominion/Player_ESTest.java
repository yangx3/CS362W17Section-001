/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 27 06:24:51 GMT 2017
 */

package cs362.dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cs362.dominion.Card;
import cs362.dominion.GameState;
import cs362.dominion.Player;
import cs362.dominion.Randomness;
import java.io.ObjectStreamConstants;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.play();
      player0.numBuys = 7;
      Stack<Card> stack0 = new Stack<Card>();
      Integer integer0 = new Integer(7);
      player0.coins = 7;
      player0.buyCard();
      player0.playTtreasureCard();
      player0.toString();
      gameState0.initializeGame();
      Randomness.totalCallsToRandom = 7;
      player0.discard = gameState0.cards;
      player0.playTtreasureCard();
      LinkedList<Card> linkedList0 = player0.deck;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.play();
      player0.numBuys = 8;
      List<Card> list1 = player0.hand;
      Integer integer0 = new Integer(8);
      player0.coins = 8;
      // Undeclared exception!
      try { 
        player0.buyCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, ".MIZOu");
      player0.printStateGame();
      Player player1 = new Player(gameState0, ".MIZOu");
      player1.scoreFor();
      player1.scoreFor();
      player1.discard = null;
      Card.CardName card_CardName0 = Card.CardName.Silver;
      Card.Type card_Type0 = Card.Type.VICTORY;
      player1.discard = null;
      Card card0 = new Card(card_CardName0, card_Type0, 995, (-2915), (-1975));
      // Undeclared exception!
      try { 
        player1.gain(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card.Type card_Type0 = Card.Type.VICTORY;
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "");
      Card.CardName card_CardName0 = Card.CardName.Cooper;
      Card card0 = new Card(card_CardName0, card_Type0, 6, 2525, (-1517));
      player0.discard(card0);
      player0.numBuys = 2525;
      player0.buyCard();
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.play();
      player0.numBuys = 2799;
      List<Card> list1 = player0.hand;
      int int0 = ObjectStreamConstants.baseWireHandle;
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      gameState0.gameBoard = hashMap0;
      player0.numBuys = 8257536;
      Card.CardName card_CardName0 = Card.CardName.Great_Hall;
      Card card0 = Card.getCard(gameState0.cards, card_CardName0);
      hashMap0.put(card0, (Integer) null);
      player0.toString();
      player0.coins = 2799;
      // Undeclared exception!
      try { 
        player0.buyCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      HashMap<Card, Integer> hashMap0 = gameState0.gameBoard;
      gameState0.gameBoard = hashMap0;
      Player player0 = new Player(gameState0, "");
      player0.drawCard();
      Integer integer0 = new Integer(15);
      hashMap0.put((Card) null, integer0);
      Integer integer1 = hashMap0.put((Card) null, integer0);
      Integer.divideUnsigned((-1856), (-1856));
      Player player1 = new Player(gameState0, "[");
      gameState0.gameBoard = hashMap0;
      Card.createCards();
      player1.buy_hand((Card) null);
      player1.playKingdomCard();
      player1.coins = (-724);
      hashMap0.put((Card) null, integer1);
      player0.playedCards = null;
      player1.buy_hand((Card) null);
      Integer integer2 = Integer.getInteger("", 15);
      gameState0.gameBoard.put((Card) null, integer2);
      Randomness.nextRandomInt((-1364));
      player0.gain((Card) null);
      Card.CardName.valueOf("Great_Hall");
      Randomness.nextRandomInt(15);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Player: ");
      Card.CardName card_CardName0 = Card.CardName.Province;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 6, 6, 6);
      player0.gain(card0);
      player0.discard = gameState0.cards;
      player0.hand = gameState0.cards;
      player0.toString();
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      player0.playTtreasureCard();
      player0.drawCard();
      player0.gain(card0);
      // Undeclared exception!
      try { 
        Card.Type.valueOf("Player: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant cs362.dominion.Card.Type.Player: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "Player: ");
      Card.CardName card_CardName0 = Card.CardName.Province;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 6, 6, 6);
      player0.gain(card0);
      player0.discard = gameState0.cards;
      player0.hand = gameState0.cards;
      player0.toString();
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      player0.playTtreasureCard();
      player0.gain(card0);
      player0.initializePlayerTurn();
      // Undeclared exception!
      player0.endTurn();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "TPtN-H!9U=<Kc");
      List<Card> list0 = player0.discard;
      player0.hand = list0;
      LinkedList<Card> linkedList0 = new LinkedList<Card>((Collection<? extends Card>) player0.hand);
      player0.initializePlayerTurn();
      Randomness.nextRandomInt(139);
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Player player0 = new Player((GameState) null, "Player: ");
      player0.drawCard();
      player0.hand = null;
      // Undeclared exception!
      try { 
        player0.discard((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      gameState0.Empty_Piles();
      Player player0 = new Player(gameState0, "D*@J");
      Card.CardName card_CardName0 = Card.CardName.Mine;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 0, 0);
      player0.discard(card0);
      player0.numBuys = 17;
      gameState0.gameBoard = null;
      gameState0.gameBoard = null;
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<Card> stack0 = new Stack<Card>();
      stack0.trimToSize();
      GameState gameState0 = new GameState((List<Card>) stack0);
      Player player0 = new Player(gameState0, (String) null);
      player0.toString();
      player0.numActions = (-331);
      player0.drawCard();
      int int0 = player0.coins;
      Randomness.reset();
      player0.playKingdomCard();
      Randomness.reset();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      Card.CardName card_CardName0 = Card.CardName.Province;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, 4, 1068, 1068);
      player0.discard(card0);
      Card.CardName card_CardName1 = Card.CardName.Great_Hall;
      Card.Type card_Type1 = Card.Type.ACTION;
      LinkedList<Card> linkedList0 = player0.deck;
      player0.playedCards = (List<Card>) linkedList0;
      Card card1 = player0.drawCard();
      card1.equals(card_CardName0);
      linkedList0.add(card1);
      Card card2 = new Card(card_CardName1, card_Type1, 11, (-4167), 0);
      player0.gain(card2);
      LinkedList<Card> linkedList1 = player0.deck;
      Randomness.reset();
      Randomness.reset();
      player0.playKingdomCard();
      // Undeclared exception!
      try { 
        player0.printStateGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      gameState0.getWinners();
      Player player0 = new Player(gameState0, "Duchy");
      // Undeclared exception!
      try { 
        player0.initializePlayerTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      gameState0.isGameOver();
      Player player0 = new Player(gameState0, "");
      player0.drawCard();
      gameState0.isGameOver();
      int int0 = player0.numActions;
      linkedList0.toArray();
      gameState0.addPlayer(player0);
      player0.player_username = ",f{";
      player0.playKingdomCard();
      player0.gain((Card) null);
      player0.playedCards = gameState0.cards;
      Card.Type.values();
      Randomness.nextRandomInt(3451);
      int int1 = player0.coins;
      Card.Type.values();
      // Undeclared exception!
      try { 
        player0.playTtreasureCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((GameState) null, "Buying Coper");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.buy((Card) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card.CardName.values();
      Card.CardName.values();
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      Player player0 = new Player((GameState) null, (String) null);
      player0.playKingdomCard();
      player0.player_username = null;
      player0.toString();
      player0.drawCard();
      Card.Type.values();
      player0.buyCard();
      player0.playKingdomCard();
      // Undeclared exception!
      try { 
        player0.drawCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "");
      player0.drawCard();
      // Undeclared exception!
      try { 
        player0.scoreFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Player player0 = new Player(gameState0, "");
      player0.drawCard();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = Randomness.totalCallsToRandom;
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, "");
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((GameState) null, "IkFSYN.|:2}UXTG");
      player0.numActions = 2;
      player0.playKingdomCard();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.gameBoard = null;
      player0.numBuys = 11;
      List<Card> list1 = player0.hand;
      Integer integer0 = new Integer(11);
      player0.coins = 11;
      // Undeclared exception!
      try { 
        player0.buyCard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      String string0 = "iO/Fi";
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.play();
      player0.numBuys = 6;
      Stack<Card> stack0 = new Stack<Card>();
      Integer integer0 = new Integer(6);
      player0.coins = 6;
      player0.buyCard();
      player0.playTtreasureCard();
      player0.toString();
      gameState0.initializeGame();
      player0.discard = gameState0.cards;
      player0.playTtreasureCard();
      LinkedList<Card> linkedList0 = player0.deck;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector<Card> vector0 = new Vector<Card>();
      GameState gameState0 = new GameState((List<Card>) vector0);
      String string0 = "iO/Fi";
      gameState0.toString();
      Player player0 = new Player(gameState0, "iO/Fi");
      gameState0.play();
      player0.numBuys = 6;
      Stack<Card> stack0 = new Stack<Card>();
      Integer integer0 = new Integer(6);
      player0.coins = 6;
      player0.buyCard();
      player0.toString();
      gameState0.initializeGame();
      Randomness.totalCallsToRandom = 6;
      // Undeclared exception!
      try { 
        player0.endTurn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      Player player0 = new Player(gameState0, "Player: ");
      Card.CardName card_CardName0 = Card.CardName.Province;
      Card.Type card_Type0 = Card.Type.TREASURE;
      player0.numActions = 2223;
      Card card0 = new Card(card_CardName0, card_Type0, 6, 6, 6);
      player0.hand = gameState0.cards;
      player0.toString();
      player0.playTtreasureCard();
      player0.gain(card0);
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      Player player0 = new Player(gameState0, "Player: ");
      player0.numActions = 2223;
      player0.hand = gameState0.cards;
      player0.toString();
      gameState0.initializeGame();
      // Undeclared exception!
      try { 
        player0.playKingdomCard();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "-a3]`_)z#7Sjx@+=+9");
      player0.hand = list0;
      player0.scoreFor();
      player0.player_username = "-a3]`_)z#7Sjx@+=+9";
      player0.endTurn();
      player0.buyCard();
      Card.CardName card_CardName0 = Card.CardName.Village;
      Card.Type card_Type0 = Card.Type.ACTION;
      Card card0 = new Card(card_CardName0, card_Type0, 12, 12, 12);
      // Undeclared exception!
      try { 
        player0.buy_hand(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cs362.dominion.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      Player player0 = new Player(gameState0, ".MIZOu");
      player0.printStateGame();
      player0.player_username = "M#!_P";
      String string0 = player0.player_username;
      assertEquals("M#!_P", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, (String) null);
      player0.scoreFor();
      player0.playTtreasureCard();
      player0.buyCard();
      Card.CardName card_CardName0 = Card.CardName.Embargo;
      // Undeclared exception!
      try { 
        Card.CardName.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
