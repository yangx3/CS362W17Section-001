/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 23:36:22 GMT 2017
 */

package com.mycompany.marksprousedominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mycompany.marksprousedominion.Player;
import com.mycompany.marksprousedominion.boardState;
import com.mycompany.marksprousedominion.playDominion;
import com.mycompany.marksprousedominion.turnState;
import java.util.ArrayList;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class playDominion_ESTest extends playDominion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(113, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      boolean boolean0 = playDominion0.gameDone(boardState0);
      assertFalse(boolean0);
      
      org.evosuite.runtime.Random.setNextRandom(113);
      Player player0 = new Player((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      assertEquals(0, player0.getVictoryPoints());
      
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.getBoard();
      playDominion0.nextPlayer();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(111, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(111);
      Player player0 = playDominion0.getCurrent();
      boardState boardState1 = new boardState((Random) mockRandom0);
      boardState boardState2 = new boardState((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      playDominion0.getPlayers();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(99, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(99);
      Player player0 = new Player((Random) mockRandom0);
      Integer integer0 = new Integer(99);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-82);
      byteArray0[7] = (byte) (-86);
      byteArray0[8] = (byte)8;
      mockRandom0.nextBytes(byteArray0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(111, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(111);
      Player player0 = new Player((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(2, (Random) mockRandom0);
      playDominion0.getCurrent();
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(2, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((long) 452);
      playDominion playDominion0 = new playDominion(452, (Random) mockRandom0);
      Player player0 = playDominion0.getCurrent();
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState boardState1 = playDominion0.getBoard();
      playDominion0.cardEffect((-1532), (turnState) null, boardState1);
      // Undeclared exception!
      try { 
        playDominion0.executeBuy(player0, arrayList0, boardState0, (turnState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1221L));
      playDominion playDominion0 = new playDominion(4, (Random) mockRandom0);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(4, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      mockRandom0.nextFloat();
      playDominion playDominion0 = new playDominion(6, (Random) mockRandom0);
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(0, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      mockRandom0.doubles((long) 216);
      mockRandom0.setSeed(4645L);
      mockRandom0.doubles(1L);
      playDominion playDominion0 = new playDominion(216, (Random) mockRandom0);
      playDominion playDominion1 = new playDominion(1, (Random) mockRandom0);
      Player player0 = playDominion1.getCurrent();
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      arrayList0.add(player0);
      boardState boardState0 = playDominion1.getBoard();
      playDominion1.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.getPlayers();
      playDominion1.nextPlayer();
      playDominion0.getPlayers();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(6, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(99, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(99);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      Integer integer0 = new Integer(99);
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(99, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      org.evosuite.runtime.Random.setNextRandom(99);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(231, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        playDominion0.executeTurn((Player) null, arrayList0, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      playDominion playDominion0 = null;
      try {
        playDominion0 = new playDominion(738, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.boardState", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = null;
      try {
        playDominion0 = new playDominion(2608, (Random) mockRandom0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1224L));
      playDominion playDominion0 = new playDominion(11, (Random) mockRandom0);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(11, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs((long) 194);
      playDominion playDominion0 = new playDominion(194, (Random) mockRandom0);
      playDominion0.nextPlayer();
      playDominion0.getCurrent();
      mockRandom0.longs();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        playDominion0.gameDone((boardState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(1, (Random) mockRandom0);
      playDominion0.nextPlayer();
      playDominion0.getBoard();
      playDominion0.getPlayers();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(231, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        playDominion0.executeMove((Player) null, arrayList0, boardState0, (turnState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(5, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(14);
      playDominion0.nextPlayer();
      playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(5, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(316, (Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(9, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((long) 8);
      playDominion playDominion0 = new playDominion(8, (Random) mockRandom0);
      playDominion0.getCurrent();
      playDominion0.nextPlayer();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(8, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(2, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)0;
      arrayList0.iterator();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)82;
      mockRandom0.nextBytes(byteArray0);
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(3);
      playDominion playDominion1 = new playDominion(30, (Random) mockRandom0);
      playDominion playDominion2 = new playDominion(3, (Random) mockRandom0);
      playDominion0.cardEffect(201, (turnState) null, boardState0);
      // Undeclared exception!
      try { 
        playDominion1.cardEffect(10, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(33, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      org.evosuite.runtime.Random.setNextRandom(33);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.getCurrent();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(43, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      org.evosuite.runtime.Random.setNextRandom(43);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.getCurrent();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((long) 3);
      playDominion playDominion0 = new playDominion(3, (Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.nextPlayer();
      playDominion0.cardEffect(3, (turnState) null, boardState0);
      Player player0 = new Player((Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.getPlayers();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(111, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(111);
      Player player0 = new Player((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(99, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(99);
      Player player0 = new Player((Random) mockRandom0);
      Integer integer0 = new Integer(99);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      playDominion0.cardEffect((-1), (turnState) null, boardState0);
      playDominion0.cardEffect(271, (turnState) null, boardState0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2145L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(111, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(111);
      Player player0 = playDominion0.getCurrent();
      boardState boardState1 = new boardState((Random) mockRandom0);
      boardState boardState2 = new boardState((Random) mockRandom0);
      playDominion0.executeTurn(player0, arrayList0, boardState2);
      mockRandom0.nextGaussian();
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      playDominion0.getPlayers();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2140L);
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(111, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(111);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      boardState boardState2 = new boardState((Random) mockRandom0);
      playDominion0.executeTurn(player0, arrayList0, boardState2);
      mockRandom0.nextGaussian();
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      playDominion0.getPlayers();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1221L));
      playDominion playDominion0 = new playDominion(12, (Random) mockRandom0);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(12, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = null;
      try {
        playDominion0 = new playDominion((-44), (Random) mockRandom0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(1, (Random) mockRandom0);
      playDominion0.getCurrent();
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      playDominion0.nextPlayer();
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(1, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      playDominion playDominion0 = new playDominion(316, (Random) mockRandom0);
      boardState boardState0 = playDominion0.getBoard();
      // Undeclared exception!
      try { 
        playDominion0.cardEffect(7, (turnState) null, boardState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.playDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.longs();
      playDominion playDominion0 = new playDominion(99, (Random) mockRandom0);
      ArrayList<Player> arrayList0 = playDominion0.getPlayers();
      boardState boardState0 = playDominion0.getBoard();
      playDominion0.gameDone(boardState0);
      org.evosuite.runtime.Random.setNextRandom(99);
      Player player0 = new Player((Random) mockRandom0);
      boardState boardState1 = new boardState((Random) mockRandom0);
      mockRandom0.nextGaussian();
      playDominion0.executeTurn(player0, arrayList0, boardState1);
      playDominion0.nextPlayer();
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      playDominion0.executeTurn(player0, arrayList0, boardState0);
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      playDominion0.executeTurn(player0, arrayList1, boardState0);
      playDominion playDominion1 = new playDominion(99, (Random) mockRandom0);
      assertFalse(playDominion1.equals((Object)playDominion0));
  }
}
