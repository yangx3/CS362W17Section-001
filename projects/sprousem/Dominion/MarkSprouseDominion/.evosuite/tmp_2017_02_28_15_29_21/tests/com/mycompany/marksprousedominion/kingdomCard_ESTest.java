/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 23:39:18 GMT 2017
 */

package com.mycompany.marksprousedominion;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mycompany.marksprousedominion.kingdomCard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class kingdomCard_ESTest extends kingdomCard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      kingdomCard kingdomCard0 = new kingdomCard(1175, 1175, 1175, 1175, "\tTreasure: ");
      int int0 = kingdomCard0.getFunctionIndex();
      assertEquals(1175, kingdomCard0.getVictory());
      assertEquals(1175, int0);
      assertEquals(1175, kingdomCard0.getTreasure());
      assertEquals(2, kingdomCard0.getType());
      assertEquals(1175, kingdomCard0.getCost());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      kingdomCard kingdomCard0 = new kingdomCard((-2802), (-2802), (-1683), (-2802), "");
      int int0 = kingdomCard0.getFunctionIndex();
      assertEquals(-2802, kingdomCard0.getTreasure());
      assertEquals(2, kingdomCard0.getType());
      assertEquals(-1683, kingdomCard0.getVictory());
      assertEquals((-2802), int0);
      assertEquals(-2802, kingdomCard0.getCost());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      kingdomCard kingdomCard0 = new kingdomCard((-2802), (-2802), (-1683), (-2802), "");
      kingdomCard0.setFunctionIndex((-2802));
      assertEquals(2, kingdomCard0.getType());
      assertEquals(-2802, kingdomCard0.getCost());
      assertEquals(-1683, kingdomCard0.getVictory());
      assertEquals(-2802, kingdomCard0.getTreasure());
      assertEquals(-2802, kingdomCard0.getFunctionIndex());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      kingdomCard kingdomCard0 = new kingdomCard(0, (-1), (-1), 0, "e&");
      kingdomCard kingdomCard1 = (kingdomCard)kingdomCard0.clone();
      assertEquals(0, kingdomCard1.getCost());
      assertEquals(-1, kingdomCard1.getTreasure());
      assertEquals(-1, kingdomCard1.getVictory());
      assertEquals(0, kingdomCard1.getFunctionIndex());
      assertEquals(2, kingdomCard1.getType());
      assertNotSame(kingdomCard1, kingdomCard0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      kingdomCard kingdomCard0 = new kingdomCard((-1698), 0, 0, 0, "SnyoC");
      int int0 = kingdomCard0.getFunctionIndex();
      assertEquals(2, kingdomCard0.getType());
      assertEquals(0, int0);
      assertEquals(-1698, kingdomCard0.getCost());
      assertEquals(0, kingdomCard0.getVictory());
      assertEquals(0, kingdomCard0.getTreasure());
  }
}
