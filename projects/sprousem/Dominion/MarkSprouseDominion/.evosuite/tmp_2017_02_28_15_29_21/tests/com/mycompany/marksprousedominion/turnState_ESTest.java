/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 23:40:13 GMT 2017
 */

package com.mycompany.marksprousedominion;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mycompany.marksprousedominion.Player;
import com.mycompany.marksprousedominion.boardState;
import com.mycompany.marksprousedominion.turnState;
import java.util.ArrayList;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class turnState_ESTest extends turnState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.setTreasure(12);
      int int0 = turnState0.getTreasure();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.setTreasure((-1384));
      int int0 = turnState0.getTreasure();
      assertEquals((-1384), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Player player0 = new Player((Random) mockRandom0);
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      boardState boardState0 = new boardState((Random) mockRandom0);
      turnState turnState0 = new turnState(player0, (ArrayList<Player>) arrayList0, boardState0);
      turnState0.getOpponents();
      assertEquals(1, turnState0.getActions());
      assertEquals(1, turnState0.getBuys());
      assertEquals(0, turnState0.getTreasure());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Player player0 = new Player((Random) mockRandom0);
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      boardState boardState0 = new boardState((Random) mockRandom0);
      turnState turnState0 = new turnState(player0, (ArrayList<Player>) arrayList0, boardState0);
      arrayList0.add(player0);
      turnState0.getOpponents();
      assertEquals(1, turnState0.getActions());
      assertEquals(1, turnState0.getBuys());
      assertEquals(0, turnState0.getTreasure());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Player player0 = new Player((Random) mockRandom0);
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      boardState boardState0 = new boardState((Random) mockRandom0);
      turnState turnState0 = new turnState(player0, (ArrayList<Player>) arrayList0, boardState0);
      turnState0.getCurrent();
      assertEquals(1, turnState0.getBuys());
      assertEquals(0, turnState0.getTreasure());
      assertEquals(1, turnState0.getActions());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.setBuys((-1200));
      int int0 = turnState0.getBuys();
      assertEquals((-1200), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.setActions((-1384));
      int int0 = turnState0.getActions();
      assertEquals((-1384), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.getCurrent();
      assertEquals(1, turnState0.getActions());
      assertEquals(1, turnState0.getBuys());
      assertEquals(0, turnState0.getTreasure());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      int int0 = turnState0.getBuys();
      assertEquals(1, int0);
      assertEquals(0, turnState0.getTreasure());
      assertEquals(1, turnState0.getActions());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      assertEquals(1, turnState0.getActions());
      
      turnState0.setActions(0);
      int int0 = turnState0.getActions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.printInfo();
      assertEquals(0, turnState0.getTreasure());
      assertEquals(1, turnState0.getActions());
      assertEquals(1, turnState0.getBuys());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      int int0 = turnState0.getTreasure();
      assertEquals(1, turnState0.getBuys());
      assertEquals(1, turnState0.getActions());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      assertEquals(1, turnState0.getBuys());
      
      turnState0.setBuys(0);
      int int0 = turnState0.getBuys();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      turnState0.getOpponents();
      assertEquals(0, turnState0.getTreasure());
      assertEquals(1, turnState0.getActions());
      assertEquals(1, turnState0.getBuys());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      turnState turnState0 = new turnState((Player) null, (ArrayList<Player>) null, (boardState) null);
      int int0 = turnState0.getActions();
      assertEquals(0, turnState0.getTreasure());
      assertEquals(1, turnState0.getBuys());
      assertEquals(1, int0);
  }
}
