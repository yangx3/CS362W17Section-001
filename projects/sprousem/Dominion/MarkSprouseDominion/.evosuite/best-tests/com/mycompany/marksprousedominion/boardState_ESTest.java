/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 28 23:38:52 GMT 2017
 */

package com.mycompany.marksprousedominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mycompany.marksprousedominion.Card;
import com.mycompany.marksprousedominion.boardState;
import java.util.ArrayList;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class boardState_ESTest extends boardState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(6);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        boardState0.cardBought(17);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 10
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      // Undeclared exception!
      try { 
        boardState0.cardBought((-1185));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boardState boardState0 = null;
      try {
        boardState0 = new boardState((Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.mycompany.marksprousedominion.boardState", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(7);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.cardBought(3);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      ArrayList<ArrayList<Card>> arrayList0 = (ArrayList<ArrayList<Card>>)boardState0.getSupply();
      assertEquals(7, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      boardState0.getKingdom();
      assertEquals(17, boardState0.getOptions());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boardState boardState0 = new boardState((Random) mockRandom0);
      int int0 = boardState0.getOptions();
      assertEquals(17, int0);
  }
}
