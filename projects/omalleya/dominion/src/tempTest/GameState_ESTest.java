/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 14 17:17:23 GMT 2017
 */

package com.omalleya.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.omalleya.app.Card;
import com.omalleya.app.GameState;
import com.omalleya.app.Player;
import com.omalleya.app.Randomness;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GameState_ESTest extends GameState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      gameState0.endGame();
      Stack<Player> stack0 = new Stack<Player>();
      gameState0.players = (List<Player>) stack0;
      gameState0.clone();
      gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      gameState0.initializeGame();
      Player player1 = new Player((GameState) null, "K");
      player1.cleanUp();
      gameState0.addPlayer(player1);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.endGame();
      Stack<Player> stack0 = new Stack<Player>();
      gameState0.players = (List<Player>) stack0;
      gameState0.clone();
      Randomness.random = null;
      gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      Player player1 = player0.clone();
      stack0.add(player1);
      Player player2 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      stack0.add(player2);
      Player player3 = new Player((GameState) null, "");
      player3.cleanUp();
      gameState0.addPlayer(player3);
      gameState0.addPlayer(player2);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.endGame();
      gameState0.clone();
      Randomness.random = null;
      gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      Player player1 = new Player((GameState) null, "");
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      player1.discarded = linkedList0;
      player1.cleanUp();
      gameState0.addPlayer(player1);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.endGame();
      Stack<Player> stack0 = new Stack<Player>();
      gameState0.players = (List<Player>) stack0;
      gameState0.clone();
      gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      stack0.add(player0);
      Player player1 = new Player((GameState) null, "");
      player1.cleanUp();
      gameState0.addPlayer(player1);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((GameState) null, (String) null);
      Player player1 = player0.clone();
      ArrayList<Card> arrayList0 = player1.hand;
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      gameState0.clone();
      gameState0.play();
      GameState gameState1 = gameState0.clone();
      gameState1.addPlayer(player0);
      player0.action();
      player0.deck = null;
      // Undeclared exception!
      try { 
        gameState1.getWinners();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Randomness.reset(147L);
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      Card.CardName card_CardName0 = Card.CardName.Copper;
      Card.Type card_Type0 = Card.Type.ACTION;
      LinkedList<Player> linkedList1 = new LinkedList<Player>();
      gameState0.players = (List<Player>) linkedList1;
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      gameState0.gameBoard = hashMap0;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 2807, 3498);
      Integer integer0 = new Integer(2807);
      hashMap0.put(card0, integer0);
      gameState0.removeCard(card0);
      GameState gameState1 = new GameState((List<Card>) linkedList0);
      List<Player> list0 = gameState1.players;
      Card.CardName.values();
      Randomness.reset(3498);
      Randomness.random = null;
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      LinkedList<Player> linkedList0 = new LinkedList<Player>();
      gameState0.players = (List<Player>) linkedList0;
      linkedList0.toArray();
      List<Player> list0 = gameState0.players;
      // Undeclared exception!
      try { 
        gameState0.play();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GameState gameState0 = new GameState((List<Card>) null);
      // Undeclared exception!
      try { 
        gameState0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = (MockRandom)Randomness.random;
      LinkedList<Card> linkedList0 = new LinkedList<Card>();
      GameState gameState0 = new GameState((List<Card>) linkedList0);
      gameState0.toString();
      Player player0 = new Player(gameState0, "p+rNI$g#t$(Q4;6eX");
      Player player1 = player0.clone();
      LinkedList<Card> linkedList1 = player1.deck;
      Card.CardName card_CardName0 = Card.CardName.Adventurer;
      Card.CardName card_CardName1 = Card.CardName.Gardens;
      Card.Type card_Type0 = Card.Type.TREASURE;
      Card card0 = new Card(card_CardName1, card_Type0, 0, 0, 0);
      linkedList1.add(card0);
      player1.coins = 0;
      Card.getCard(linkedList1, card_CardName0);
      linkedList0.add((Card) null);
      // Undeclared exception!
      try { 
        gameState0.endGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.Card", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashSet<Card> hashSet0 = new HashSet<Card>();
      Card.Type card_Type0 = Card.Type.ACTION;
      Card.CardName card_CardName0 = Card.CardName.Baron;
      Card card0 = new Card(card_CardName0, card_Type0, 0, 0, 656);
      hashSet0.add(card0);
      List<Card> list0 = Card.filter(hashSet0, card_Type0);
      GameState gameState0 = new GameState(list0);
      Player player0 = new Player(gameState0, "^~dQB");
      gameState0.addPlayer(player0);
      HashMap<Card, Integer> hashMap0 = new HashMap<Card, Integer>();
      card0.clone();
      gameState0.gameBoard = hashMap0;
      gameState0.play();
      Integer integer0 = new Integer((-396));
      hashMap0.put(card0, integer0);
      gameState0.toString();
      HashMap<Card, Integer> hashMap1 = gameState0.gameBoard;
      gameState0.getWinners();
      List<Player> list1 = gameState0.players;
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card.CardName.values();
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.play();
      String string0 = "";
      Player player0 = new Player(gameState0, "");
      gameState0.addPlayer(player0);
      GameState gameState1 = gameState0.clone();
      gameState1.gameBoard = gameState0.gameBoard;
      gameState0.endGame();
      gameState0.play();
      gameState1.play();
      gameState0.toString();
      gameState0.endGame();
      gameState1.initializeGame();
      // Undeclared exception!
      try { 
        Card.Type.valueOf("\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.omalleya.app.Card.Type.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.endGame();
      Stack<Player> stack0 = new Stack<Player>();
      gameState0.players = (List<Player>) stack0;
      gameState0.clone();
      gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      Player player1 = new Player((GameState) null, "");
      player1.cleanUp();
      gameState0.addPlayer(player1);
      gameState0.addPlayer(player0);
      // Undeclared exception!
      try { 
        gameState0.initializeGame();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card.Type.values();
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      GameState gameState0 = new GameState((List<Card>) arrayList0);
      Card.CardName card_CardName0 = Card.CardName.Smithy;
      Card.Type card_Type0 = Card.Type.TREASURE;
      int int0 = 0;
      Card card0 = new Card(card_CardName0, card_Type0, 807, 0, 5);
      card0.clone();
      // Undeclared exception!
      try { 
        gameState0.removeCard(card0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.omalleya.app.GameState", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      List<Card> list0 = Card.createCards();
      GameState gameState0 = new GameState(list0);
      gameState0.endGame();
      Stack<Player> stack0 = new Stack<Player>();
      gameState0.players = (List<Player>) stack0;
      gameState0.clone();
      Randomness.random = null;
      GameState gameState1 = gameState0.clone();
      Player player0 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      player0.scoreFor();
      Player player1 = player0.clone();
      stack0.add(player1);
      Player player2 = new Player((GameState) null, "org.apache.oro.io.GlobFilenameFilter");
      stack0.add(player2);
      stack0.add(player2);
      Player player3 = new Player((GameState) null, "");
      player3.cleanUp();
      gameState0.addPlayer(player3);
      gameState0.addPlayer(player2);
      gameState0.initializeGame();
      Card.CardName.values();
      gameState0.clone();
      gameState1.getWinners();
      gameState1.toString();
      Card.Type[] card_TypeArray0 = Card.Type.values();
      GameState gameState2 = new GameState(list0);
      Card.Type[] card_TypeArray1 = Card.Type.values();
      assertFalse(card_TypeArray1.equals((Object)card_TypeArray0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card.createCards();
      Card.Type[] card_TypeArray0 = Card.Type.values();
      assertNotNull(card_TypeArray0);
  }
}
